<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpDX.Direct3D10</name>
    </assembly>
    <members>
        <member name="T:SharpDX.Direct3D10.Viewport">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_VIEWPORT</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Viewport.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Viewport" /> structure.
            </summary>
            <param name = "x">The X coordinate of the viewport.</param>
            <param name = "y">The Y coordinate of the viewport.</param>
            <param name = "width">The width of the viewport.</param>
            <param name = "height">The height of the viewport.</param>
            <param name = "minZ">The minimum Z distance of the viewport.</param>
            <param name = "maxZ">The maximum Z distance of the viewport.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Viewport.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Viewport" /> structure.
            </summary>
            <param name = "x">The X coordinate of the viewport.</param>
            <param name = "y">The Y coordinate of the viewport.</param>
            <param name = "width">The width of the viewport.</param>
            <param name = "height">The height of the viewport.</param>
        </member>
        <member name="F:SharpDX.Direct3D10.Viewport.TopLeftX">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int TopLeftX</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Viewport.TopLeftY">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int TopLeftY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Viewport.Width">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Width</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Viewport.Height">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Height</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Viewport.MinDepth">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float MinDepth</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Viewport.MaxDepth">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float MaxDepth</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RasterizerState">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10RasterizerState</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DeviceChild">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10DeviceChild</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.DeviceChild.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.DeviceChild"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.DeviceChild.GetDevice(SharpDX.Direct3D10.Device@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <unmanaged>void ID3D10DeviceChild::GetDevice([Out] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.DeviceChild.GetPrivateData(System.Guid,System.Int32@,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="guid">No documentation.</param>
            <param name="dataSizeRef">No documentation.</param>
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10DeviceChild::GetPrivateData([In] GUID* guid,[InOut] int* pDataSize,[Out, Buffer, Optional] void* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.DeviceChild.SetPrivateData(System.Guid,System.Int32,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="guid">No documentation.</param>
            <param name="dataSize">No documentation.</param>
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10DeviceChild::SetPrivateData([In] GUID* guid,[In] int DataSize,[In, Buffer, Optional] const void* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.DeviceChild.SetPrivateDataInterface(System.Guid,SharpDX.ComObject)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="guid">No documentation.</param>
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10DeviceChild::SetPrivateDataInterface([In] GUID* guid,[In, Optional] const IUnknown* pData)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.DeviceChild.Device">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10DeviceChild::GetDevice([Out] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.RasterizerState.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.RasterizerStateDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D10.RasterizerState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.RasterizerState.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.RasterizerStateDescription@)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D10.RasterizerState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.RasterizerState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.RasterizerState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.RasterizerState.GetDescription(SharpDX.Direct3D10.RasterizerStateDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10RasterizerState::GetDesc([Out] D3D10_RASTERIZER_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.RasterizerState.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10RasterizerState::GetDesc([Out] D3D10_RASTERIZER_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.VertexBufferBinding">
            <summary>
              Properties defining the way a buffer (containing vertex data) is bound
              to the pipeline for rendering.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D10.VertexBufferBinding.#ctor(SharpDX.Direct3D10.Buffer,System.Int32,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.VertexBufferBinding" /> struct.
            </summary>
            <param name = "buffer">The buffer being bound.</param>
            <param name = "stride">The stride between vertex element (in bytes).</param>
            <param name = "offset">The offset to the first vertex (in bytes).</param>
        </member>
        <member name="P:SharpDX.Direct3D10.VertexBufferBinding.Buffer">
            <summary>
              Gets or sets the buffer being bound.
            </summary>
        </member>
        <member name="P:SharpDX.Direct3D10.VertexBufferBinding.Stride">
            <summary>
              Gets or sets the stride between vertex elements in the buffer (in bytes).
            </summary>
        </member>
        <member name="P:SharpDX.Direct3D10.VertexBufferBinding.Offset">
            <summary>
              Gets or sets the offset from the start of the buffer of the first vertex to use (in bytes).
            </summary>
        </member>
        <member name="T:SharpDX.Direct3D10.TextureLoadInformation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_TEXTURE_LOAD_INFO</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureLoadInformation.SourceRegion">
            <summary>	
            Source texture box (see <see cref="T:SharpDX.Direct3D10.ResourceRegion"/>). 	
            </summary>	
            <unmanaged>D3D11_BOX* pSrcBox</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureLoadInformation.DestinationRegion">
            <summary>	
            Destination texture box (see <see cref="T:SharpDX.Direct3D10.ResourceRegion"/>). 	
            </summary>	
            <unmanaged>D3D11_BOX* pDstBox</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureLoadInformation.SourceRegionPointer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BOX* pSrcBox</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureLoadInformation.DestinationRegionPointer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BOX* pDstBox</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureLoadInformation.FirstSourceMip">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int SrcFirstMip</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureLoadInformation.FirstDestinationMip">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int DstFirstMip</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureLoadInformation.MipCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int NumMips</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureLoadInformation.FirstSourceElement">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int SrcFirstElement</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureLoadInformation.FirstDestinationElement">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int DstFirstElement</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureLoadInformation.ElementCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int NumElements</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureLoadInformation.Filter">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_FLAG Filter</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureLoadInformation.MipFilter">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_FLAG MipFilter</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Device">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10Device</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.#ctor(SharpDX.Direct3D10.DriverType)">
            <summary>
              Constructor for a D3D10 Device. See <see cref="M:SharpDX.Direct3D10.D3D10.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,System.Int32,SharpDX.Direct3D10.Device@)"/> for more information.
            </summary>
            <param name="driverType"></param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.#ctor(SharpDX.DXGI.Adapter)">
            <summary>
              Constructor for a D3D10 Device. See <see cref="M:SharpDX.Direct3D10.D3D10.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,System.Int32,SharpDX.Direct3D10.Device@)"/> for more information.
            </summary>
            <param name="adapter"></param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.#ctor(SharpDX.Direct3D10.DriverType,SharpDX.Direct3D10.DeviceCreationFlags)">
            <summary>
              Constructor for a D3D10 Device. See <see cref="M:SharpDX.Direct3D10.D3D10.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,System.Int32,SharpDX.Direct3D10.Device@)"/> for more information.
            </summary>
            <param name="driverType"></param>
            <param name="flags"></param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.#ctor(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DeviceCreationFlags)">
            <summary>
              Constructor for a D3D10 Device. See <see cref="M:SharpDX.Direct3D10.D3D10.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,System.Int32,SharpDX.Direct3D10.Device@)"/> for more information.
            </summary>
            <param name="adapter"></param>
            <param name="flags"></param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.ClearRenderTargetView(SharpDX.Direct3D10.RenderTargetView,System.Drawing.Color)">
            <summary>	
            Set all the elements in a render target to one value.	
            </summary>	
            <remarks>	
            Applications that wish to clear a render target to a specific integer value bit pattern should render a screen-aligned quad instead of using this method.  The reason for this is because this method accepts as input a floating point value, which may not have the same bit pattern as the original integer.   Differences between Direct3D 9 and Direct3D 10: Unlike Direct3D 9, the full extent of the resource view is always cleared. Viewport and scissor settings are not applied.   ? 	
            </remarks>	
            <param name="renderTargetViewRef">Pointer to the rendertarget. </param>
            <param name="color">A 4-component array that represents the color to fill the render target with. </param>
            <unmanaged>void ID3D10Device::ClearRenderTargetView([In] ID3D10RenderTargetView* pRenderTargetView,[In] const float* ColorRGBA)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateWithSwapChain(SharpDX.Direct3D10.DriverType,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.DXGI.SwapChainDescription,SharpDX.Direct3D10.Device@,SharpDX.DXGI.SwapChain@)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Device" /> class along with a new <see cref = "T:SharpDX.DXGI.SwapChain" /> used for rendering.
            </summary>
            <param name = "driverType">The type of device to create.</param>
            <param name = "flags">A list of runtime layers to enable.</param>
            <param name = "swapChainDescription">Details used to create the swap chain.</param>
            <param name = "device">When the method completes, contains the created device instance.</param>
            <param name = "swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateWithSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.DXGI.SwapChainDescription,SharpDX.Direct3D10.Device@,SharpDX.DXGI.SwapChain@)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Device" /> class along with a new <see cref = "T:SharpDX.DXGI.SwapChain" /> used for rendering.
            </summary>
            <param name = "adapter">The video adapter on which the device should be created.</param>
            <param name = "flags">A list of runtime layers to enable.</param>
            <param name = "swapChainDescription">Details used to create the swap chain.</param>
            <param name = "device">When the method completes, contains the created device instance.</param>
            <param name = "swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateWithSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.DXGI.SwapChainDescription,SharpDX.Direct3D10.Device@,SharpDX.DXGI.SwapChain@)">
            <summary>
              This overload has been deprecated. Use one of the alternatives that does not take both an adapter and a driver type.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GetCounterMetadata(SharpDX.Direct3D10.CounterDescription)">
            <summary>
            Get the type, name, units of measure, and a description of an existing counter.	
            </summary>
            <param name="counterDescription">The counter description.</param>
            <returns>Description of the counter</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GetPredication(System.Boolean@)">
            <summary>	
            Get the rendering predicate state.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="predicateValue">a boolean to fill with the predicate comparison value. FALSE upon device creation. </param>
            <returns>a reference to a predicate (see <see cref="T:SharpDX.Direct3D10.Predicate"/>).</returns>
            <unmanaged>void ID3D10Device::GetPredication([Out, Optional] ID3D10Predicate** ppPredicate,[Out, Optional] BOOL* pPredicateValue)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OpenSharedResource``1(System.IntPtr)">
            <summary>
            Give a device access to a shared resource created on a different Direct3d device.
            </summary>
            <typeparam name="T">The type of the resource we are gaining access to.</typeparam>
            <param name="resourceHandle">A resource handle. See remarks.</param>
            <returns>
            This method returns a reference to the resource we are gaining access to.
            </returns>
            <remarks>
            To share a resource between two Direct3D 10 devices the resource must have been created with the  <see cref="F:SharpDX.Direct3D10.ResourceOptionFlags.Shared"/> flag, if it was created using the ID3D10Device interface.  If it was created using the IDXGIDevice interface, then the resource is always shared. The REFIID, or GUID, of the interface to the resource can be obtained by using the __uuidof() macro.  For example, __uuidof(ID3D10Buffer) will get the GUID of the interface to a buffer resource. When sharing a resource between two Direct3D 10 devices the unique handle of the resource can be obtained by querying the resource for the <see cref="T:SharpDX.DXGI.Resource"/> interface and then calling {{GetSharedHandle}}.
            <code> IDXGIResource* pOtherResource(NULL);
            hr = pOtherDeviceResource-&gt;QueryInterface( __uuidof(IDXGIResource), (void**)&amp;pOtherResource );
            HANDLE sharedHandle;
            pOtherResource-&gt;GetSharedHandle(&amp;sharedHandle); </code>
            The only resources that can be shared are 2D non-mipmapped textures. To share a resource between a Direct3D 9 device and a Direct3D 10 device the texture must have been created using  the pSharedHandle argument of {{CreateTexture}}.   The shared Direct3D 9 handle is then passed to OpenSharedResource in the hResource argument. The following code illustrates the method calls involved.
            <code> sharedHandle = NULL; // must be set to NULL to create, can use a valid handle here to open in D3D9
            pDevice9-&gt;CreateTexture(..., pTex2D_9, &amp;sharedHandle);
            ...
            pDevice10-&gt;OpenSharedResource(sharedHandle, __uuidof(ID3D10Resource), (void**)(&amp;tempResource10));
            tempResource10-&gt;QueryInterface(__uuidof(ID3D10Texture2D), (void**)(&amp;pTex2D_10));
            tempResource10-&gt;Release();
            // now use pTex2D_10 with pDevice10    </code>
            Textures being shared from D3D9 to D3D10 have the following restrictions.  Textures must be 2D Only 1 mip level is allowed Texture must have default usage Texture must be write only MSAA textures are not allowed Bind flags must have SHADER_RESOURCE and RENDER_TARGET set Only R10G10B10A2_UNORM, R16G16B16A16_FLOAT and R8G8B8A8_UNORM formats are allowed  If a shared texture is updated on one device <see cref="M:SharpDX.Direct3D10.Device.Flush"/> must be called on that device.
            </remarks>
            <unmanaged>HRESULT ID3D10Device::OpenSharedResource([In] void* hResource,[In] GUID* ReturnedInterface,[Out, Optional] void** ppResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CopyResource(SharpDX.Direct3D10.Resource,SharpDX.Direct3D10.Resource)">
            <summary>	
            Copy the entire contents of the source resource to the destination resource using the GPU. 	
            </summary>	
            <remarks>	
            This method is unusual in that it causes the GPU to perform the copy operation (similar to a memcpy by the CPU). As a result, it has a few restrictions designed for improving performance. For instance, the source and destination resources:  Must be different resources. Must be the same {{type}}. Must have identical dimensions (including width, height, depth, and size as appropriate). Will only be copied. CopyResource does not support any stretch, color key, blend, or format conversions. Must have compatible {{formats}}, which means the formats must be identical or at least from the same type group. For example, a DXGI_FORMAT_R32G32B32_FLOAT texture can be copied to an DXGI_FORMAT_R32G32B32_UINT texture since both of these formats are in the DXGI_FORMAT_R32G32B32_TYPELESS group. May not be currently {{mapped}}.   {{Immutable}}, and {{depth-stencil}} resources cannot be used as a destination.  Resources created with {{multisampling capability}} cannot be used as either a source or destination. The method is an asynchronous call which may be added to the command-buffer queue. This attempts to remove pipeline stalls that may occur when copying data. See {{performance considerations}} for more details. An application that only needs to copy a portion of the data in a resource should use <see cref="M:SharpDX.Direct3D10.Device.CopySubresourceRegion_(SharpDX.Direct3D10.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D10.Resource,System.Int32,System.Nullable{SharpDX.Direct3D10.ResourceRegion})"/> instead.   Differences between Direct3D 10 and Direct3D 10.1: Direct3D 10.1 enables depth-stencil resources to be used as either a source or destination. Direct3D 10.1 enables multisampled resources to be used as source and destination only if both source and destination have identical multisampled count and quality. If source and destination differ in multisampled count and quality or if the source is multisampled and the destination is not multisampled (or vice versa), the call to ID3D10Device::CopyResource fails. It is possible to copy between prestructured+typed resources and block-compressed textures. See {{Format Conversion using Direct3D 10.1}}.   ? 	
            </remarks>	
            <param name="source">A reference to the source resource (see <see cref="T:SharpDX.Direct3D10.Resource"/>). </param>
            <param name="destination">A reference to the destination resource (see <see cref="T:SharpDX.Direct3D10.Resource"/>). </param>
            <unmanaged>void ID3D10Device::CopyResource([In] ID3D10Resource* pDstResource,[In] ID3D10Resource* pSrcResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CopySubresourceRegion(SharpDX.Direct3D10.Resource,System.Int32,System.Nullable{SharpDX.Direct3D10.ResourceRegion},SharpDX.Direct3D10.Resource,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>	
            Copy a region from a source resource to a destination resource.	
            </summary>	
            <remarks>	
            The source box must be within the size of the source resource. The destination location is an absolute value (not a relative value). The destination location can be offset from the source location; however, the size of the region to copy (including the destination location) must fit in the destination resource. If the resources are buffers, all coordinates are in bytes; if the resources are textures, all coordinates are in texels.   {{D3D10CalcSubresource}} is a helper function for calculating subresource indexes. CopySubresourceRegion performs the copy on the GPU (similar to a memcpy by the CPU). As a consequence, the source and destination resources must meet the following criteria:  Must be different subresources (although they can be from the same resource). Must be the same {{type}}. Must have compatible {{formats}} (the formats must either be identical or be from the same type group). For example, a DXGI_FORMAT_R32G32B32_FLOAT texture can be copied to an DXGI_FORMAT_R32G32B32_UINT texture because both of these formats are in the DXGI_FORMAT_R32G32B32_TYPELESS group. May not be currently {{mapped}}.  CopySubresourceRegion supports only copy; it does not support any stretch, color key, blend, or format conversions. An application that needs to copy an entire resource should use <see cref="M:SharpDX.Direct3D10.Device.CopyResource_(SharpDX.Direct3D10.Resource,SharpDX.Direct3D10.Resource)"/> instead. CopySubresourceRegion is an asynchronous call that the runtime can add  to the command-buffer queue. This asynchronous behaviorattempts to remove pipeline stalls that may occur when copying data. See {{performance considerations}} for more details.   Differences between Direct3D 10 and Direct3D 10.1: Direct3D 10 has the following limitations:  You cannot use a depth-stencil resource as a destination. You cannot use an immutable resource as a destination. You cannot use a multisampled texture as either a source or a destination  Direct3D 10.1 has added support for the following features:  You can use a depth-stencil buffer as a source or a destination. You can use multisampled resources as  source and destination only if both source and destination have identical multisampled count and quality. If source and destination differ in multisampled count and quality or if the source is multisampled and the destination is not multisampled (or vice versa), the call to ID3D10Device::CopySubresourceRegion fails. You can copy between uncompressed and compressed resources. During copy, the format conversions that are specified in  {{Format Conversion using Direct3D 10.1}} are supported automatically. The uncompressed resource must be at least prestructured, and typed. You must also account for the difference between the virtual and the physical size of the mipmaps levels.    ? Note??If you use CopySubresourceRegion with a depth-stencil buffer or a multisampled resource, you must copy the whole subresource. You must also pass 0 to the DstX, DstY, and DstZ parameters and NULL to the pSrcBox parameter. In addition, source and destination resources, which are represented by the pSrcResource and pDstResource parameters respectively, must have identical sample count values. Example The following code snippet copies a box (located at (120,100),(200,220)) from a source texture into a reqion (130,120),(210,240) in a destination texture. 	
            <code> D3D10_BOX sourceRegion;	
            sourceRegion.left = 120;	
            sourceRegion.right = 200;	
            sourceRegion.top = 100;	
            sourceRegion.bottom = 220;	
            sourceRegion.front = 0;	
            sourceRegion.back = 1; pd3dDevice-&gt;CopySubresourceRegion( pDestTexture, 0, 130, 120, 0, pSourceTexture, 0, &amp;sourceRegion ); </code>	
            	
             Notice that, for a 2D texture, front and back are always set to 0 and 1 respectively. 	
            </remarks>	
            <param name="source">A reference to the source resource (see <see cref="T:SharpDX.Direct3D10.Resource"/>). </param>
            <param name="sourceSubresource">index of the source. </param>
            <param name="sourceRegion">A 3D box (see <see cref="T:SharpDX.Direct3D10.ResourceRegion"/>) that defines the source subresources that can be copied. If NULL, the entire source subresource is copied. The box must fit within the source resource. </param>
            <param name="destination">A reference to the destination resource (see <see cref="T:SharpDX.Direct3D10.Resource"/>). </param>
            <param name="destinationSubResource">index of the destination. </param>
            <param name="dstX">The x coordinate of the upper left corner of the destination region. </param>
            <param name="dstY">The y coordinate of the upper left corner of the destination region. </param>
            <param name="dstZ">The z coordinate of the upper left corner of the destination region. For a 1D or 2D subresource, this must be zero. </param>
            <unmanaged>void ID3D10Device::CopySubresourceRegion([In] ID3D10Resource* pDstResource,[In] int DstSubresource,[In] int DstX,[In] int DstY,[In] int DstZ,[In] ID3D10Resource* pSrcResource,[In] int SrcSubresource,[In, Optional] const D3D10_BOX* pSrcBox)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.ResolveSubresource(SharpDX.Direct3D10.Resource,System.Int32,SharpDX.Direct3D10.Resource,System.Int32,SharpDX.DXGI.Format)">
            <summary>	
            Copy a multisampled resource into a non-multisampled resource. This API is most useful when re-using the resulting rendertarget of one render pass as an input to a second render pass.	
            </summary>	
            <remarks>	
            Both the source and destination resources must be the same {{resource type}} and have the same dimensions. The source and destination must have compatible formats. There are three scenarios for this:  ScenarioRequirements Source and destination are prestructured and typedBoth the source and destination must have identical formats and that format must be specified in the Format parameter. One resource is prestructured and typed and the other is prestructured and typelessThe typed resource must have a format that is compatible with the typeless resource (i.e. the typed resource is DXGI_FORMAT_R32_FLOAT and the typeless resource is DXGI_FORMAT_R32_TYPELESS). The format of the typed resource must be specified in the Format parameter. Source and destination are prestructured and typelessBoth the source and desintation must have the same typeless format (i.e. both must have DXGI_FORMAT_R32_TYPELESS), and the Format parameter must specify a format that is compatible with the source and destination (i.e. if both are DXGI_FORMAT_R32_TYPELESS then DXGI_FORMAT_R32_FLOAT or DXGI_FORMAT_R32_UINT could be specified in the Format parameter).  ? 	
            </remarks>	
            <param name="source">Source resource. Must be multisampled. </param>
            <param name="sourceSubresource">The source subresource of the source resource. </param>
            <param name="destination">Destination resource. Must be a created with the <see cref="F:SharpDX.Direct3D10.ResourceUsage.Default"/> flag and be single-sampled. See <see cref="T:SharpDX.Direct3D10.Resource"/>. </param>
            <param name="destinationSubresource">A zero-based index, that identifies the destination subresource. See {{D3D10CalcSubresource}} for more details. </param>
            <param name="format">that indicates how the multisampled resource will be resolved to a single-sampled resource. See remarks. </param>
            <unmanaged>void ID3D10Device::ResolveSubresource([In] ID3D10Resource* pDstResource,[In] int DstSubresource,[In] ID3D10Resource* pSrcResource,[In] int SrcSubresource,[In] DXGI_FORMAT Format)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D10.Resource,System.Int32)">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <param name="source">The source data.</param>
            <param name="resource">The destination resource.</param>
            <param name="subresource">The destination subresource.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D10.Resource,System.Int32,SharpDX.Direct3D10.ResourceRegion)">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <param name="source">The source data.</param>
            <param name="resource">The destination resource.</param>
            <param name="subresource">The destination subresource.</param>
            <param name="region">The destination region within the resource.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Device"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Device.NativePointerUpdated">
            <summary>Update nested inner interfaces pointer</summary>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.DrawIndexed(System.Int32,System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="indexCount">No documentation.</param>
            <param name="startIndexLocation">No documentation.</param>
            <param name="baseVertexLocation">No documentation.</param>
            <unmanaged>void ID3D10Device::DrawIndexed([In] int IndexCount,[In] int StartIndexLocation,[In] int BaseVertexLocation)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.Draw(System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="vertexCount">No documentation.</param>
            <param name="startVertexLocation">No documentation.</param>
            <unmanaged>void ID3D10Device::Draw([In] int VertexCount,[In] int StartVertexLocation)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.DrawIndexedInstanced(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="indexCountPerInstance">No documentation.</param>
            <param name="instanceCount">No documentation.</param>
            <param name="startIndexLocation">No documentation.</param>
            <param name="baseVertexLocation">No documentation.</param>
            <param name="startInstanceLocation">No documentation.</param>
            <unmanaged>void ID3D10Device::DrawIndexedInstanced([In] int IndexCountPerInstance,[In] int InstanceCount,[In] int StartIndexLocation,[In] int BaseVertexLocation,[In] int StartInstanceLocation)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.DrawInstanced(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="vertexCountPerInstance">No documentation.</param>
            <param name="instanceCount">No documentation.</param>
            <param name="startVertexLocation">No documentation.</param>
            <param name="startInstanceLocation">No documentation.</param>
            <unmanaged>void ID3D10Device::DrawInstanced([In] int VertexCountPerInstance,[In] int InstanceCount,[In] int StartVertexLocation,[In] int StartInstanceLocation)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.SetPredication(SharpDX.Direct3D10.Predicate,System.Boolean)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="redicateRef">No documentation.</param>
            <param name="predicateValue">No documentation.</param>
            <unmanaged>void ID3D10Device::SetPredication([In, Optional] ID3D10Predicate* pPredicate,[In] BOOL PredicateValue)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.DrawAuto">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Device::DrawAuto()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CopySubresourceRegion_(SharpDX.Direct3D10.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D10.Resource,System.Int32,System.Nullable{SharpDX.Direct3D10.ResourceRegion})">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dstResourceRef">No documentation.</param>
            <param name="dstSubresource">No documentation.</param>
            <param name="dstX">No documentation.</param>
            <param name="dstY">No documentation.</param>
            <param name="dstZ">No documentation.</param>
            <param name="srcResourceRef">No documentation.</param>
            <param name="srcSubresource">No documentation.</param>
            <param name="srcBoxRef">No documentation.</param>
            <unmanaged>void ID3D10Device::CopySubresourceRegion([In] ID3D10Resource* pDstResource,[In] int DstSubresource,[In] int DstX,[In] int DstY,[In] int DstZ,[In] ID3D10Resource* pSrcResource,[In] int SrcSubresource,[In, Optional] const D3D10_BOX* pSrcBox)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CopyResource_(SharpDX.Direct3D10.Resource,SharpDX.Direct3D10.Resource)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dstResourceRef">No documentation.</param>
            <param name="srcResourceRef">No documentation.</param>
            <unmanaged>void ID3D10Device::CopyResource([In] ID3D10Resource* pDstResource,[In] ID3D10Resource* pSrcResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.UpdateSubresource(SharpDX.Direct3D10.Resource,System.Int32,System.Nullable{SharpDX.Direct3D10.ResourceRegion},System.IntPtr,System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dstResourceRef">No documentation.</param>
            <param name="dstSubresource">No documentation.</param>
            <param name="dstBoxRef">No documentation.</param>
            <param name="srcDataRef">No documentation.</param>
            <param name="srcRowPitch">No documentation.</param>
            <param name="srcDepthPitch">No documentation.</param>
            <unmanaged>void ID3D10Device::UpdateSubresource([In] ID3D10Resource* pDstResource,[In] int DstSubresource,[In, Optional] const D3D10_BOX* pDstBox,[In] const void* pSrcData,[In] int SrcRowPitch,[In] int SrcDepthPitch)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.ClearRenderTargetView(SharpDX.Direct3D10.RenderTargetView,SharpDX.Color4)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="renderTargetViewRef">No documentation.</param>
            <param name="colorRGBA">No documentation.</param>
            <unmanaged>void ID3D10Device::ClearRenderTargetView([In] ID3D10RenderTargetView* pRenderTargetView,[In] const SHARPDX_COLOR4* ColorRGBA)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.ClearDepthStencilView(SharpDX.Direct3D10.DepthStencilView,SharpDX.Direct3D10.DepthStencilClearFlags,System.Single,System.Byte)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="depthStencilViewRef">No documentation.</param>
            <param name="clearFlags">No documentation.</param>
            <param name="depth">No documentation.</param>
            <param name="stencil">No documentation.</param>
            <unmanaged>void ID3D10Device::ClearDepthStencilView([In] ID3D10DepthStencilView* pDepthStencilView,[In] D3D10_CLEAR_FLAG ClearFlags,[In] float Depth,[In] byte Stencil)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GenerateMips(SharpDX.Direct3D10.ShaderResourceView)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderResourceViewRef">No documentation.</param>
            <unmanaged>void ID3D10Device::GenerateMips([In] ID3D10ShaderResourceView* pShaderResourceView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.ResolveSubresource_(SharpDX.Direct3D10.Resource,System.Int32,SharpDX.Direct3D10.Resource,System.Int32,SharpDX.DXGI.Format)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dstResourceRef">No documentation.</param>
            <param name="dstSubresource">No documentation.</param>
            <param name="srcResourceRef">No documentation.</param>
            <param name="srcSubresource">No documentation.</param>
            <param name="format">No documentation.</param>
            <unmanaged>void ID3D10Device::ResolveSubresource([In] ID3D10Resource* pDstResource,[In] int DstSubresource,[In] ID3D10Resource* pSrcResource,[In] int SrcSubresource,[In] DXGI_FORMAT Format)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GetPredication(SharpDX.Direct3D10.Predicate@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="predicateRef">No documentation.</param>
            <param name="redicateValueRef">No documentation.</param>
            <unmanaged>void ID3D10Device::GetPredication([Out, Optional] ID3D10Predicate** ppPredicate,[Out, Optional] BOOL* pPredicateValue)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GetDeviceRemovedReason">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::GetDeviceRemovedReason()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.SetExceptionMode(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="raiseFlags">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::SetExceptionMode([None] int RaiseFlags)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GetExceptionMode">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>int ID3D10Device::GetExceptionMode()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GetPrivateData(System.Guid,System.Int32@,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="guid">No documentation.</param>
            <param name="dataSizeRef">No documentation.</param>
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::GetPrivateData([In] GUID* guid,[InOut] int* pDataSize,[Out, Buffer, Optional] void* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.SetPrivateData(System.Guid,System.Int32,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="guid">No documentation.</param>
            <param name="dataSize">No documentation.</param>
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::SetPrivateData([In] GUID* guid,[In] int DataSize,[In, Buffer, Optional] const void* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.SetPrivateDataInterface(System.Guid,SharpDX.ComObject)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="guid">No documentation.</param>
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::SetPrivateDataInterface([In] GUID* guid,[In, Optional] const IUnknown* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.ClearState">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Device::ClearState()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.Flush">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Device::Flush()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateBuffer(SharpDX.Direct3D10.BufferDescription@,System.Nullable{SharpDX.Direct3D10.SubResourceData},SharpDX.Direct3D10.Buffer@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <param name="initialDataRef">No documentation.</param>
            <param name="bufferRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateBuffer([In] const D3D10_BUFFER_DESC* pDesc,[In, Optional] const D3D10_SUBRESOURCE_DATA* pInitialData,[Out, Optional] ID3D10Buffer** ppBuffer)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateTexture1D(SharpDX.Direct3D10.Texture1DDescription@,SharpDX.Direct3D10.SubResourceData[],SharpDX.Direct3D10.Texture1D@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <param name="initialDataRef">No documentation.</param>
            <param name="texture1DRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateTexture1D([In] const D3D10_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D10_SUBRESOURCE_DATA* pInitialData,[Out] ID3D10Texture1D** ppTexture1D)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateTexture2D(SharpDX.Direct3D10.Texture2DDescription@,SharpDX.Direct3D10.SubResourceData[],SharpDX.Direct3D10.Texture2D@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <param name="initialDataRef">No documentation.</param>
            <param name="texture2DRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateTexture2D([In] const D3D10_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D10_SUBRESOURCE_DATA* pInitialData,[Out] ID3D10Texture2D** ppTexture2D)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateTexture3D(SharpDX.Direct3D10.Texture3DDescription@,SharpDX.Direct3D10.SubResourceData[],SharpDX.Direct3D10.Texture3D@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <param name="initialDataRef">No documentation.</param>
            <param name="texture3DRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateTexture3D([In] const D3D10_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D10_SUBRESOURCE_DATA* pInitialData,[Out] ID3D10Texture3D** ppTexture3D)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateShaderResourceView(SharpDX.Direct3D10.Resource,System.Nullable{SharpDX.Direct3D10.ShaderResourceViewDescription},SharpDX.Direct3D10.ShaderResourceView@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceRef">No documentation.</param>
            <param name="descRef">No documentation.</param>
            <param name="sRViewRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateShaderResourceView([In] ID3D10Resource* pResource,[In, Optional] const D3D10_SHADER_RESOURCE_VIEW_DESC* pDesc,[Out, Optional] ID3D10ShaderResourceView** ppSRView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateRenderTargetView(SharpDX.Direct3D10.Resource,System.Nullable{SharpDX.Direct3D10.RenderTargetViewDescription},SharpDX.Direct3D10.RenderTargetView@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceRef">No documentation.</param>
            <param name="descRef">No documentation.</param>
            <param name="rTViewRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateRenderTargetView([In] ID3D10Resource* pResource,[In, Optional] const D3D10_RENDER_TARGET_VIEW_DESC* pDesc,[Out, Optional] ID3D10RenderTargetView** ppRTView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateDepthStencilView(SharpDX.Direct3D10.Resource,System.Nullable{SharpDX.Direct3D10.DepthStencilViewDescription},SharpDX.Direct3D10.DepthStencilView@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceRef">No documentation.</param>
            <param name="descRef">No documentation.</param>
            <param name="depthStencilViewRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateDepthStencilView([In] ID3D10Resource* pResource,[In, Optional] const D3D10_DEPTH_STENCIL_VIEW_DESC* pDesc,[Out, Optional] ID3D10DepthStencilView** ppDepthStencilView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateInputLayout(SharpDX.Direct3D10.InputElement[],System.Int32,System.IntPtr,SharpDX.Size,SharpDX.Direct3D10.InputLayout@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="inputElementDescsRef">No documentation.</param>
            <param name="numElements">No documentation.</param>
            <param name="shaderBytecodeWithInputSignatureRef">No documentation.</param>
            <param name="bytecodeLength">No documentation.</param>
            <param name="inputLayoutRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateInputLayout([In, Buffer] const D3D10_INPUT_ELEMENT_DESC* pInputElementDescs,[In] int NumElements,[In] const void* pShaderBytecodeWithInputSignature,[In] SIZE_T BytecodeLength,[Out, Optional] ID3D10InputLayout** ppInputLayout)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateVertexShader(System.IntPtr,SharpDX.Size,SharpDX.Direct3D10.VertexShader@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderBytecodeRef">No documentation.</param>
            <param name="bytecodeLength">No documentation.</param>
            <param name="vertexShaderRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateVertexShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[Out, Optional] ID3D10VertexShader** ppVertexShader)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateGeometryShader(System.IntPtr,SharpDX.Size,SharpDX.Direct3D10.GeometryShader@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderBytecodeRef">No documentation.</param>
            <param name="bytecodeLength">No documentation.</param>
            <param name="geometryShaderRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateGeometryShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[Out, Optional] ID3D10GeometryShader** ppGeometryShader)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateGeometryShaderWithStreamOutput(System.IntPtr,SharpDX.Size,SharpDX.Direct3D10.StreamOutputElement[],System.Int32,System.Int32,SharpDX.Direct3D10.GeometryShader@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderBytecodeRef">No documentation.</param>
            <param name="bytecodeLength">No documentation.</param>
            <param name="sODeclarationRef">No documentation.</param>
            <param name="numEntries">No documentation.</param>
            <param name="outputStreamStride">No documentation.</param>
            <param name="geometryShaderRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateGeometryShaderWithStreamOutput([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Buffer, Optional] const D3D10_SO_DECLARATION_ENTRY* pSODeclaration,[In] int NumEntries,[In] int OutputStreamStride,[Out, Optional] ID3D10GeometryShader** ppGeometryShader)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreatePixelShader(System.IntPtr,SharpDX.Size,SharpDX.Direct3D10.PixelShader@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderBytecodeRef">No documentation.</param>
            <param name="bytecodeLength">No documentation.</param>
            <param name="pixelShaderRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreatePixelShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[Out, Optional] ID3D10PixelShader** ppPixelShader)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateBlendState(SharpDX.Direct3D10.BlendStateDescription@,SharpDX.Direct3D10.BlendState@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="blendStateDescRef">No documentation.</param>
            <param name="blendStateRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateBlendState([In] const D3D10_BLEND_DESC* pBlendStateDesc,[Out, Optional] ID3D10BlendState** ppBlendState)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateDepthStencilState(SharpDX.Direct3D10.DepthStencilStateDescription@,SharpDX.Direct3D10.DepthStencilState@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="depthStencilDescRef">No documentation.</param>
            <param name="depthStencilStateRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateDepthStencilState([In] const D3D10_DEPTH_STENCIL_DESC* pDepthStencilDesc,[Out, Optional] ID3D10DepthStencilState** ppDepthStencilState)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateRasterizerState(SharpDX.Direct3D10.RasterizerStateDescription@,SharpDX.Direct3D10.RasterizerState@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="rasterizerDescRef">No documentation.</param>
            <param name="rasterizerStateRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateRasterizerState([In] const D3D10_RASTERIZER_DESC* pRasterizerDesc,[Out, Optional] ID3D10RasterizerState** ppRasterizerState)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateSamplerState(SharpDX.Direct3D10.SamplerStateDescription@,SharpDX.Direct3D10.SamplerState@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="samplerDescRef">No documentation.</param>
            <param name="samplerStateRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateSamplerState([In] const D3D10_SAMPLER_DESC* pSamplerDesc,[Out, Optional] ID3D10SamplerState** ppSamplerState)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateQuery(SharpDX.Direct3D10.QueryDescription,SharpDX.Direct3D10.Query@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="queryDescRef">No documentation.</param>
            <param name="queryRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateQuery([In] const D3D10_QUERY_DESC* pQueryDesc,[Out, Optional] ID3D10Query** ppQuery)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreatePredicate(SharpDX.Direct3D10.QueryDescription,SharpDX.Direct3D10.Predicate@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="redicateDescRef">No documentation.</param>
            <param name="predicateRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreatePredicate([In] const D3D10_QUERY_DESC* pPredicateDesc,[Out, Optional] ID3D10Predicate** ppPredicate)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CreateCounter(SharpDX.Direct3D10.CounterDescription,SharpDX.Direct3D10.Counter@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="counterDescRef">No documentation.</param>
            <param name="counterRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CreateCounter([In] const D3D10_COUNTER_DESC* pCounterDesc,[Out, Optional] ID3D10Counter** ppCounter)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CheckFormatSupport(SharpDX.DXGI.Format)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="format">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CheckFormatSupport([In] DXGI_FORMAT Format,[Out] D3D10_FORMAT_SUPPORT* pFormatSupport)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CheckMultisampleQualityLevels(SharpDX.DXGI.Format,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="format">No documentation.</param>
            <param name="sampleCount">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CheckMultisampleQualityLevels([In] DXGI_FORMAT Format,[In] int SampleCount,[Out] int* pNumQualityLevels)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GetCounterCapabilities">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Device::CheckCounterInfo([Out] D3D10_COUNTER_INFO* pCounterInfo)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CheckCounter(SharpDX.Direct3D10.CounterDescription,SharpDX.Direct3D10.CounterType@,System.Int32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <param name="typeRef">No documentation.</param>
            <param name="activeCountersRef">No documentation.</param>
            <param name="szName">No documentation.</param>
            <param name="nameLengthRef">No documentation.</param>
            <param name="szUnits">No documentation.</param>
            <param name="unitsLengthRef">No documentation.</param>
            <param name="szDescription">No documentation.</param>
            <param name="descriptionLengthRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::CheckCounter([In] const D3D10_COUNTER_DESC* pDesc,[Out] D3D10_COUNTER_TYPE* pType,[Out] int* pActiveCounters,[Out, Buffer, Optional] char* szName,[InOut, Optional] int* pNameLength,[Out, Buffer, Optional] char* szUnits,[InOut, Optional] int* pUnitsLength,[Out, Buffer, Optional] char* szDescription,[InOut, Optional] int* pDescriptionLength)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GetCreationFlags">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>int ID3D10Device::GetCreationFlags()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OpenSharedResource(System.IntPtr,System.Guid,System.IntPtr@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="hResource">No documentation.</param>
            <param name="returnedInterface">No documentation.</param>
            <param name="resourceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device::OpenSharedResource([In] void* hResource,[In] GUID* ReturnedInterface,[Out, Optional] void** ppResource)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.CreationFlags">
            <summary>	
            Get the flags used during the call to create the device with <see cref="M:SharpDX.Direct3D10.D3D10.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,System.Int32,SharpDX.Direct3D10.Device@)"/>.	
            </summary>	
            <returns>A bitfield containing the flags used to create the device. See <see cref="T:SharpDX.Direct3D10.DeviceCreationFlags"/>. </returns>
            <unmanaged>int ID3D10Device::GetCreationFlags()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.InputAssembler">
            <summary>Inner interface giving access to InputAssemblerStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.VertexShader">
            <summary>Inner interface giving access to VertexShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.PixelShader">
            <summary>Inner interface giving access to PixelShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.GeometryShader">
            <summary>Inner interface giving access to GeometryShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.StreamOutput">
            <summary>Inner interface giving access to StreamOutputStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.Rasterizer">
            <summary>Inner interface giving access to RasterizerStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.OutputMerger">
            <summary>Inner interface giving access to OutputMergerStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.DeviceRemovedReason">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3D10Device::GetDeviceRemovedReason()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.ExceptionMode">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ID3D10Device::GetExceptionMode()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Device.OutputMergerStage">
            <summary>Inner interface OutputMergerStage.</summary>
            <unmanaged>ID3D10Device</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.GetRenderTargets(SharpDX.Direct3D10.DepthStencilView@)">
            <summary>	
            Get references to the render targets that are available to the {{output-merger stage}}.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <returns>a depth-stencil view (see <see cref="T:SharpDX.Direct3D10.DepthStencilView"/>) to be filled with the depth-stencil information from the device.</returns>
            <unmanaged>void OMGetRenderTargets([In] int NumViews,[Out, Buffer, Optional] ID3D10RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D10DepthStencilView** ppDepthStencilView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.GetRenderTargets(System.Int32)">
            <summary>	
            Get references to the render targets that are available to the {{output-merger stage}}.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="numViews">Number of render targets to retrieve. </param>
            <returns>an array of render targets views (see <see cref="T:SharpDX.Direct3D10.RenderTargetView"/>) to be filled with the render targets from the device.</returns>
            <unmanaged>void OMGetRenderTargets([In] int NumViews,[Out, Buffer, Optional] ID3D10RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D10DepthStencilView** ppDepthStencilView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.GetRenderTargets(System.Int32,SharpDX.Direct3D10.DepthStencilView@)">
            <summary>	
            Get references to the render targets and the depth-stencil buffer that are available to the {{output-merger stage}}.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="numViews">Number of render targets to retrieve. </param>
            <param name="depthStencilViewRef">Pointer to a depth-stencil view (see <see cref="T:SharpDX.Direct3D10.DepthStencilView"/>) to be filled with the depth-stencil information from the device.</param>
            <returns>an array of render targets views (see <see cref="T:SharpDX.Direct3D10.RenderTargetView"/>) to be filled with the render targets from the device.</returns>
            <unmanaged>void OMGetRenderTargets([In] int NumViews,[Out, Buffer, Optional] ID3D10RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D10DepthStencilView** ppDepthStencilView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.GetBlendState(SharpDX.Color4@,System.Int32@)">
            <summary>	
            Get the {{blend state}} of the output-merger stage.	
            </summary>	
            <remarks>	
            The reference count of the returned interface will be incremented by one when the blend state is retrieved. Applications must release returned reference(s) when they are no longer needed, or else there will be a memory leak. 	
            </remarks>	
            <param name="blendFactor">Array of blend factors, one for each RGBA component. </param>
            <param name="sampleMaskRef">Pointer to a {{sample mask}}. </param>
            <returns>a reference to a blend-state interface (see <see cref="T:SharpDX.Direct3D10.BlendState"/>).</returns>
            <unmanaged>void OMGetBlendState([Out, Optional] ID3D10BlendState** ppBlendState,[Out, Optional] float BlendFactor[4],[Out, Optional] int* pSampleMask)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.GetDepthStencilState(System.Int32@)">
            <summary>	
            Gets the {{depth-stencil}} state of the output-merger stage.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="stencilRefRef">Pointer to the stencil reference value used in the {{depth-stencil}} test. </param>
            <returns>a reference to a depth-stencil state interface (see <see cref="T:SharpDX.Direct3D10.DepthStencilState"/>) to be filled with information from the device.</returns>
            <unmanaged>void OMGetDepthStencilState([Out, Optional] ID3D10DepthStencilState** ppDepthStencilState,[Out, Optional] int* pStencilRef)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.SetTargets(SharpDX.Direct3D10.RenderTargetView[])">
            <summary>
              Binds a set of render targets to the output-merger stage.
            </summary>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.SetTargets(SharpDX.Direct3D10.RenderTargetView)">
            <summary>
              Binds a single render target to the output-merger stage.
            </summary>
            <param name = "renderTargetView">A view of the render target to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.SetTargets(SharpDX.Direct3D10.DepthStencilView,SharpDX.Direct3D10.RenderTargetView[])">
            <summary>
              Binds a depth-stencil buffer and a set of render targets to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.SetTargets(SharpDX.Direct3D10.DepthStencilView,SharpDX.Direct3D10.RenderTargetView)">
            <summary>
              Binds a depth-stencil buffer and a single render target to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "renderTargetView">A view of the render target to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Device.OutputMergerStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.SetRenderTargets(System.Int32,SharpDX.Direct3D10.RenderTargetView[],SharpDX.Direct3D10.DepthStencilView)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="numViews">No documentation.</param>
            <param name="renderTargetViewsRef">No documentation.</param>
            <param name="depthStencilViewRef">No documentation.</param>
            <unmanaged>void OMSetRenderTargets([In] int NumViews,[In, Buffer, Optional] const ID3D10RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D10DepthStencilView* pDepthStencilView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.SetBlendState(SharpDX.Direct3D10.BlendState,SharpDX.Color4,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="blendStateRef">No documentation.</param>
            <param name="blendFactor">No documentation.</param>
            <param name="sampleMask">No documentation.</param>
            <unmanaged>void OMSetBlendState([In, Optional] ID3D10BlendState* pBlendState,[In] const SHARPDX_COLOR4* BlendFactor,[In] int SampleMask)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.SetDepthStencilState(SharpDX.Direct3D10.DepthStencilState,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="depthStencilStateRef">No documentation.</param>
            <param name="stencilRef">No documentation.</param>
            <unmanaged>void OMSetDepthStencilState([In, Optional] ID3D10DepthStencilState* pDepthStencilState,[In] int StencilRef)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.GetRenderTargets(System.Int32,SharpDX.Direct3D10.RenderTargetView[],SharpDX.Direct3D10.DepthStencilView@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="numViews">No documentation.</param>
            <param name="renderTargetViewsRef">No documentation.</param>
            <param name="depthStencilViewRef">No documentation.</param>
            <unmanaged>void OMGetRenderTargets([In] int NumViews,[Out, Buffer, Optional] ID3D10RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D10DepthStencilView** ppDepthStencilView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.GetBlendState(SharpDX.Direct3D10.BlendState@,SharpDX.Color4@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="blendStateRef">No documentation.</param>
            <param name="blendFactor">No documentation.</param>
            <param name="sampleMaskRef">No documentation.</param>
            <unmanaged>void OMGetBlendState([Out, Optional] ID3D10BlendState** ppBlendState,[Out, Optional] SHARPDX_COLOR4* BlendFactor,[Out, Optional] int* pSampleMask)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.OutputMergerStage.GetDepthStencilState(SharpDX.Direct3D10.DepthStencilState@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="depthStencilStateRef">No documentation.</param>
            <param name="stencilRefRef">No documentation.</param>
            <unmanaged>void OMGetDepthStencilState([Out, Optional] ID3D10DepthStencilState** ppDepthStencilState,[Out, Optional] int* pStencilRef)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.OutputMergerStage.BlendFactor">
            <summary>
            Gets or sets the blend factor.
            </summary>
            <value>The blend factor.</value>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.OutputMergerStage.BlendSampleMask">
            <summary>
            Gets or sets the blend sample mask.
            </summary>
            <value>The blend sample mask.</value>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.OutputMergerStage.BlendState">
            <summary>
            Gets or sets the state of the blend.
            </summary>
            <value>The state of the blend.</value>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.OutputMergerStage.DepthStencilReference">
            <summary>
            Gets or sets the depth stencil reference.
            </summary>
            <value>The depth stencil reference.</value>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.OutputMergerStage.DepthStencilState">
            <summary>
            Gets or sets the state of the depth stencil.
            </summary>
            <value>The state of the depth stencil.</value>
        </member>
        <member name="T:SharpDX.Direct3D10.Device.RasterizerStage">
            <summary>Inner interface RasterizerStage.</summary>
            <unmanaged>ID3D10Device</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.GetViewports">
            <summary>	
            Get the array of {{viewports}} bound  to the {{rasterizer stage}} 	
            </summary>	
            <returns>An array of viewports (see <see cref="T:SharpDX.Direct3D10.Viewport"/>).</returns>
            <unmanaged>void RSGetViewports([InOut] int* NumViewports,[Out, Buffer, Optional] D3D10_VIEWPORT* pViewports)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.GetViewports(SharpDX.Direct3D10.Viewport[])">
            <summary>	
            Get the array of {{viewports}} bound  to the {{rasterizer stage}} 	
            </summary>	
            <returns>An array of viewports (see <see cref="T:SharpDX.Direct3D10.Viewport"/>).</returns>
            <unmanaged>void RSGetViewports([InOut] int* NumViewports,[Out, Buffer, Optional] D3D10_VIEWPORT* pViewports)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.GetScissorRectangles">
            <summary>	
            Get the array of {{scissor rectangles}} bound to the {{rasterizer stage}}.	
            </summary>	
            <returns>An array of scissor rectangles (see <see cref="T:SharpDX.Rectangle"/>).</returns>
            <unmanaged>void RSGetScissorRects([InOut] int* NumRects,[Out, Buffer, Optional] D3D10_RECT* pRects)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.GetScissorRectangles(SharpDX.Rectangle[])">
            <summary>	
            Get the array of {{scissor rectangles}} bound to the {{rasterizer stage}}.	
            </summary>	
            <returns>An array of scissor rectangles (see <see cref="T:SharpDX.Rectangle"/>).</returns>
            <unmanaged>void RSGetScissorRects([InOut] int* NumRects,[Out, Buffer, Optional] D3D10_RECT* pRects)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.SetScissorRectangles(SharpDX.Rectangle)">
            <summary>
              Binds a single scissor rectangle to the rasterizer stage.
            </summary>
            <param name = "scissorRectangle">The scissor rectangle to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.SetScissorRectangles(SharpDX.Rectangle[])">
            <summary>
              Binds a set of scissor rectangles to the rasterizer stage.
            </summary>
            <param name = "scissorRectangles">The set of scissor rectangles to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.SetViewports(SharpDX.Direct3D10.Viewport[])">
            <summary>
              Binds a set of viewports to the rasterizer stage.
            </summary>
            <param name = "viewports">The set of viewports to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.SetViewports(SharpDX.Direct3D10.Viewport)">
            <summary>
              Binds a single viewport to the rasterizer stage.
            </summary>
            <param name = "viewport">The viewport to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Device.RasterizerStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.SetState(SharpDX.Direct3D10.RasterizerState)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="rasterizerStateRef">No documentation.</param>
            <unmanaged>void RSSetState([In, Optional] ID3D10RasterizerState* pRasterizerState)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.SetViewports(System.Int32,SharpDX.Direct3D10.Viewport[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="numViewports">No documentation.</param>
            <param name="viewportsRef">No documentation.</param>
            <unmanaged>void RSSetViewports([In] int NumViewports,[In, Buffer, Optional] const D3D10_VIEWPORT* pViewports)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.SetScissorRects(System.Int32,SharpDX.Rectangle[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="numRects">No documentation.</param>
            <param name="rectsRef">No documentation.</param>
            <unmanaged>void RSSetScissorRects([In] int NumRects,[In, Buffer, Optional] const D3D10_RECT* pRects)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.GetState(SharpDX.Direct3D10.RasterizerState@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="rasterizerStateRef">No documentation.</param>
            <unmanaged>void RSGetState([Out] ID3D10RasterizerState** ppRasterizerState)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.GetViewports(System.Int32@,SharpDX.Direct3D10.Viewport[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="numViewports">No documentation.</param>
            <param name="viewportsRef">No documentation.</param>
            <unmanaged>void RSGetViewports([InOut] int* NumViewports,[Out, Buffer, Optional] D3D10_VIEWPORT* pViewports)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.RasterizerStage.GetScissorRects(System.Int32@,SharpDX.Rectangle[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="numRects">No documentation.</param>
            <param name="rectsRef">No documentation.</param>
            <unmanaged>void RSGetScissorRects([InOut] int* NumRects,[Out, Buffer, Optional] D3D10_RECT* pRects)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Device.RasterizerStage.State">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void RSGetState([Out] ID3D10RasterizerState** ppRasterizerState)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Device.StreamOutputStage">
            <summary>Inner interface StreamOutputStage.</summary>
            <unmanaged>ID3D10Device</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Device.StreamOutputStage.BufferMaximumStrideInBytes">
            <summary>Constant None.</summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Device.StreamOutputStage.BufferMaximumWriteWindowInBytes">
            <summary>Constant None.</summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Device.StreamOutputStage.BufferSlotCount">
            <summary>Constant None.</summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Device.StreamOutputStage.DdiRegisterIndexDenotingGap">
            <summary>Constant None.</summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Device.StreamOutputStage.MultipleBufferElementsPerBuffer">
            <summary>Constant None.</summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Device.StreamOutputStage.SingleBufferComponentLimit">
            <summary>Constant None.</summary>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.StreamOutputStage.SetTargets(SharpDX.Direct3D10.StreamOutputBufferBinding[])">
            <summary>	
            Set the target output {{buffers}} for the {{StreamOutput}} stage, which enables/disables the pipeline to stream-out data.	
            </summary>	
            <remarks>	
            Call ID3D10Device::SOSetTargets (before any draw calls) to stream data out; call SOSetTargets with NULL to stop streaming data out. For an example, see Exercise 01 from the GDC 2007 workshop, which sets the stream output rendertargets before calling draw methods in the RenderInstanceToStream function. An offset of -1 will cause the stream output buffer to be appended, continuing after the last location written to the buffer in a previous stream output pass. Calling this method using a buffer that is currently bound for writing will effectively bind NULL instead because a buffer cannot be bound as both an input and an output at the same time. The {{Debug Layer}} will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime. The method will not hold a reference to the interfaces passed in. For that reason, applications should be careful not to release an interface currently in use by the device. 	
            </remarks>	
            <param name="bufferBindings">an array of output buffers (see <see cref="T:SharpDX.Direct3D10.StreamOutputBufferBinding"/>) to bind to the device. The buffers must have been created with the <see cref="F:SharpDX.Direct3D10.BindFlags.StreamOutput"/> flag. </param>
            <unmanaged>void SOSetTargets([In] int NumBuffers,[In, Buffer, Optional] const ID3D10Buffer** ppSOTargets,[In, Buffer, Optional] const int* pOffsets)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.StreamOutputStage.GetTargets(System.Int32)">
            <summary>	
            Get the target output {{buffers}} for the {{StreamOutput}} stage of the pipeline.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="numBuffers">Number of buffers to get. A maximum of four output buffers can be retrieved. </param>
            <returns>an array of output buffers (see <see cref="T:SharpDX.Direct3D10.StreamOutputBufferBinding"/>) to bind to the device.</returns>
            <unmanaged>void SOGetTargets([In] int NumBuffers,[Out, Buffer, Optional] ID3D10Buffer** ppSOTargets,[Out, Buffer, Optional] int* pOffsets)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.StreamOutputStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Device.StreamOutputStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Device.StreamOutputStage.SetTargets(System.Int32,SharpDX.Direct3D10.Buffer[],System.Int32[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="numBuffers">No documentation.</param>
            <param name="sOTargetsRef">No documentation.</param>
            <param name="offsetsRef">No documentation.</param>
            <unmanaged>void SOSetTargets([In] int NumBuffers,[In, Buffer, Optional] const ID3D10Buffer** ppSOTargets,[In, Buffer, Optional] const int* pOffsets)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.StreamOutputStage.GetTargets(System.Int32,SharpDX.Direct3D10.Buffer[],System.Int32[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="numBuffers">No documentation.</param>
            <param name="sOTargetsRef">No documentation.</param>
            <param name="offsetsRef">No documentation.</param>
            <unmanaged>void SOGetTargets([In] int NumBuffers,[Out, Buffer, Optional] ID3D10Buffer** ppSOTargets,[Out, Buffer, Optional] int* pOffsets)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Device.InputAssemblerStage">
            <summary>Inner interface InputAssemblerStage.</summary>
            <unmanaged>ID3D10Device</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.InputAssemblerStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Device.InputAssemblerStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Device.InputAssemblerStage.SetInputLayout(SharpDX.Direct3D10.InputLayout)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="inputLayoutRef">No documentation.</param>
            <unmanaged>void IASetInputLayout([In, Optional] ID3D10InputLayout* pInputLayout)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.InputAssemblerStage.SetVertexBuffers(System.Int32,System.Int32,SharpDX.Direct3D10.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numBuffers">No documentation.</param>
            <param name="vertexBuffersRef">No documentation.</param>
            <param name="stridesRef">No documentation.</param>
            <param name="offsetsRef">No documentation.</param>
            <unmanaged>void IASetVertexBuffers([In] int StartSlot,[In] int NumBuffers,[In, Buffer] const ID3D10Buffer** ppVertexBuffers,[In, Buffer] const int* pStrides,[In, Buffer] const int* pOffsets)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.InputAssemblerStage.SetIndexBuffer(SharpDX.Direct3D10.Buffer,SharpDX.DXGI.Format,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="indexBufferRef">No documentation.</param>
            <param name="format">No documentation.</param>
            <param name="offset">No documentation.</param>
            <unmanaged>void IASetIndexBuffer([In, Optional] ID3D10Buffer* pIndexBuffer,[In] DXGI_FORMAT Format,[In] int Offset)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.InputAssemblerStage.SetPrimitiveTopology(SharpDX.Direct3D.PrimitiveTopology)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="topology">No documentation.</param>
            <unmanaged>void IASetPrimitiveTopology([In] D3D10_PRIMITIVE_TOPOLOGY Topology)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.InputAssemblerStage.GetInputLayout(SharpDX.Direct3D10.InputLayout@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="inputLayoutRef">No documentation.</param>
            <unmanaged>void IAGetInputLayout([Out] ID3D10InputLayout** ppInputLayout)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.InputAssemblerStage.GetVertexBuffers(System.Int32,System.Int32,SharpDX.Direct3D10.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numBuffers">No documentation.</param>
            <param name="vertexBuffersRef">No documentation.</param>
            <param name="stridesRef">No documentation.</param>
            <param name="offsetsRef">No documentation.</param>
            <unmanaged>void IAGetVertexBuffers([In] int StartSlot,[In] int NumBuffers,[Out, Buffer, Optional] ID3D10Buffer** ppVertexBuffers,[Out, Buffer, Optional] int* pStrides,[Out, Buffer, Optional] int* pOffsets)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.InputAssemblerStage.GetIndexBuffer(SharpDX.Direct3D10.Buffer@,SharpDX.DXGI.Format@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="indexBufferRef">No documentation.</param>
            <param name="format">No documentation.</param>
            <param name="offset">No documentation.</param>
            <unmanaged>void IAGetIndexBuffer([Out, Optional] ID3D10Buffer** pIndexBuffer,[Out, Optional] DXGI_FORMAT* Format,[Out, Optional] int* Offset)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.InputAssemblerStage.GetPrimitiveTopology(SharpDX.Direct3D.PrimitiveTopology@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="topologyRef">No documentation.</param>
            <unmanaged>void IAGetPrimitiveTopology([Out] D3D10_PRIMITIVE_TOPOLOGY* pTopology)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.InputAssemblerStage.SetVertexBuffers(System.Int32,SharpDX.Direct3D10.VertexBufferBinding)">
            <summary>
              Binds a single vertex buffer to the input assembler.
            </summary>
            <param name = "slot">Index of the slot to which to bind the vertex buffer.</param>
            <param name = "vertexBufferBinding">A binding for the input vertex buffer.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.InputAssemblerStage.SetVertexBuffers(System.Int32,SharpDX.Direct3D10.VertexBufferBinding[])">
            <summary>
              Binds an array of vertex buffers to the input assembler.
            </summary>
            <param name = "firstSlot">Index of the first input slot to use for binding. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. There are 16 input slots.</param>
            <param name = "vertexBufferBindings">An array of bindings for input vertex buffers.</param>
        </member>
        <member name="T:SharpDX.Direct3D10.Device.VertexShaderStage">
            <summary>Inner interface VertexShaderStage.</summary>
            <unmanaged>ID3D10Device</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Device.CommonShaderStage`1">
            <summary>
            Common Shader class. Provides a common set of methods for a Shader Stage.
            TODO: check if usage of abstract is not introducing an unacceptable overhead...
            </summary>
            <typeparam name = "T">Type of the shader</typeparam>
        </member>
        <member name="F:SharpDX.Direct3D10.Device.CommonShaderStage`1.MaximumConstantBufferSlotCount">
            <summary>
            Maximum number of bindable constant buffers to a pipeline stage.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Device.CommonShaderStage`1.MaximumResourceSlotCount">
            <summary>
            Maximum number of bindable resources to a pipeline stage.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Device.CommonShaderStage`1.MaximumSamplerSlotCount">
            <summary>
            Maximum number of bindable samplers to a pipeline stage.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CommonShaderStage`1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Device.CommonShaderStage`1"/> class.
            </summary>
            <param name="pointer">The pointer.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CommonShaderStage`1.GetConstantBuffers(System.Int32,System.Int32)">
            <summary>
              Gets the constant buffers used by the shader stage.
            </summary>
            <param name = "startSlot">Index into the device's zero-based array from which to begin retrieving constant buffers.</param>
            <param name = "count">Number of buffers to retrieve.</param>
            <returns>An array of constant buffers.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CommonShaderStage`1.GetSamplers(System.Int32,System.Int32)">
            <summary>
              Gets the sampler states used by the shader stage.
            </summary>
            <param name = "startSlot">Index into the device's zero-based array from which to begin retrieving samplers.</param>
            <param name = "count">Number of samplers to retrieve.</param>
            <returns>An array of sampler states.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CommonShaderStage`1.GetShaderResources(System.Int32,System.Int32)">
            <summary>
              Gets the shader resources used by the shader stage.
            </summary>
            <param name = "startSlot">Index into the device's zero-based array from which to begin retrieving shader resources.</param>
            <param name = "count">Number of resources to retrieve.</param>
            <returns>An array of shader resources.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CommonShaderStage`1.SetConstantBuffer(System.Int32,SharpDX.Direct3D10.Buffer)">
            <summary>
              Sets a single constant buffer to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the constant buffer.</param>
            <param name = "constantBuffer">constant buffer to set</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CommonShaderStage`1.SetSampler(System.Int32,SharpDX.Direct3D10.SamplerState)">
            <summary>
              Sets a single sampler to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the sampler.</param>
            <param name = "sampler">sampler state to set</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CommonShaderStage`1.SetShaderResource(System.Int32,SharpDX.Direct3D10.ShaderResourceView)">
            <summary>
              Sets a single shader resource to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the resource.</param>
            <param name = "resourceView">Resource view to attach</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CommonShaderStage`1.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D10.ShaderResourceView[])">
            <summary>
              Get the shader resources.
            </summary>
            <remarks>
              Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.
            </remarks>
            <param name = "startSlot">Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name = "numViews">The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
            <param name = "shaderResourceViewsRef">Array of {{shader resource view}} interfaces to be returned by the device.</param>
            <unmanaged>void PSGetShaderResources([In] UINT StartSlot,[In] UINT NumViews,[Out, Buffer] ID3D10ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CommonShaderStage`1.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D10.SamplerState[])">
            <summary>
              Get an array of sampler states from the shader pipeline stage.
            </summary>
            <remarks>
              Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.
            </remarks>
            <param name="startSlot">Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
            <param name="numSamplers">Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
            <param name="samplersRef">Arry of sampler-state interface pointers (see <see cref="T:SharpDX.Direct3D10.SamplerState"/>) to be returned by the device.</param>
            <unmanaged>void PSGetSamplers([In] UINT StartSlot,[In] UINT NumSamplers,[Out, Buffer] ID3D10SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CommonShaderStage`1.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D10.Buffer[])">
            <summary>
              Get the constant buffers used by the shader pipeline stage.
            </summary>
            <remarks>
              Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
            <param name="numBuffers">Number of buffers to retrieve (ranges from 0 to D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
            <param name="constantBuffersRef">Array of constant buffer interface pointers (see <see cref="T:SharpDX.Direct3D10.Buffer"/>) to be returned by the method.</param>
            <unmanaged>void PSGetConstantBuffers([In] UINT StartSlot,[In] UINT NumBuffers,[Out, Buffer] ID3D10Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CommonShaderStage`1.SetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D10.ShaderResourceView[])">
            <summary>
              Bind an array of shader resources to the shader stage.
            </summary>
            <remarks>
              If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with NULL.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D10.Device.CreateShaderResourceView(SharpDX.Direct3D10.Resource,System.Nullable{SharpDX.Direct3D10.ShaderResourceViewDescription},SharpDX.Direct3D10.ShaderResourceView@)"/>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name="numViews">Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
            <param name="shaderResourceViewsRef">Array of {{shader resource view}} interfaces to set to the device.</param>
            <unmanaged>void PSSetShaderResources([In] UINT StartSlot,[In] UINT NumViews,[In, Buffer] const ID3D10ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CommonShaderStage`1.SetSamplers(System.Int32,System.Int32,SharpDX.Direct3D10.SamplerState[])">
            <summary>
              Set an array of sampler states to the shader pipeline stage.
            </summary>
            <remarks>
              Any sampler may be set to NULL; this invokes the default state, which is defined to be the following.StateDefault ValueFilterD3D10_FILTER_MIN_MAG_MIP_LINEARAddressUD3D10_TEXTURE_ADDRESS_CLAMPAddressVD3D10_TEXTURE_ADDRESS_CLAMPAddressWD3D10_TEXTURE_ADDRESS_CLAMPMipLODBias0MaxAnisotropy1ComparisonFuncD3D10_COMPARISON_NEVERBorderColor[0]1.0fBorderColor[1]1.0fBorderColor[2]1.0fBorderColor[3]1.0fMinLOD-FLT_MAXMaxLODFLT_MAX  The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
            <param name="numSamplers">Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
            <param name="samplersRef">Pointer to an array of sampler-state interfaces (see <see cref="T:SharpDX.Direct3D10.SamplerState"/>). See Remarks.</param>
            <unmanaged>void PSSetSamplers([In] UINT StartSlot,[In] UINT NumSamplers,[In, Buffer] const ID3D10SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.CommonShaderStage`1.SetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D10.Buffer[])">
            <summary>
              Set the constant buffers used by the shader pipeline stage.
            </summary>
            <remarks>
              The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
            <param name="numBuffers">Number of buffers to set (ranges from 0 to D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
            <param name="constantBuffersRef">Array of constant buffers (see <see cref="T:SharpDX.Direct3D10.Buffer"/>) being given to the device.</param>
            <unmanaged>void PSSetConstantBuffers([In] UINT StartSlot,[In] UINT NumBuffers,[In, Buffer] const ID3D10Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.VertexShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Device.VertexShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Device.VertexShaderStage.SetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D10.Buffer[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numBuffers">No documentation.</param>
            <param name="constantBuffersRef">No documentation.</param>
            <unmanaged>void VSSetConstantBuffers([In] int StartSlot,[In] int NumBuffers,[In, Buffer] const ID3D10Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.VertexShaderStage.Set(SharpDX.Direct3D10.VertexShader)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="vertexShaderRef">No documentation.</param>
            <unmanaged>void VSSetShader([In, Optional] ID3D10VertexShader* pVertexShader)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.VertexShaderStage.SetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D10.ShaderResourceView[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numViews">No documentation.</param>
            <param name="shaderResourceViewsRef">No documentation.</param>
            <unmanaged>void VSSetShaderResources([In] int StartSlot,[In] int NumViews,[In, Buffer] const ID3D10ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.VertexShaderStage.SetSamplers(System.Int32,System.Int32,SharpDX.Direct3D10.SamplerState[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numSamplers">No documentation.</param>
            <param name="samplersRef">No documentation.</param>
            <unmanaged>void VSSetSamplers([In] int StartSlot,[In] int NumSamplers,[In, Buffer] const ID3D10SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.VertexShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D10.Buffer[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numBuffers">No documentation.</param>
            <param name="constantBuffersRef">No documentation.</param>
            <unmanaged>void VSGetConstantBuffers([In] int StartSlot,[In] int NumBuffers,[Out, Buffer] ID3D10Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.VertexShaderStage.Get(SharpDX.Direct3D10.VertexShader@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="vertexShaderRef">No documentation.</param>
            <unmanaged>void VSGetShader([Out] ID3D10VertexShader** ppVertexShader)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.VertexShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D10.ShaderResourceView[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numViews">No documentation.</param>
            <param name="shaderResourceViewsRef">No documentation.</param>
            <unmanaged>void VSGetShaderResources([In] int StartSlot,[In] int NumViews,[Out, Buffer] ID3D10ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.VertexShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D10.SamplerState[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numSamplers">No documentation.</param>
            <param name="samplersRef">No documentation.</param>
            <unmanaged>void VSGetSamplers([In] int StartSlot,[In] int NumSamplers,[Out, Buffer] ID3D10SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Device.PixelShaderStage">
            <summary>Inner interface PixelShaderStage.</summary>
            <unmanaged>ID3D10Device</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.PixelShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Device.PixelShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Device.PixelShaderStage.SetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D10.ShaderResourceView[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numViews">No documentation.</param>
            <param name="shaderResourceViewsRef">No documentation.</param>
            <unmanaged>void PSSetShaderResources([In] int StartSlot,[In] int NumViews,[In, Buffer] const ID3D10ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.PixelShaderStage.Set(SharpDX.Direct3D10.PixelShader)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="ixelShaderRef">No documentation.</param>
            <unmanaged>void PSSetShader([In, Optional] ID3D10PixelShader* pPixelShader)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.PixelShaderStage.SetSamplers(System.Int32,System.Int32,SharpDX.Direct3D10.SamplerState[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numSamplers">No documentation.</param>
            <param name="samplersRef">No documentation.</param>
            <unmanaged>void PSSetSamplers([In] int StartSlot,[In] int NumSamplers,[In, Buffer] const ID3D10SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.PixelShaderStage.SetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D10.Buffer[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numBuffers">No documentation.</param>
            <param name="constantBuffersRef">No documentation.</param>
            <unmanaged>void PSSetConstantBuffers([In] int StartSlot,[In] int NumBuffers,[In, Buffer] const ID3D10Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.PixelShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D10.ShaderResourceView[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numViews">No documentation.</param>
            <param name="shaderResourceViewsRef">No documentation.</param>
            <unmanaged>void PSGetShaderResources([In] int StartSlot,[In] int NumViews,[Out, Buffer] ID3D10ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.PixelShaderStage.Get(SharpDX.Direct3D10.PixelShader@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="pixelShaderRef">No documentation.</param>
            <unmanaged>void PSGetShader([Out] ID3D10PixelShader** ppPixelShader)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.PixelShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D10.SamplerState[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numSamplers">No documentation.</param>
            <param name="samplersRef">No documentation.</param>
            <unmanaged>void PSGetSamplers([In] int StartSlot,[In] int NumSamplers,[Out, Buffer] ID3D10SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.PixelShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D10.Buffer[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numBuffers">No documentation.</param>
            <param name="constantBuffersRef">No documentation.</param>
            <unmanaged>void PSGetConstantBuffers([In] int StartSlot,[In] int NumBuffers,[Out, Buffer] ID3D10Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Device.GeometryShaderStage">
            <summary>Inner interface GeometryShaderStage.</summary>
            <unmanaged>ID3D10Device</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GeometryShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Device.GeometryShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GeometryShaderStage.SetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D10.Buffer[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numBuffers">No documentation.</param>
            <param name="constantBuffersRef">No documentation.</param>
            <unmanaged>void GSSetConstantBuffers([In] int StartSlot,[In] int NumBuffers,[In, Buffer] const ID3D10Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GeometryShaderStage.Set(SharpDX.Direct3D10.GeometryShader)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderRef">No documentation.</param>
            <unmanaged>void GSSetShader([In, Optional] ID3D10GeometryShader* pShader)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GeometryShaderStage.SetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D10.ShaderResourceView[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numViews">No documentation.</param>
            <param name="shaderResourceViewsRef">No documentation.</param>
            <unmanaged>void GSSetShaderResources([In] int StartSlot,[In] int NumViews,[In, Buffer] const ID3D10ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GeometryShaderStage.SetSamplers(System.Int32,System.Int32,SharpDX.Direct3D10.SamplerState[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numSamplers">No documentation.</param>
            <param name="samplersRef">No documentation.</param>
            <unmanaged>void GSSetSamplers([In] int StartSlot,[In] int NumSamplers,[In, Buffer] const ID3D10SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GeometryShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D10.Buffer[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numBuffers">No documentation.</param>
            <param name="constantBuffersRef">No documentation.</param>
            <unmanaged>void GSGetConstantBuffers([In] int StartSlot,[In] int NumBuffers,[Out, Buffer] ID3D10Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GeometryShaderStage.Get(SharpDX.Direct3D10.GeometryShader@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="geometryShaderRef">No documentation.</param>
            <unmanaged>void GSGetShader([Out] ID3D10GeometryShader** ppGeometryShader)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GeometryShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D10.ShaderResourceView[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numViews">No documentation.</param>
            <param name="shaderResourceViewsRef">No documentation.</param>
            <unmanaged>void GSGetShaderResources([In] int StartSlot,[In] int NumViews,[Out, Buffer] ID3D10ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device.GeometryShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D10.SamplerState[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startSlot">No documentation.</param>
            <param name="numSamplers">No documentation.</param>
            <param name="samplersRef">No documentation.</param>
            <unmanaged>void GSGetSamplers([In] int StartSlot,[In] int NumSamplers,[Out, Buffer] ID3D10SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Counter">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10Counter</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Asynchronous">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10Asynchronous</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Asynchronous.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Asynchronous"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Asynchronous.Begin">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Asynchronous::Begin()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Asynchronous.End">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Asynchronous::End()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Asynchronous.GetData(System.IntPtr,System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="dataSize">No documentation.</param>
            <param name="getDataFlags">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Asynchronous::GetData([Out, Buffer, Optional] void* pData,[In] int DataSize,[In] int GetDataFlags)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Asynchronous.GetDataSize">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>int ID3D10Asynchronous::GetDataSize()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Asynchronous.GetData">
            <summary>	
            Get data from the GPU asynchronously.	
            </summary>	
            <remarks>	
            GetData retrieves the data collected between calls to <see cref="M:SharpDX.Direct3D10.Asynchronous.Begin"/> and <see cref="M:SharpDX.Direct3D10.Asynchronous.End"/>.  Certain queries only require a call to ID3D10Asynchronous::End in which case the data returned by GetData is accurate up to the last call to ID3D10Asynchronous::End (See <see cref="T:SharpDX.Direct3D10.Query"/>). If DataSize is 0, GetData is only used to check status where a return value of S_OK indicates that data is available to give to an application, and a return value of S_FALSE indicates data is not yet available. It is invalid to invoke this function on a predicate created with the flag D3D10_QUERY_MISCFLAG_PREDICATEHINT. If the asynchronous interface that calls this function is <see cref="T:SharpDX.Direct3D10.Query"/>, then the following table applies.  Query TypeOutput Data TypeSupports Begin Method EVENTBOOLNO OCCLUSIONUINT64YES TIMESTAMPUINT64NO TIMESTAMP_DISJOINTQUERYDATA_TIMESTAMP_DISJOINTYES PIPELINE_STATISTICSQUERYDATA_PIPELINE_STATISTICSYES OCCLUSION_PREDICATEBOOLYES SO_STATISTICSQUERYDATA_SO_STATISTICSYES SO_OVERFLOW_PREDICATEBOOLYES  ? If the asynchronous interface that calls this API is <see cref="T:SharpDX.Direct3D10.Counter"/>, then the following applies.  Counter TypeOutput Data TypeUnits GPU_IDLEFLOAT32fraction of time VERTEX_PROCESSINGFLOAT32fraction of time GEOMETRY_PROCESSINGFLOAT32fraction of time PIXEL_PROCESSINGFLOAT32fraction of time OTHER_GPU_PROCESSINGFLOAT32fraction of time HOST_ADAPTER_BANDWIDTH_UTILIZATIONFLOAT32fraction of theoretical maximum LOCAL_VIDMEM_BANDWIDTH_UTILIZATIONFLOAT32fraction of theoretical maximum VERTEX_THROUGHPUT_UTILIZATIONFLOAT32fraction of theoretical maximum TRISETUP_THROUGHPUT_UTILIZATIONFLOAT32fraction of theoretical maximum FILLRATE_THROUGHPUT_UTILIZATIONFLOAT32fraction of theoretical maximum VERTEXSHADER_MEMORY_LIMITEDFLOAT32fraction of time VERTEXSHADER_COMPUTATION_LIMITEDFLOAT32fraction of time GEOMETRYSHADER_MEMORY_LIMITEDFLOAT32fraction of time GEOMETRYSHADER_COMPUTATION_LIMITEDFLOAT32fraction of time PIXELSHADER_MEMORY_LIMITEDFLOAT32fraction of time PIXELSHADER_COMPUTATION_LIMITEDFLOAT32fraction of time POST_TRANSFORM_CACHE_HIT_RATEFLOAT32fraction TEXTURE_CACHE_HIT_RATEFLOAT32fraction  ? The value returned by a GPU_IDLE, VERTEX_PROCESSING, GEOMETRY_PROCESSING, PIXEL_PROCESSING, or OTHER_GPU_PROCESSING counter may be different depending on the number of parallel counters that exist on a video card, and those values can be interpreted with the following equation:  ?  Equation to interpret the number of parallel counters ? The number of parallel counters that a video card has is available from NumDetectableParallelUnits in <see cref="T:SharpDX.Direct3D10.CounterMetadata"/>, and it can be retrieved by calling <see cref="M:SharpDX.Direct3D10.Device.CheckCounter(SharpDX.Direct3D10.CounterDescription,SharpDX.Direct3D10.CounterType@,System.Int32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)"/>. 	
            </remarks>	
            <returns>If this function succeeds, returns a <see cref="T:SharpDX.DataStream"/> containing the asynchronous data sent from the GPU. </returns>
            <unmanaged>HRESULT ID3D10Asynchronous::GetData([Out, Buffer, Optional] void* pData,[In] int DataSize,[In] int GetDataFlags)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Asynchronous.GetData(SharpDX.Direct3D10.AsynchronousFlags)">
            <summary>	
            Get data from the GPU asynchronously.	
            </summary>	
            <remarks>	
            GetData retrieves the data collected between calls to <see cref="M:SharpDX.Direct3D10.Asynchronous.Begin"/> and <see cref="M:SharpDX.Direct3D10.Asynchronous.End"/>.  Certain queries only require a call to ID3D10Asynchronous::End in which case the data returned by GetData is accurate up to the last call to ID3D10Asynchronous::End (See <see cref="T:SharpDX.Direct3D10.Query"/>). If DataSize is 0, GetData is only used to check status where a return value of S_OK indicates that data is available to give to an application, and a return value of S_FALSE indicates data is not yet available. It is invalid to invoke this function on a predicate created with the flag D3D10_QUERY_MISCFLAG_PREDICATEHINT. If the asynchronous interface that calls this function is <see cref="T:SharpDX.Direct3D10.Query"/>, then the following table applies.  Query TypeOutput Data TypeSupports Begin Method EVENTBOOLNO OCCLUSIONUINT64YES TIMESTAMPUINT64NO TIMESTAMP_DISJOINTQUERYDATA_TIMESTAMP_DISJOINTYES PIPELINE_STATISTICSQUERYDATA_PIPELINE_STATISTICSYES OCCLUSION_PREDICATEBOOLYES SO_STATISTICSQUERYDATA_SO_STATISTICSYES SO_OVERFLOW_PREDICATEBOOLYES  ? If the asynchronous interface that calls this API is <see cref="T:SharpDX.Direct3D10.Counter"/>, then the following applies.  Counter TypeOutput Data TypeUnits GPU_IDLEFLOAT32fraction of time VERTEX_PROCESSINGFLOAT32fraction of time GEOMETRY_PROCESSINGFLOAT32fraction of time PIXEL_PROCESSINGFLOAT32fraction of time OTHER_GPU_PROCESSINGFLOAT32fraction of time HOST_ADAPTER_BANDWIDTH_UTILIZATIONFLOAT32fraction of theoretical maximum LOCAL_VIDMEM_BANDWIDTH_UTILIZATIONFLOAT32fraction of theoretical maximum VERTEX_THROUGHPUT_UTILIZATIONFLOAT32fraction of theoretical maximum TRISETUP_THROUGHPUT_UTILIZATIONFLOAT32fraction of theoretical maximum FILLRATE_THROUGHPUT_UTILIZATIONFLOAT32fraction of theoretical maximum VERTEXSHADER_MEMORY_LIMITEDFLOAT32fraction of time VERTEXSHADER_COMPUTATION_LIMITEDFLOAT32fraction of time GEOMETRYSHADER_MEMORY_LIMITEDFLOAT32fraction of time GEOMETRYSHADER_COMPUTATION_LIMITEDFLOAT32fraction of time PIXELSHADER_MEMORY_LIMITEDFLOAT32fraction of time PIXELSHADER_COMPUTATION_LIMITEDFLOAT32fraction of time POST_TRANSFORM_CACHE_HIT_RATEFLOAT32fraction TEXTURE_CACHE_HIT_RATEFLOAT32fraction  ? The value returned by a GPU_IDLE, VERTEX_PROCESSING, GEOMETRY_PROCESSING, PIXEL_PROCESSING, or OTHER_GPU_PROCESSING counter may be different depending on the number of parallel counters that exist on a video card, and those values can be interpreted with the following equation:  ?  Equation to interpret the number of parallel counters ? The number of parallel counters that a video card has is available from NumDetectableParallelUnits in <see cref="T:SharpDX.Direct3D10.CounterMetadata"/>, and it can be retrieved by calling <see cref="M:SharpDX.Direct3D10.Device.CheckCounter(SharpDX.Direct3D10.CounterDescription,SharpDX.Direct3D10.CounterType@,System.Int32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)"/>. 	
            </remarks>	
            <param name="flags">Optional flags. Can be 0 or any combination of the flags enumerated by <see cref="T:SharpDX.Direct3D10.AsynchronousFlags"/>. </param>
            <returns>If this function succeeds, returns a <see cref="T:SharpDX.DataStream"/> containing the asynchronous data sent from the GPU. </returns>
            <unmanaged>HRESULT ID3D10Asynchronous::GetData([Out, Buffer, Optional] void* pData,[In] int DataSize,[In] int GetDataFlags)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Asynchronous.IsDataAvailable">
            <summary>
            Gets a value indicating whether or not data is available for consumption.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D10.Counter.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.CounterDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D10.Counter" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The counter description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Counter.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Counter"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Counter.GetDescription(SharpDX.Direct3D10.CounterDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10Counter::GetDesc([Out] D3D10_COUNTER_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Counter.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Counter::GetDesc([Out] D3D10_COUNTER_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Buffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10Buffer</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Resource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10Resource</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Resource.MaximumMipLevels">
            <summary>Constant None.</summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Resource.ResourceSizeInMegabytes">
            <summary>Constant None.</summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Resource.MaximumTexture1DArraySize">
            <summary>Constant None.</summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Resource.MaximumTexture2DArraySize">
            <summary>Constant None.</summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Resource.MaximumTexture1DSize">
            <summary>Constant None.</summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Resource.MaximumTexture2DSize">
            <summary>Constant None.</summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Resource.MaximumTexture3DSize">
            <summary>Constant None.</summary>
        </member>
        <member name="F:SharpDX.Direct3D10.Resource.MaximumTextureCubeSize">
            <summary>Constant None.</summary>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.FromSwapChain``1(SharpDX.DXGI.SwapChain,System.Int32)">
            <summary>
              Gets a swap chain back buffer.
            </summary>
            <typeparam name = "T">The type of the buffer.</typeparam>
            <param name = "swapChain">The swap chain to get the buffer from.</param>
            <param name = "index">The index of the desired buffer.</param>
            <returns>The buffer interface, or <c>null</c> on failure.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.FromFile``1(SharpDX.Direct3D10.Device,System.String)">
            <summary>
              Loads a texture from an image file.
            </summary>
            <param name = "device">The device used to load the texture.</param>
            <param name = "fileName">Path to the file on disk.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.FromFile``1(SharpDX.Direct3D10.Device,System.String,SharpDX.Direct3D10.ImageLoadInformation)">
            <summary>
              Loads a texture from an image file.
            </summary>
            <param name = "device">The device used to load the texture.</param>
            <param name = "fileName">Path to the file on disk.</param>
            <param name = "loadInfo">Specifies information used to load the texture.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.FromMemory``1(SharpDX.Direct3D10.Device,System.Byte[])">
            <summary>
              Loads a texture from an image in memory.
            </summary>
            <param name = "device">The device used to load the texture.</param>
            <param name = "memory">Array of memory containing the image data to load.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.FromMemory``1(SharpDX.Direct3D10.Device,System.Byte[],SharpDX.Direct3D10.ImageLoadInformation)">
            <summary>
              Loads a texture from an image in memory.
            </summary>
            <param name = "device">The device used to load the texture.</param>
            <param name = "memory">Array of memory containing the image data to load.</param>
            <param name = "loadInfo">Specifies information used to load the texture.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.FromStream``1(SharpDX.Direct3D10.Device,System.IO.Stream,System.Int32)">
            <summary>
              Loads a texture from a stream of data.
            </summary>
            <param name = "device">The device used to load the texture.</param>
            <param name = "stream">A stream containing the image data to load.</param>
            <param name = "sizeInBytes">Size of the image to load.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.FromStream``1(SharpDX.Direct3D10.Device,System.IO.Stream,System.Int32,SharpDX.Direct3D10.ImageLoadInformation)">
            <summary>
              Loads a texture from a stream of data.
            </summary>
            <param name = "device">The device used to load the texture.</param>
            <param name = "stream">A stream containing the image data to load.</param>
            <param name = "sizeInBytes">Size of the image to load.</param>
            <param name = "loadInfo">Specifies information used to load the texture.</param>
            <returns>The loaded texture object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.ToFile``1(``0,SharpDX.Direct3D10.ImageFileFormat,System.String)">
            <summary>
              Saves a texture to file.
            </summary>
            <param name = "texture">The texture to save.</param>
            <param name = "format">The format the texture will be saved as.</param>
            <param name = "fileName">Name of the destination output file where the texture will be saved.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.ToStream``1(``0,SharpDX.Direct3D10.ImageFileFormat,System.IO.Stream)">
            <summary>
              Saves a texture to a stream.
            </summary>
            <param name = "texture">The texture to save.</param>
            <param name = "format">The format the texture will be saved as.</param>
            <param name = "stream">Destination memory stream where the image will be saved.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.LoadTextureFromTexture(SharpDX.Direct3D10.Resource,SharpDX.Direct3D10.Resource,SharpDX.Direct3D10.TextureLoadInformation)">
            <summary>	
            Load a texture from a texture.	
            </summary>	
            <param name="source">Pointer to the source texture. See <see cref="T:SharpDX.Direct3D10.Resource"/>. </param>
            <param name="destination">Pointer to the destination texture. See <see cref="T:SharpDX.Direct3D10.Resource"/>. </param>
            <param name="loadInformation">Pointer to texture loading parameters. See <see cref="T:SharpDX.Direct3D10.TextureLoadInformation"/>. </param>
            <returns>The return value is one of the values listed in {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT D3DX10LoadTextureFromTexture([None] ID3D10Resource* pSrcTexture,[None] D3DX10_TEXTURE_LOAD_INFO* pLoadInfo,[None] ID3D10Resource* pDstTexture)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.AsSurface">
            <summary>
            Returns a DXGI Surface for this resource.
            </summary>
            <returns>The buffer interface, or <c>null</c> on failure.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.CalculateSubresourceIndex(System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates a subresource index.
            </summary>
            <param name="mipSlice">The index of the desired mip slice.</param>
            <param name="arraySlice">The index of the desired array slice.</param>
            <param name="mipLevels">The total number of mip levels.</param>
            <returns>The subresource index (equivalent to mipSlice + (arraySlice * mipLevels)).</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.FilterTexture(SharpDX.Direct3D10.Resource,System.Int32,SharpDX.Direct3D10.FilterFlags)">
            <summary>	
            Generates mipmap chain using a particular texture filter.	
            </summary>	
            <param name="texture">The texture object to be filtered. See <see cref="T:SharpDX.Direct3D10.Resource"/>. </param>
            <param name="sourceLevel">The mipmap level whose data is used to generate the rest of the mipmap chain. </param>
            <param name="mipFilter">Flags controlling how each miplevel is filtered (or D3DX10_DEFAULT for D3DX10_FILTER_BOX). See <see cref="T:SharpDX.Direct3D10.FilterFlags"/>. </param>
            <returns>The return value is one of the values listed in {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT D3DX10FilterTexture([None] ID3D10Resource* pTexture,[None] int SrcLevel,[None] int MipFilter)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.GetMipSize(System.Int32,System.Int32)">
            <summary>
            Calculate the MipSize
            </summary>
            <param name="mipSlice"></param>
            <param name="baseSliceSize"></param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Resource"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.GetTypeInfo(SharpDX.Direct3D10.ResourceDimension@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="rType">No documentation.</param>
            <unmanaged>void ID3D10Resource::GetType([Out] D3D10_RESOURCE_DIMENSION* rType)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.SetEvictionPriority(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="evictionPriority">No documentation.</param>
            <unmanaged>void ID3D10Resource::SetEvictionPriority([In] int EvictionPriority)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Resource.GetEvictionPriority">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>int ID3D10Resource::GetEvictionPriority()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Resource.TypeInfo">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Resource::GetType([Out] D3D10_RESOURCE_DIMENSION* rType)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Resource.EvictionPriority">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ID3D10Resource::GetEvictionPriority()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Buffer.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.BufferDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Buffer" /> class.
            </summary>
            <param name = "device">The device with which to associate the buffer.</param>
            <param name = "description">The description of the buffer.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Buffer.#ctor(SharpDX.Direct3D10.Device,SharpDX.DataStream,SharpDX.Direct3D10.BufferDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Buffer" /> class.
            </summary>
            <param name = "device">The device with which to associate the buffer.</param>
            <param name = "data">Initial data used to initialize the buffer.</param>
            <param name = "description">The description of the buffer.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Buffer.#ctor(SharpDX.Direct3D10.Device,System.Int32,SharpDX.Direct3D10.ResourceUsage,SharpDX.Direct3D10.BindFlags,SharpDX.Direct3D10.CpuAccessFlags,SharpDX.Direct3D10.ResourceOptionFlags)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Buffer" /> class.
            </summary>
            <param name = "device">The device with which to associate the buffer.</param>
            <param name = "sizeInBytes">The size, in bytes, of the buffer.</param>
            <param name = "usage">The usage pattern for the buffer.</param>
            <param name = "bindFlags">Flags specifying how the buffer will be bound to the pipeline.</param>
            <param name = "accessFlags">Flags specifying how the buffer will be accessible from the CPU.</param>
            <param name = "optionFlags">Miscellaneous resource options.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Buffer.#ctor(SharpDX.Direct3D10.Device,SharpDX.DataStream,System.Int32,SharpDX.Direct3D10.ResourceUsage,SharpDX.Direct3D10.BindFlags,SharpDX.Direct3D10.CpuAccessFlags,SharpDX.Direct3D10.ResourceOptionFlags)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Buffer" /> class.
            </summary>
            <param name = "device">The device with which to associate the buffer.</param>
            <param name = "data">Initial data used to initialize the buffer.</param>
            <param name = "sizeInBytes">The size, in bytes, of the buffer.</param>
            <param name = "usage">The usage pattern for the buffer.</param>
            <param name = "bindFlags">Flags specifying how the buffer will be bound to the pipeline.</param>
            <param name = "accessFlags">Flags specifying how the buffer will be accessible from the CPU.</param>
            <param name = "optionFlags">Miscellaneous resource options.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Buffer.Map(SharpDX.Direct3D10.MapMode)">
            <summary>	
            Get a reference to the data contained in the resource and deny GPU access to the resource.	
            </summary>	
            <remarks>	
            For the CPU to write the contents of a resource, the resource must be created with the dynamic usage flag, D3D10_USAGE_DYNAMIC.  To both read and write those contents, the resource must be created with the staging usage flag, D3D10_USAGE_STAGING. (For more information about  these flags, see <see cref="T:SharpDX.Direct3D10.ResourceUsage"/>.) ID3D10Buffer::Map will retrieve a reference to the resource data.  For a discussion on how to access resources efficiently, see {{Copying and Accessing Resource Data (Direct3D 10)}}. Call <see cref="M:SharpDX.Direct3D10.Buffer.Unmap"/> to signify that the application has finished accessing the resource. ID3D10Buffer::Map has a few other restrictions. For example:  The same buffer cannot be mapped multiple times; in other words, do not call ID3D10Buffer::Map on a buffer that is already mapped. Any buffer that is bound to the pipeline must be unmapped before any rendering operation (that is, <see cref="M:SharpDX.Direct3D10.Device.Draw(System.Int32,System.Int32)"/>)  can be executed.    Differences between Direct3D 9 and Direct3D 10: ID3D10Buffer::Map in Direct3D 10 is analogous to resource {{Lock}} in Direct3D 9.   ? 	
            </remarks>	
            <param name="mapType">Flag that specifies the CPU's permissions for the reading and writing of a resource. For possible values, see <see cref="T:SharpDX.Direct3D10.MapMode"/>. </param>
            <returns>If this function succeeds returns a <see cref="T:SharpDX.DataStream"/> with the size this buffer.</returns>
            <unmanaged>HRESULT ID3D10Buffer::Map([In] D3D10_MAP MapType,[In] int MapFlags,[Out] void** ppData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Buffer.Map(SharpDX.Direct3D10.MapMode,SharpDX.Direct3D10.MapFlags)">
            <summary>	
            Get a reference to the data contained in the resource and deny GPU access to the resource.	
            </summary>	
            <remarks>	
            For the CPU to write the contents of a resource, the resource must be created with the dynamic usage flag, D3D10_USAGE_DYNAMIC.  To both read and write those contents, the resource must be created with the staging usage flag, D3D10_USAGE_STAGING. (For more information about  these flags, see <see cref="T:SharpDX.Direct3D10.ResourceUsage"/>.) ID3D10Buffer::Map will retrieve a reference to the resource data.  For a discussion on how to access resources efficiently, see {{Copying and Accessing Resource Data (Direct3D 10)}}. Call <see cref="M:SharpDX.Direct3D10.Buffer.Unmap"/> to signify that the application has finished accessing the resource. ID3D10Buffer::Map has a few other restrictions. For example:  The same buffer cannot be mapped multiple times; in other words, do not call ID3D10Buffer::Map on a buffer that is already mapped. Any buffer that is bound to the pipeline must be unmapped before any rendering operation (that is, <see cref="M:SharpDX.Direct3D10.Device.Draw(System.Int32,System.Int32)"/>)  can be executed.    Differences between Direct3D 9 and Direct3D 10: ID3D10Buffer::Map in Direct3D 10 is analogous to resource {{Lock}} in Direct3D 9.   ? 	
            </remarks>	
            <param name="mode">Flag that specifies the CPU's permissions for the reading and writing of a resource. For possible values, see <see cref="T:SharpDX.Direct3D10.MapMode"/>. </param>
            <param name="mapFlags">Flag that specifies what the CPU should do when the GPU is busy (see <see cref="T:SharpDX.Direct3D10.MapFlags"/>). This flag is optional. </param>
            <returns>If this function succeeds returns a <see cref="T:SharpDX.DataStream"/> with the size this buffer.</returns>
            <unmanaged>HRESULT ID3D10Buffer::Map([In] D3D10_MAP MapType,[In] int MapFlags,[Out] void** ppData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Buffer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Buffer"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Buffer.Map(SharpDX.Direct3D10.MapMode,SharpDX.Direct3D10.MapFlags,System.IntPtr@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="mapType">No documentation.</param>
            <param name="mapFlags">No documentation.</param>
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Buffer::Map([In] D3D10_MAP MapType,[In] D3D10_MAP_FLAG MapFlags,[Out] void** ppData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Buffer.Unmap">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Buffer::Unmap()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Buffer.GetDescription(SharpDX.Direct3D10.BufferDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10Buffer::GetDesc([Out] D3D10_BUFFER_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Buffer.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Buffer::GetDesc([Out] D3D10_BUFFER_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.StateBlock">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10StateBlock</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.StateBlock.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.StateBlockMask)">
            <summary>	
            Create a state block.	
            </summary>	
            <remarks>	
            A state block is a collection of device state, and is used for saving and restoring device state. Use a state-block mask to enable subsets of state for saving and restoring. The <see cref="T:SharpDX.Direct3D10.StateBlockMask"/> structure can be filled manually or by using any of the D3D10StateBlockMaskXXX APIs. A state block mask can also be obtained by calling <see cref="M:SharpDX.Direct3D10.EffectTechnique.ComputeStateBlockMask(SharpDX.Direct3D10.StateBlockMask@)"/> or <see cref="M:SharpDX.Direct3D10.EffectPass.ComputeStateBlockMask(SharpDX.Direct3D10.StateBlockMask@)"/>.   Differences between Direct3D 9 and Direct3D 10: In Direct3D 10, a state block object does not contain any valid information about the state of the device until <see cref="M:SharpDX.Direct3D10.StateBlock.Capture"/> is called. In Direct3D 9, state is saved in a state block object, when it is created.   ? 	
            </remarks>	
            <param name="device">The device for which the state block will be created. </param>
            <param name="mask">Indicates which parts of the device state will be captured when calling <see cref="M:SharpDX.Direct3D10.StateBlock.Capture"/> and reapplied when calling <see cref="M:SharpDX.Direct3D10.StateBlock.Apply"/>. See remarks. </param>
            <unmanaged>HRESULT D3D10CreateStateBlock([None] ID3D10Device* pDevice,[None] D3D10_STATE_BLOCK_MASK* pStateBlockMask,[None] ID3D10StateBlock** ppStateBlock)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.StateBlock.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.StateBlock"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.StateBlock.Capture">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10StateBlock::Capture()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.StateBlock.Apply">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10StateBlock::Apply()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.StateBlock.ReleaseAllDeviceObjects">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10StateBlock::ReleaseAllDeviceObjects()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.StateBlock.GetDevice(SharpDX.Direct3D10.Device@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10StateBlock::GetDevice([Out] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.StateBlock.Device">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3D10StateBlock::GetDevice([Out] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.FontDrawFlags">
            <summary>
            Specifies formatting options for text rendering.
            </summary>
            <unmanaged>DT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDrawFlags.Bottom">
            <summary>
            Align the text to the bottom.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDrawFlags.Center">
            <summary>
            Align the text to the center.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDrawFlags.ExpandTabs">
            <summary>
            Expand tab characters.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDrawFlags.Left">
            <summary>
            Align the text to the left.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDrawFlags.NoClip">
            <summary>
            Don't clip the text.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDrawFlags.Right">
            <summary>
            Align the text to the right.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDrawFlags.RtlReading">
            <summary>
            Rendering the text in right-to-left reading order.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDrawFlags.SingleLine">
            <summary>
            Force all text to a single line.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDrawFlags.Top">
            <summary>
            Align the text to the top.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDrawFlags.VerticalCenter">
            <summary>
            Vertically align the text to the center.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDrawFlags.WordBreak">
            <summary>
            Allow word breaks.
            </summary>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectRenderTargetViewVariable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectRenderTargetViewVariable</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectVariable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectVariable</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectVariable"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.IsValid_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>BOOL ID3D10EffectVariable::IsValid()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.GetTypeInfo">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectType* ID3D10EffectVariable::GetType()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.GetDescription(SharpDX.Direct3D10.EffectVariableDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVariable::GetDesc([Out] D3D10_EFFECT_VARIABLE_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.GetAnnotationByIndex(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVariable* ID3D10EffectVariable::GetAnnotationByIndex([None] int Index)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.GetAnnotationByName(System.String)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="name">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVariable* ID3D10EffectVariable::GetAnnotationByName([None] const char* Name)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.GetMemberByIndex(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVariable* ID3D10EffectVariable::GetMemberByIndex([None] int Index)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.GetMemberByName(System.String)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="name">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVariable* ID3D10EffectVariable::GetMemberByName([None] const char* Name)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.GetMemberBySemantic(System.String)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="semantic">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVariable* ID3D10EffectVariable::GetMemberBySemantic([None] const char* Semantic)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.GetElement(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVariable* ID3D10EffectVariable::GetElement([None] int Index)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.GetParentConstantBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectConstantBuffer* ID3D10EffectVariable::GetParentConstantBuffer()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsScalar_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectScalarVariable* ID3D10EffectVariable::AsScalar()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsVector_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVectorVariable* ID3D10EffectVariable::AsVector()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsMatrix_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectMatrixVariable* ID3D10EffectVariable::AsMatrix()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsString_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectStringVariable* ID3D10EffectVariable::AsString()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsShaderResource_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectShaderResourceVariable* ID3D10EffectVariable::AsShaderResource()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsRenderTargetView_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectRenderTargetViewVariable* ID3D10EffectVariable::AsRenderTargetView()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsDepthStencilView_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectDepthStencilViewVariable* ID3D10EffectVariable::AsDepthStencilView()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsConstantBuffer_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectConstantBuffer* ID3D10EffectVariable::AsConstantBuffer()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsShader_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectShaderVariable* ID3D10EffectVariable::AsShader()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsBlend_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectBlendVariable* ID3D10EffectVariable::AsBlend()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsDepthStencil_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectDepthStencilVariable* ID3D10EffectVariable::AsDepthStencil()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsRasterizer_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectRasterizerVariable* ID3D10EffectVariable::AsRasterizer()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsSampler_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectSamplerVariable* ID3D10EffectVariable::AsSampler()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.SetRawValue(System.IntPtr,System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVariable::SetRawValue([None] void* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.GetRawValue(System.IntPtr,System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVariable::GetRawValue([None] void* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.SetRawValue(SharpDX.DataStream,System.Int32)">
            <summary>
            Set data.
            </summary>
            <param name="data">A reference to the variable.</param>
            <param name="count">size in bytes of data to write.</param>
            <returns>
            Returns one of the following {{Direct3D 10 Return Codes}}.
            </returns>
            <remarks>
            This method does no conversion or type checking; it is therefore a very quick way to access array items.
            </remarks>
            <unmanaged>HRESULT ID3D10EffectVariable::SetRawValue([None] void* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.GetRawValue(System.Int32)">
            <summary>	
            Get data.	
            </summary>	
            <remarks>	
            This method does no conversion or type checking; it is therefore a very quick way to access array items. 	
            </remarks>	
            <param name="count">The number of bytes to get. </param>
            <returns>Returns a <see cref="T:SharpDX.DataStream"/> filled with the value. </returns>
            <unmanaged>HRESULT ID3D10EffectVariable::GetRawValue([None] void* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsScalar">
            <summary>	
            Get a scalar variable.	
            </summary>	
            <remarks>	
            AsScalar returns a version of the effect variable that has been specialized to a scalar variable. Similar to a cast, this specialization will return an invalid object if the effect variable does not contain scalar data. Applications can test the returned object for validity by calling {{IsValid}}. 	
            </remarks>	
            <returns>A reference to a scalar variable. See <see cref="T:SharpDX.Direct3D10.EffectScalarVariable"/>. </returns>
            <unmanaged>ID3D10EffectScalarVariable* ID3D10EffectVariable::AsScalar()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsVector">
            <summary>	
            Get a vector variable.	
            </summary>	
            <remarks>	
            AsVector returns a version of the effect variable that has been specialized to a vector variable. Similar to a cast, this specialization will return an invalid object if the effect variable does not contain vector data. Applications can test the returned object for validity by calling {{IsValid}}. 	
            </remarks>	
            <returns>A reference to a vector variable. See <see cref="T:SharpDX.Direct3D10.EffectVectorVariable"/>. </returns>
            <unmanaged>ID3D10EffectVectorVariable* ID3D10EffectVariable::AsVector()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsMatrix">
            <summary>	
            Get a matrix variable.	
            </summary>	
            <remarks>	
            AsMatrix returns a version of the effect variable that has been specialized to a matrix variable. Similar to a cast, this specialization will return an invalid object if the effect variable does not contain matrix data. Applications can test the returned object for validity by calling {{IsValid}}. 	
            </remarks>	
            <returns>A reference to a matrix variable. See <see cref="T:SharpDX.Direct3D10.EffectMatrixVariable"/>. </returns>
            <unmanaged>ID3D10EffectMatrixVariable* ID3D10EffectVariable::AsMatrix()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsString">
            <summary>	
            Get a string variable.	
            </summary>	
            <remarks>	
            AsString returns a version of the effect variable that has been specialized to a string variable. Similar to a cast, this specialization will return an invalid object if the effect variable does not contain string data. Applications can test the returned object for validity by calling {{IsValid}}. 	
            </remarks>	
            <returns>A reference to a string variable. See <see cref="T:SharpDX.Direct3D10.EffectStringVariable"/>. </returns>
            <unmanaged>ID3D10EffectStringVariable* ID3D10EffectVariable::AsString()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsShaderResource">
            <summary>	
            Get a shader-resource variable.	
            </summary>	
            <remarks>	
            AsShaderResource returns a version of the effect variable that has been specialized to a shader-resource variable. Similar to a cast, this specialization will return an invalid object if the effect variable does not contain shader-resource data. Applications can test the returned object for validity by calling {{IsValid}}. 	
            </remarks>	
            <returns>A reference to a shader-resource variable. See <see cref="T:SharpDX.Direct3D10.EffectShaderResourceVariable"/>. </returns>
            <unmanaged>ID3D10EffectShaderResourceVariable* ID3D10EffectVariable::AsShaderResource()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsRenderTargetView">
            <summary>	
            Get a render-target-view variable.	
            </summary>	
            <remarks>	
            This method returns a version of the effect variable that has been specialized to a render-target-view variable. Similar to a cast, this specialization will return an invalid object if the effect variable does not contain render-target-view data. Applications can test the returned object for validity by calling {{IsValid}}. 	
            </remarks>	
            <returns>A reference to a render-target-view variable. See <see cref="T:SharpDX.Direct3D10.EffectRenderTargetViewVariable"/>. </returns>
            <unmanaged>ID3D10EffectRenderTargetViewVariable* ID3D10EffectVariable::AsRenderTargetView()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsDepthStencilView">
            <summary>	
            Get a depth-stencil-view variable.	
            </summary>	
            <remarks>	
            This method returns a version of the effect variable that has been specialized to a depth-stencil-view variable. Similar to a cast, this specialization will return an invalid object if the effect variable does not contain depth-stencil-view data. Applications can test the returned object for validity by calling {{IsValid}}. 	
            </remarks>	
            <returns>A reference to a depth-stencil-view variable. See <see cref="T:SharpDX.Direct3D10.EffectDepthStencilViewVariable"/>. </returns>
            <unmanaged>ID3D10EffectDepthStencilViewVariable* ID3D10EffectVariable::AsDepthStencilView()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsConstantBuffer">
            <summary>	
            Get a constant buffer.	
            </summary>	
            <remarks>	
            AsConstantBuffer returns a version of the effect variable that has been specialized to a constant buffer. Similar to a cast, this specialization will return an invalid object if the effect variable does not contain constant buffer data. Applications can test the returned object for validity by calling {{IsValid}}. 	
            </remarks>	
            <returns>A reference to a constant buffer. See <see cref="T:SharpDX.Direct3D10.EffectConstantBuffer"/>. </returns>
            <unmanaged>ID3D10EffectConstantBuffer* ID3D10EffectVariable::AsConstantBuffer()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsShader">
            <summary>	
            Get a shader variable.	
            </summary>	
            <remarks>	
            AsShader returns a version of the effect variable that has been specialized to a shader variable. Similar to a cast, this specialization will return an invalid object if the effect variable does not contain shader data. Applications can test the returned object for validity by calling {{IsValid}}. 	
            </remarks>	
            <returns>A reference to a shader variable. See <see cref="T:SharpDX.Direct3D10.EffectShaderVariable"/>. </returns>
            <unmanaged>ID3D10EffectShaderVariable* ID3D10EffectVariable::AsShader()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsBlend">
            <summary>	
            Get a effect-blend variable.	
            </summary>	
            <remarks>	
            AsBlend returns a version of the effect variable that has been specialized to an effect-blend variable. Similar to a cast, this specialization will return an invalid object if the effect variable does not contain effect-blend data. Applications can test the returned object for validity by calling {{IsValid}}. 	
            </remarks>	
            <returns>A reference to an effect blend variable. See <see cref="T:SharpDX.Direct3D10.EffectBlendVariable"/>. </returns>
            <unmanaged>ID3D10EffectBlendVariable* ID3D10EffectVariable::AsBlend()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsDepthStencil">
            <summary>	
            Get a depth-stencil variable.	
            </summary>	
            <remarks>	
            AsDepthStencil returns a version of the effect variable that has been specialized to a depth-stencil variable. Similar to a cast, this specialization will return an invalid object if the effect variable does not contain depth-stencil data. Applications can test the returned object for validity by calling {{IsValid}}. 	
            </remarks>	
            <returns>A reference to a depth-stencil variable. See <see cref="T:SharpDX.Direct3D10.EffectDepthStencilVariable"/>. </returns>
            <unmanaged>ID3D10EffectDepthStencilVariable* ID3D10EffectVariable::AsDepthStencil()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsRasterizer">
            <summary>	
            Get a rasterizer variable.	
            </summary>	
            <remarks>	
            AsRasterizer returns a version of the effect variable that has been specialized to a rasterizer variable. Similar to a cast, this specialization will return an invalid object if the effect variable does not contain rasterizer data. Applications can test the returned object for validity by calling {{IsValid}}. 	
            </remarks>	
            <returns>A reference to a rasterizer variable. See <see cref="T:SharpDX.Direct3D10.EffectRasterizerVariable"/>. </returns>
            <unmanaged>ID3D10EffectRasterizerVariable* ID3D10EffectVariable::AsRasterizer()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVariable.AsSampler">
            <summary>	
            Get a sampler variable.	
            </summary>	
            <remarks>	
            AsSampler returns a version of the effect variable that has been specialized to a sampler variable. Similar to a cast, this specialization will return an invalid object if the effect variable does not contain sampler data. Applications can test the returned object for validity by calling {{IsValid}}. 	
            </remarks>	
            <returns>A reference to a sampler variable. See <see cref="T:SharpDX.Direct3D10.EffectSamplerVariable"/>. </returns>
            <unmanaged>ID3D10EffectSamplerVariable* ID3D10EffectVariable::AsSampler()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectVariable.IsValid">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL ID3D10EffectVariable::IsValid()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectVariable.TypeInfo">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectType* ID3D10EffectVariable::GetType()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectVariable.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3D10EffectVariable::GetDesc([Out] D3D10_EFFECT_VARIABLE_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectVariable.ParentConstantBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectConstantBuffer* ID3D10EffectVariable::GetParentConstantBuffer()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectRenderTargetViewVariable.SetRenderTargetArray(SharpDX.Direct3D10.RenderTargetView[])">
            <summary>	
            Set an array of render-targets.	
            </summary>	
            <param name="resourcesRef">Set an array of render-target-view interfaces. See <see cref="T:SharpDX.Direct3D10.RenderTargetView"/>. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectRenderTargetViewVariable::SetRenderTargetArray([In, Buffer] ID3D10RenderTargetView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectRenderTargetViewVariable.SetRenderTargetArray(SharpDX.Direct3D10.RenderTargetView[],System.Int32)">
            <summary>	
            Set an array of render-targets.	
            </summary>	
            <param name="resourcesRef">Set an array of render-target-view interfaces. See <see cref="T:SharpDX.Direct3D10.RenderTargetView"/>. </param>
            <param name="offset">The zero-based array index to store the first interface. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectRenderTargetViewVariable::SetRenderTargetArray([In, Buffer] ID3D10RenderTargetView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectRenderTargetViewVariable.GetRenderTargetArray(System.Int32)">
            <summary>	
            Get an array of render-targets.	
            </summary>	
            <param name="count">The number of elements in the array. </param>
            <returns>Returns an array of <see cref="T:SharpDX.Direct3D10.RenderTargetView"/>. </returns>
            <unmanaged>HRESULT ID3D10EffectRenderTargetViewVariable::GetRenderTargetArray([Out, Buffer] ID3D10RenderTargetView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectRenderTargetViewVariable.GetRenderTargetArray(System.Int32,System.Int32)">
            <summary>	
            Get an array of render-targets.	
            </summary>	
            <param name="offset">The zero-based array index to get the first interface. </param>
            <param name="count">The number of elements in the array. </param>
            <returns>Returns an array of <see cref="T:SharpDX.Direct3D10.RenderTargetView"/>. </returns>
            <unmanaged>HRESULT ID3D10EffectRenderTargetViewVariable::GetRenderTargetArray([Out, Buffer] ID3D10RenderTargetView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectRenderTargetViewVariable.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectRenderTargetViewVariable"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectRenderTargetViewVariable.SetRenderTarget(SharpDX.Direct3D10.RenderTargetView)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectRenderTargetViewVariable::SetRenderTarget([None] ID3D10RenderTargetView* pResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectRenderTargetViewVariable.GetRenderTarget">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectRenderTargetViewVariable::GetRenderTarget([Out] ID3D10RenderTargetView** ppResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectRenderTargetViewVariable.SetRenderTargetArray(SharpDX.Direct3D10.RenderTargetView[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourcesRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectRenderTargetViewVariable::SetRenderTargetArray([In, Buffer] ID3D10RenderTargetView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectRenderTargetViewVariable.GetRenderTargetArray(SharpDX.Direct3D10.RenderTargetView[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourcesRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectRenderTargetViewVariable::GetRenderTargetArray([Out, Buffer] ID3D10RenderTargetView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectPool">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectPool</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPool.#ctor(SharpDX.Direct3D10.Device,SharpDX.D3DCompiler.ShaderBytecode)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectPool"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="effectByteCode">The effect byte code.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPool.#ctor(SharpDX.Direct3D10.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.D3DCompiler.EffectFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectPool"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="effectByteCode">The effect byte code.</param>
            <param name="fxFlags">Effect compile options</param>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPool.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectPool"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPool.AsEffect">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>ID3D10Effect* ID3D10EffectPool::AsEffect()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectPassShaderDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_PASS_SHADER_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectPassShaderDescription.VariablePointer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectShaderVariable* pShaderVariable</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectPassShaderDescription.Index">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ShaderIndex</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectPassShaderDescription.Variable">
            <summary>	
            A reference to the variable that the shader came from. If it is an inline shader assignment, the returned interface will be an anonymous shader variable, which is not retrievable any other way.  Its name in the variable description will be "$Anonymous". If there is no assignment of this type in the pass block, this will point to a shader variable that returns false when IsValid is called. 	
            </summary>	
            <unmanaged>ID3D10EffectShaderVariable* pShaderVariable</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Query">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10Query</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Query.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.QueryDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D10.Query" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The query description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Query.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Query"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Query.GetDescription(SharpDX.Direct3D10.QueryDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10Query::GetDesc([Out] D3D10_QUERY_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Query.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Query::GetDesc([Out] D3D10_QUERY_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.InputLayout">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10InputLayout</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.InputLayout.#ctor(SharpDX.Direct3D10.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.Direct3D10.InputElement[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.InputLayout" /> object to describe the
              input-buffer data for the input-assembler stage.
            </summary>
            <unmanaged>ID3D10Device::CreateInputLayout</unmanaged>
            <param name = "device">The device used to create the layout.</param>
            <param name = "elements">An array of input elements describing the layout of the input data.</param>
            <param name = "shaderBytecode">The compiled shader used to validate the input elements.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.InputLayout.#ctor(SharpDX.Direct3D10.Device,SharpDX.D3DCompiler.ShaderSignature,SharpDX.Direct3D10.InputElement[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.InputLayout" /> object to describe the
              input-buffer data for the input-assembler stage.
            </summary>
            <unmanaged>ID3D10Device::CreateInputLayout</unmanaged>
            <param name = "device">The device used to create the layout.</param>
            <param name = "elements">An array of input elements describing the layout of the input data.</param>
            <param name = "shaderSignature">The shader signature used to validate the input elements.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.InputLayout.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.InputLayout"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="T:SharpDX.Direct3D10.ImageLoadInformation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_IMAGE_LOAD_INFO</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.FileDefaultValue">
            <summary>
            The default value for load options.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.Width">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Width</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.Height">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Height</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.Depth">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Depth</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.FirstMipLevel">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FirstMipLevel</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.MipLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipLevels</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.Usage">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_USAGE Usage</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.BindFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BIND_FLAG BindFlags</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.CpuAccessFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CPU_ACCESS_FLAG CpuAccessFlags</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.OptionFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_MISC_FLAG MiscFlags</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.Format">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.Filter">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_FLAG Filter</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.MipFilter">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_FLAG MipFilter</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageLoadInformation.PSrcInfo">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_IMAGE_INFO* pSrcInfo</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectShaderResourceVariable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectShaderResourceVariable</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderResourceVariable.SetResourceArray(SharpDX.Direct3D10.ShaderResourceView[])">
            <summary>	
            Set an array of shader resources.	
            </summary>	
            <param name="resourcesRef">The address of an array of shader-resource-view interfaces. See <see cref="T:SharpDX.Direct3D10.ShaderResourceView"/>. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectShaderResourceVariable::SetResourceArray([None] ID3D10ShaderResourceView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderResourceVariable.SetResourceArray(SharpDX.Direct3D10.ShaderResourceView[],System.Int32)">
            <summary>	
            Set an array of shader resources.	
            </summary>	
            <param name="resourcesRef">The address of an array of shader-resource-view interfaces. See <see cref="T:SharpDX.Direct3D10.ShaderResourceView"/>. </param>
            <param name="offset">The zero-based array index to get the first interface. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectShaderResourceVariable::SetResourceArray([None] ID3D10ShaderResourceView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderResourceVariable.GetResourceArray(System.Int32)">
            <summary>	
            Get an array of shader resources.	
            </summary>	
            <param name="count">The number of elements in the array. </param>
            <returns>Returns an array of shader-resource-view interfaces. See <see cref="T:SharpDX.Direct3D10.ShaderResourceView"/>. </returns>
            <unmanaged>HRESULT ID3D10EffectShaderResourceVariable::GetResourceArray([Out] ID3D10ShaderResourceView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderResourceVariable.GetResourceArray(System.Int32,System.Int32)">
            <summary>	
            Get an array of shader resources.	
            </summary>	
            <param name="offset">The zero-based array index to get the first interface. </param>
            <param name="count">The number of elements in the array. </param>
            <returns>Returns an array of shader-resource-view interfaces. See <see cref="T:SharpDX.Direct3D10.ShaderResourceView"/>. </returns>
            <unmanaged>HRESULT ID3D10EffectShaderResourceVariable::GetResourceArray([Out] ID3D10ShaderResourceView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderResourceVariable.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectShaderResourceVariable"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderResourceVariable.SetResource(SharpDX.Direct3D10.ShaderResourceView)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectShaderResourceVariable::SetResource([None] ID3D10ShaderResourceView* pResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderResourceVariable.GetResource">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectShaderResourceVariable::GetResource([Out] ID3D10ShaderResourceView** ppResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderResourceVariable.SetResourceArray(SharpDX.Direct3D10.ShaderResourceView[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourcesRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectShaderResourceVariable::SetResourceArray([In, Buffer] ID3D10ShaderResourceView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderResourceVariable.GetResourceArray(SharpDX.Direct3D10.ShaderResourceView[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourcesRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectShaderResourceVariable::GetResourceArray([Out, Buffer] ID3D10ShaderResourceView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectSamplerVariable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectSamplerVariable</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectSamplerVariable.GetSampler">
            <summary>	
            Get a reference to a sampler interface.	
            </summary>	
            <returns>Returns a reference to a sampler interface (see <see cref="T:SharpDX.Direct3D10.SamplerState"/>).  </returns>
            <unmanaged>HRESULT ID3D10EffectSamplerVariable::GetSampler([None] int Index,[Out] ID3D10SamplerState** ppSampler)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectSamplerVariable.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectSamplerVariable"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectSamplerVariable.GetSampler(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectSamplerVariable::GetSampler([None] int Index,[Out] ID3D10SamplerState** ppSampler)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectSamplerVariable.GetBackingStore(System.Int32,SharpDX.Direct3D10.SamplerStateDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <param name="samplerDescRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectSamplerVariable::GetBackingStore([None] int Index,[Out] D3D10_SAMPLER_DESC* pSamplerDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Texture1D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10Texture1D</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture1D.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Texture1DDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Texture1D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture1D.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Texture1DDescription,SharpDX.DataStream)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Texture1D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">The initial texture data.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture1D.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Texture1DDescription,SharpDX.DataStream[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Texture1D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">An array of initial texture data for each subresource.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture1D.Map(System.Int32,SharpDX.Direct3D10.MapMode,SharpDX.Direct3D10.MapFlags)">
            <summary>
            Maps the texture, providing CPU access to its contents.
            </summary>
            <param name="mipSlice">The mip slice to map.</param>
            <param name="mode">The IO operations to enable on the CPU.</param>
            <param name="flags">Flags indicating how the CPU should respond when the GPU is busy.</param>
            <returns>A data stream containing the mapped data. This data stream is invalidated
            when the buffer is unmapped.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture1D.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Texture1D"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Texture1D.Map(System.Int32,SharpDX.Direct3D10.MapMode,SharpDX.Direct3D10.MapFlags,System.IntPtr@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="subresource">No documentation.</param>
            <param name="mapType">No documentation.</param>
            <param name="mapFlags">No documentation.</param>
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Texture1D::Map([In] int Subresource,[In] D3D10_MAP MapType,[In] D3D10_MAP_FLAG MapFlags,[Out] void** ppData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture1D.Unmap(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="subresource">No documentation.</param>
            <unmanaged>void ID3D10Texture1D::Unmap([In] int Subresource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture1D.GetDescription(SharpDX.Direct3D10.Texture1DDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10Texture1D::GetDesc([Out] D3D10_TEXTURE1D_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Texture1D.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Texture1D::GetDesc([Out] D3D10_TEXTURE1D_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.FontCharacterSet">
            <summary>
            Defines possible character sets for fonts.
            </summary>
            <unmanaged>CHARSET</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Ansi">
            <summary>
            The ANSI character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Arabic">
            <summary>
            The Arabic character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Baltic">
            <summary>
            The Baltic character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.ChineseBig5">
            <summary>
            The Chinese character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Default">
            <summary>
            The default system character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.EastEurope">
            <summary>
            The East Europe character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.GB2312">
            <summary>
            The GB2312 character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Greek">
            <summary>
            The Greek character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Hangul">
            <summary>
            The Hangul character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Hebrew">
            <summary>
            The Hebrew character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Johab">
            <summary>
            The Johab character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Mac">
            <summary>
            The Mac character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Oem">
            <summary>
            The OEM character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Russian">
            <summary>
            The Russian character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.ShiftJIS">
            <summary>
            The ShiftJIS character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Symbol">
            <summary>
            The symbol character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Thai">
            <summary>
            The Thai character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Turkish">
            <summary>
            The Turkish character set.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontCharacterSet.Vietnamese">
            <summary>
            The Vietnamese character set.
            </summary>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectScalarVariable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectScalarVariable</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.Set(System.Single)">
            <summary>	
            Set a floating-point variable.	
            </summary>	
            <param name="value">A reference to the variable. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetFloat([None] float Value)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.Set(System.Single[])">
            <summary>	
            Set an array of floating-point variables.	
            </summary>	
            <param name="dataRef">A reference to the start of the data to set. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetFloatArray([In, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.Set(System.Single[],System.Int32)">
            <summary>	
            Set an array of floating-point variables.	
            </summary>	
            <param name="dataRef">A reference to the start of the data to set. </param>
            <param name="offset">Must be set to 0; this is reserved for future use.  </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetFloatArray([In, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.GetFloatArray(System.Int32)">
            <summary>	
            Get an array of floating-point variables.	
            </summary>	
            <param name="count">The number of array elements to set. </param>
            <returns>Returns an array of floats. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::GetFloatArray([Out, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.GetFloatArray(System.Int32,System.Int32)">
            <summary>	
            Get an array of floating-point variables.	
            </summary>	
            <param name="offset">Must be set to 0; this is reserved for future use.  </param>
            <param name="count">The number of array elements to set. </param>
            <returns>Returns an array of floats. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::GetFloatArray([Out, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.Set(System.Int32)">
            <summary>	
            Set an integer variable.	
            </summary>	
            <param name="value">A reference to the variable. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetInt([None] int Value)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.Set(System.Int32[])">
            <summary>	
            Set an array of integer variables.	
            </summary>	
            <param name="dataRef">A reference to the start of the data to set. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetIntArray([In, Buffer] int* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.Set(System.Int32[],System.Int32)">
            <summary>	
            Set an array of integer variables.	
            </summary>	
            <param name="dataRef">A reference to the start of the data to set. </param>
            <param name="offset">Must be set to 0; this is reserved for future use.  </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetIntArray([In, Buffer] int* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.GetIntArray(System.Int32)">
            <summary>	
            Get an array of integer variables.	
            </summary>	
            <param name="count">The number of array elements to set. </param>
            <returns>Returns an array of integer variables. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::GetIntArray([Out, Buffer] int* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.GetIntArray(System.Int32,System.Int32)">
            <summary>	
            Get an array of integer variables.	
            </summary>	
            <param name="offset">Must be set to 0; this is reserved for future use.  </param>
            <param name="count">The number of array elements to set. </param>
            <returns>Returns an array of integer variables. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::GetIntArray([Out, Buffer] int* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.Set(System.Boolean)">
            <summary>	
            Set a boolean variable.	
            </summary>	
            <param name="value">A reference to the variable. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetBool([None] BOOL Value)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.GetBool">
            <summary>	
            Get a boolean variable.	
            </summary>	
            <returns>Returns a boolean. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::GetBool([Out] BOOL* pValue)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.Set(System.Boolean[])">
            <summary>	
            Set an array of boolean variables.	
            </summary>	
            <param name="dataRef">A reference to the start of the data to set. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetBoolArray([In, Buffer] BOOL* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.Set(System.Boolean[],System.Int32)">
            <summary>	
            Set an array of boolean variables.	
            </summary>	
            <param name="dataRef">A reference to the start of the data to set. </param>
            <param name="offset">Must be set to 0; this is reserved for future use.  </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetBoolArray([In, Buffer] BOOL* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.GetBoolArray(System.Int32,System.Int32)">
            <summary>	
            Get an array of boolean variables.	
            </summary>	
            <param name="offset">Must be set to 0; this is reserved for future use.  </param>
            <param name="count">The number of array elements to set. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::GetBoolArray([Out, Buffer] BOOL* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectScalarVariable"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.SetFloat(System.Single)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="value">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetFloat([None] float Value)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.GetFloat">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::GetFloat([Out] float* pValue)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.SetFloatArray(System.Single[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetFloatArray([In, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.GetFloatArray(System.Single[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::GetFloatArray([Out, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.SetInt(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="value">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetInt([None] int Value)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.GetInt">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::GetInt([Out] int* pValue)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.SetIntArray(System.Int32[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetIntArray([In, Buffer] int* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.GetIntArray(System.Int32[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::GetIntArray([Out, Buffer] int* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.SetBool(System.Boolean)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="value">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetBool([None] BOOL Value)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.GetBool(System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="valueRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::GetBool([Out] BOOL* pValue)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.SetBoolArray(System.Int32[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::SetBoolArray([In, Buffer] BOOL* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectScalarVariable.GetBoolArray(System.Int32[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectScalarVariable::GetBoolArray([Out, Buffer] BOOL* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10Texture2D</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture2D.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Texture2DDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Texture2D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture2D.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Texture2DDescription,SharpDX.DataRectangle)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Texture2D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">The initial texture data.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture2D.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Texture2DDescription,SharpDX.DataRectangle[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Texture2D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">An array of initial texture data for each subresource.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture2D.ComputeNormalMap(SharpDX.Direct3D10.Texture2D,SharpDX.Direct3D10.Texture2D,SharpDX.Direct3D10.NormalMapFlags,SharpDX.Direct3D10.Channel,System.Single)">
            <summary>
              Converts a height map into a normal map. The (x,y,z) components of each normal are mapped to the (r,g,b) channels of the output texture.
            </summary>
            <param name = "source">The source height map texture.</param>
            <param name = "destination">The destination texture.</param>
            <param name = "flags">One or more flags that control generation of normal maps.</param>
            <param name = "channel">One or more flag specifying the source of height information.</param>
            <param name = "amplitude">Constant value multiplier that increases (or decreases) the values in the normal map. Higher values usually make bumps more visible, lower values usually make bumps less visible.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture2D.Map(System.Int32,SharpDX.Direct3D10.MapMode,SharpDX.Direct3D10.MapFlags)">
            <summary>
            Maps the texture, providing CPU access to its contents.
            </summary>
            <param name="mipSlice">The mip slice to map.</param>
            <param name="mode">The IO operations to enable on the CPU.</param>
            <param name="flags">Flags indicating how the CPU should respond when the GPU is busy.</param>
            <returns>A data rectangle containing the mapped data. This data stream is invalidated when the buffer is unmapped.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture2D.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Texture2D"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Texture2D.Map(System.Int32,SharpDX.Direct3D10.MapMode,SharpDX.Direct3D10.MapFlags,SharpDX.Direct3D10.MappedTexture2D@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="subresource">No documentation.</param>
            <param name="mapType">No documentation.</param>
            <param name="mapFlags">No documentation.</param>
            <param name="mappedTex2DRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Texture2D::Map([In] int Subresource,[In] D3D10_MAP MapType,[In] D3D10_MAP_FLAG MapFlags,[Out] D3D10_MAPPED_TEXTURE2D* pMappedTex2D)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture2D.Unmap(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="subresource">No documentation.</param>
            <unmanaged>void ID3D10Texture2D::Unmap([In] int Subresource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture2D.GetDescription(SharpDX.Direct3D10.Texture2DDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10Texture2D::GetDesc([Out] D3D10_TEXTURE2D_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Texture2D.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Texture2D::GetDesc([Out] D3D10_TEXTURE2D_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Debug">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10Debug</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Debug.#ctor(SharpDX.Direct3D10.Device)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Debug"/> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Debug.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Debug"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Debug.SetFeatureFlags(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="mask">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Debug::SetFeatureMask([None] int Mask)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Debug.GetFeatureFlags">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>int ID3D10Debug::GetFeatureMask()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Debug.SetPresentPerRenderOpDelay(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="milliseconds">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Debug::SetPresentPerRenderOpDelay([None] int Milliseconds)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Debug.GetPresentPerRenderOpDelay">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>int ID3D10Debug::GetPresentPerRenderOpDelay()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Debug.SetSwapChain(SharpDX.DXGI.SwapChain)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="swapChainRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Debug::SetSwapChain([In, Optional] IDXGISwapChain* pSwapChain)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Debug.GetSwapChain(SharpDX.DXGI.SwapChain@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="swapChainRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Debug::GetSwapChain([Out] IDXGISwapChain** ppSwapChain)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Debug.Validate">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Debug::Validate()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Debug.FeatureFlags">
            <summary>
            Gets or sets the feature flags that indicates which debug features are on or off.	
            </summary>
            <value>The feature flags.</value>
        </member>
        <member name="P:SharpDX.Direct3D10.Debug.PresentPerRenderOpDelay">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ID3D10Debug::GetPresentPerRenderOpDelay()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Debug.SwapChain">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3D10Debug::GetSwapChain([Out] IDXGISwapChain** ppSwapChain)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Texture3D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10Texture3D</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture3D.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Texture3DDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Texture3D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture3D.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Texture3DDescription,SharpDX.DataBox)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Texture3D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">The initial texture data.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture3D.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Texture3DDescription,SharpDX.DataBox[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Texture3D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">An array of initial texture data for each subresource.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture3D.Map(System.Int32,SharpDX.Direct3D10.MapMode,SharpDX.Direct3D10.MapFlags)">
            <summary>
            Maps the texture, providing CPU access to its contents.
            </summary>
            <param name="mipSlice">The mip slice to map.</param>
            <param name="mode">The IO operations to enable on the CPU.</param>
            <param name="flags">Flags indicating how the CPU should respond when the GPU is busy.</param>
            <returns>A databox containing the mapped data. This data stream is invalidated when the buffer is unmapped.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture3D.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Texture3D"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Texture3D.Map(System.Int32,SharpDX.Direct3D10.MapMode,SharpDX.Direct3D10.MapFlags,SharpDX.Direct3D10.MappedTexture3D@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="subresource">No documentation.</param>
            <param name="mapType">No documentation.</param>
            <param name="mapFlags">No documentation.</param>
            <param name="mappedTex3DRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Texture3D::Map([In] int Subresource,[In] D3D10_MAP MapType,[In] D3D10_MAP_FLAG MapFlags,[Out] D3D10_MAPPED_TEXTURE3D* pMappedTex3D)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture3D.Unmap(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="subresource">No documentation.</param>
            <unmanaged>void ID3D10Texture3D::Unmap([In] int Subresource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Texture3D.GetDescription(SharpDX.Direct3D10.Texture3DDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10Texture3D::GetDesc([Out] D3D10_TEXTURE3D_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Texture3D.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10Texture3D::GetDesc([Out] D3D10_TEXTURE3D_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectRasterizerVariable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectRasterizerVariable</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectRasterizerVariable.GetRasterizerState">
            <summary>	
            Get a pointer to a rasterizer interface.	
            </summary>	
            <returns>Returns a pointer to a rasterizer interface (see <see cref="T:SharpDX.Direct3D10.RasterizerState"/>). </returns>
            <unmanaged>HRESULT ID3D10EffectRasterizerVariable::GetRasterizerState([None] int Index,[Out] ID3D10RasterizerState** ppRasterizerState)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectRasterizerVariable.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectRasterizerVariable"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectRasterizerVariable.GetRasterizerState(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectRasterizerVariable::GetRasterizerState([None] int Index,[Out] ID3D10RasterizerState** ppRasterizerState)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectRasterizerVariable.GetBackingStore(System.Int32,SharpDX.Direct3D10.RasterizerStateDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <param name="rasterizerDescRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectRasterizerVariable::GetBackingStore([None] int Index,[Out] D3D10_RASTERIZER_DESC* pRasterizerDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Device1">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10Device1</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.#ctor(SharpDX.Direct3D10.DriverType)">
            <summary>
              Constructor for a D3D10.1 Device. See <see cref="M:SharpDX.Direct3D10.D3D10.CreateDevice1(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.Direct3D10.FeatureLevel,System.Int32,SharpDX.Direct3D10.Device1@)"/> for more information.
            </summary>
            <param name="driverType"></param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.#ctor(SharpDX.DXGI.Adapter)">
            <summary>
              Constructor for a D3D10.1 Device. See <see cref="M:SharpDX.Direct3D10.D3D10.CreateDevice1(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.Direct3D10.FeatureLevel,System.Int32,SharpDX.Direct3D10.Device1@)"/> for more information.
            </summary>
            <param name="adapter"></param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.#ctor(SharpDX.Direct3D10.DriverType,SharpDX.Direct3D10.DeviceCreationFlags)">
            <summary>
              Constructor for a D3D10.1 Device. See <see cref="M:SharpDX.Direct3D10.D3D10.CreateDevice1(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.Direct3D10.FeatureLevel,System.Int32,SharpDX.Direct3D10.Device1@)"/> for more information.
            </summary>
            <param name="driverType"></param>
            <param name="flags"></param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.#ctor(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DeviceCreationFlags)">
            <summary>
              Constructor for a D3D10.1 Device. See <see cref="M:SharpDX.Direct3D10.D3D10.CreateDevice1(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.Direct3D10.FeatureLevel,System.Int32,SharpDX.Direct3D10.Device1@)"/> for more information.
            </summary>
            <param name="adapter"></param>
            <param name="flags"></param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.#ctor(SharpDX.Direct3D10.DriverType,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.Direct3D10.FeatureLevel)">
            <summary>
              Constructor for a D3D10.1 Device. See <see cref="M:SharpDX.Direct3D10.D3D10.CreateDevice1(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.Direct3D10.FeatureLevel,System.Int32,SharpDX.Direct3D10.Device1@)"/> for more information.
            </summary>
            <param name="driverType"></param>
            <param name="flags"></param>
            <param name="featureLevel"></param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.#ctor(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.Direct3D10.FeatureLevel)">
            <summary>
              Constructor for a D3D10.1 Device. See <see cref="M:SharpDX.Direct3D10.D3D10.CreateDevice1(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.Direct3D10.FeatureLevel,System.Int32,SharpDX.Direct3D10.Device1@)"/> for more information.
            </summary>
            <param name="adapter"></param>
            <param name="flags"></param>
            <param name="featureLevel"></param>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.CreateWithSwapChain(SharpDX.Direct3D10.DriverType,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.DXGI.SwapChainDescription,SharpDX.Direct3D10.Device1@,SharpDX.DXGI.SwapChain@)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Device1" /> class along with a new <see cref = "T:SharpDX.DXGI.SwapChain" /> used for rendering.
            </summary>
            <param name = "driverType">The type of device to create.</param>
            <param name = "flags">A list of runtime layers to enable.</param>
            <param name = "swapChainDescription">Details used to create the swap chain.</param>
            <param name = "device">When the method completes, contains the created device instance.</param>
            <param name = "swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.CreateWithSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.DXGI.SwapChainDescription,SharpDX.Direct3D10.Device1@,SharpDX.DXGI.SwapChain@)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Device1" /> class along with a new <see cref = "T:SharpDX.DXGI.SwapChain" /> used for rendering.
            </summary>
            <param name = "adapter">The video adapter on which the device should be created.</param>
            <param name = "flags">A list of runtime layers to enable.</param>
            <param name = "swapChainDescription">Details used to create the swap chain.</param>
            <param name = "device">When the method completes, contains the created device instance.</param>
            <param name = "swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.CreateWithSwapChain(SharpDX.Direct3D10.DriverType,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.DXGI.SwapChainDescription,SharpDX.Direct3D10.FeatureLevel,SharpDX.Direct3D10.Device1@,SharpDX.DXGI.SwapChain@)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Device1" /> class along with a new <see cref = "T:SharpDX.DXGI.SwapChain" /> used for rendering.
            </summary>
            <param name = "driverType">The type of device to create.</param>
            <param name = "flags">A list of runtime layers to enable.</param>
            <param name = "swapChainDescription">Details used to create the swap chain.</param>
            <param name="featureLevel">Desired feature level</param>
            <param name = "device">When the method completes, contains the created device instance.</param>
            <param name = "swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.CreateWithSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.DXGI.SwapChainDescription,SharpDX.Direct3D10.FeatureLevel,SharpDX.Direct3D10.Device1@,SharpDX.DXGI.SwapChain@)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.Device1" /> class along with a new <see cref = "T:SharpDX.DXGI.SwapChain" /> used for rendering.
            </summary>
            <param name = "adapter">The video adapter on which the device should be created.</param>
            <param name = "flags">A list of runtime layers to enable.</param>
            <param name = "swapChainDescription">Details used to create the swap chain.</param>
            <param name="featureLevel">Desired feature level</param>
            <param name = "device">When the method completes, contains the created device instance.</param>
            <param name = "swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.CreateWithSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.DXGI.SwapChainDescription,SharpDX.Direct3D10.FeatureLevel,SharpDX.Direct3D10.Device1@,SharpDX.DXGI.SwapChain@)">
            <summary>
              This overload has been deprecated. Use one of the alternatives that does not take both an adapter and a driver type.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Device1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.CreateShaderResourceView1(SharpDX.Direct3D10.Resource,System.Nullable{SharpDX.Direct3D10.ShaderResourceViewDescription1},SharpDX.Direct3D10.ShaderResourceView1@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceRef">No documentation.</param>
            <param name="descRef">No documentation.</param>
            <param name="sRViewRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device1::CreateShaderResourceView1([In] ID3D10Resource* pResource,[In, Optional] const D3D10_SHADER_RESOURCE_VIEW_DESC1* pDesc,[Out, Optional] ID3D10ShaderResourceView1** ppSRView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.CreateBlendState1(SharpDX.Direct3D10.BlendStateDescription1@,SharpDX.Direct3D10.BlendState1@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="blendStateDescRef">No documentation.</param>
            <param name="blendStateRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Device1::CreateBlendState1([In] const D3D10_BLEND_DESC1* pBlendStateDesc,[Out, Optional] ID3D10BlendState1** ppBlendState)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Device1.GetFeatureLevel">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>D3D10_FEATURE_LEVEL1 ID3D10Device1::GetFeatureLevel()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Device1.FeatureLevel">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FEATURE_LEVEL1 ID3D10Device1::GetFeatureLevel()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Mesh">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3DX10Mesh</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.InputElement[],System.String,System.Int32,System.Int32,SharpDX.Direct3D10.MeshFlags)">
            <summary>	
            Creates a mesh object using a declarator.	
            </summary>	
            <param name="device">Pointer to an <see cref="T:SharpDX.Direct3D10.Device"/>, the device object to be associated with the mesh. </param>
            <param name="elements">Array of <see cref="T:SharpDX.Direct3D10.InputElement"/> elements, describing the vertex format for the returned mesh. This parameter must map directly to a flexible vertex format (FVF). </param>
            <param name="positionElement">Semantic that identifies which part of the vertex declaration contains position information. </param>
            <param name="vertexCount">Number of vertices for the mesh. This parameter must be greater than 0. </param>
            <param name="faceCount">Number of faces for the mesh. The valid range for this number is greater than 0, and one less than the maximum DWORD (typically 65534), because the last index is reserved. </param>
            <param name="flags">Combination of one or more flags from the <see cref="T:SharpDX.Direct3D10.MeshFlags"/>, specifying options for the mesh.  </param>
            <unmanaged>HRESULT D3DX10CreateMesh([None] ID3D10Device* pDevice,[In, Buffer] const D3D10_INPUT_ELEMENT_DESC* pDeclaration,[None] int DeclCount,[None] const char* pPositionSemantic,[None] int VertexCount,[None] int FaceCount,[None] int Options,[None] ID3DX10Mesh** ppMesh)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.Clone(SharpDX.Direct3D10.InputElement[],System.String,SharpDX.Direct3D10.MeshFlags)">
            <summary>	
            Creates a new mesh and fills it with the data of a previously loaded mesh.	
            </summary>	
            <param name="positionElement">The semantic name for the position data. </param>
            <param name="elements">Array of <see cref="T:SharpDX.Direct3D10.InputElement"/> structures, describing the vertex format for the returned mesh. See <see cref="T:SharpDX.Direct3D10.InputElement"/>. </param>
            <param name="flags">Creation flags to be applied to the new mesh. See <see cref="T:SharpDX.Direct3D10.MeshFlags"/>.</param>
            <returns>returns the Mesh cloned. </returns>
            <unmanaged>HRESULT ID3DX10Mesh::CloneMesh([None] int Flags,[None] const char* pPosSemantic,[In, Buffer] const D3D10_INPUT_ELEMENT_DESC* pDesc,[None] int DeclCount,[None] ID3DX10Mesh** ppCloneMesh)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetAttributeBuffer">
            <summary>	
            Access the mesh's attribute buffer.	
            </summary>	
            <returns>Returns the attribute buffer. See <see cref="T:SharpDX.Direct3D10.MeshBuffer"/>. </returns>
            <unmanaged>HRESULT ID3DX10Mesh::GetAttributeBuffer([None] ID3DX10MeshBuffer** ppAttribute)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetAttributeTable">
            <summary>	
            Retrieves either an attribute table for a mesh, or the number of entries stored in an attribute table for a mesh.	
            </summary>	
            <remarks>	
            An attribute table is used to identify areas of the mesh that need to be drawn with different textures, render states, materials, and so on. In addition, the application can use the attribute table to hide portions of a mesh by not drawing a given attribute identifier when drawing the frame. 	
            </remarks>	
            <returns>Returns an array of <see cref="T:SharpDX.Direct3D10.MeshAttributeRange"/> structures, representing the entries in the mesh's attribute table. </returns>
            <unmanaged>HRESULT ID3DX10Mesh::GetAttributeTable([Out, Buffer, Optional] D3DX10_ATTRIBUTE_RANGE* pAttribTable,[None] int* pAttribTableSize)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetPointRepresentationBuffer">
            <summary>	
            Get the mesh's point rep buffer.	
            </summary>	
            <returns>Returns a mesh buffer containing the mesh's point rep data. See <see cref="T:SharpDX.Direct3D10.MeshBuffer"/>. </returns>
            <unmanaged>HRESULT ID3DX10Mesh::GetPointRepBuffer([None] ID3DX10MeshBuffer** ppPointReps)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.Optimize(SharpDX.Direct3D10.MeshOptimizeFlags)">
            <summary>
            Optimizes the mesh data.
            </summary>
            <param name="flags">Flags indicating which optimizations to perform.</param>
            <returns>A result code.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.Optimize(SharpDX.Direct3D10.MeshOptimizeFlags,System.Int32[]@,System.Int32[]@)">
            <summary>	
            Generates a new mesh with reordered faces and vertices to optimize drawing performance.	
            </summary>	
            <remarks>	
            This method generates a new mesh. Before running Optimize, an application must generate an adjacency buffer by calling <see cref="M:SharpDX.Direct3D10.Mesh.GenerateAdjacencyAndPointRepresentation(System.Single)"/>. The adjacency buffer contains adjacency data, such as a list of edges and the faces that are adjacent to each other. This method is very similar to the <see cref="M:SharpDX.Direct3D10.Mesh.CloneMesh(System.Int32,System.String,SharpDX.Direct3D10.InputElement[],System.Int32,SharpDX.Direct3D10.Mesh@)"/> method, except that it can perform optimization while generating the new clone of the mesh. The output mesh inherits all of the creation parameters of the input mesh. 	
            </remarks>	
            <param name="flags">Specifies the type of optimization to perform. This parameter can be set to a combination of one or more flags from D3DXMESHOPT and D3DXMESH (except D3DXMESH_32BIT, D3DXMESH_IB_WRITEONLY, and D3DXMESH_WRITEONLY). </param>
            <param name="faceRemap">An array of UINTs, one per face, that identifies the original mesh face that corresponds to each face in the optimized mesh.</param>
            <param name="vertexRemap">An array of index for each vertex that specifies how the new vertices map to the old vertices. This remap is useful if you need to alter external data based on the new vertex mapping. </param>
            <returns>The return value is one of the values listed in {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3DX10Mesh::Optimize([None] int Flags,[Out, Buffer, Optional] int* pFaceRemap,[In] LPD3D10BLOB* ppVertexRemap)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.SetAdjacencyData(SharpDX.DataStream)">
            <summary>	
            Set the mesh's adjacency data.	
            </summary>	
            <param name="data">The adjacency data to set </param>
            <returns>The return value is one of the values listed in {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3DX10Mesh::SetAdjacencyData([In] const int* pAdjacency)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.SetAttributeData(SharpDX.DataStream)">
            <summary>	
            Set the mesh's attribute data.	
            </summary>	
            <param name="data">The attribute data to set. </param>
            <returns>The return value is one of the values listed in {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3DX10Mesh::SetAttributeData([In] const int* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.SetAttributeTable(SharpDX.Direct3D10.MeshAttributeRange[])">
            <summary>
            Sets the attribute table for a mesh and the number of entries stored in the table.	
            </summary>	
            <remarks>	
            If an application keeps track of the information in an attribute table, and rearranges the table as a result of changes to attributes or faces, this method allows the application to update the attribute tables instead of calling ID3DX10Mesh::Optimize again. 	
            </remarks>	
            <param name="data">an array of <see cref="T:SharpDX.Direct3D10.MeshAttributeRange"/> structures, representing the entries in the mesh attribute table. </param>
            <returns>The return value is one of the values listed in {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3DX10Mesh::SetAttributeTable([In, Buffer] const D3DX10_ATTRIBUTE_RANGE* pAttribTable,[None] int cAttribTableSize)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.SetIndexData(SharpDX.DataStream,System.Int32)">
            <summary>	
            Set the mesh's index data.	
            </summary>	
            <param name="data">The index data. </param>
            <param name="count">The number of indices in pData. </param>
            <returns>The return value is one of the values listed in {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3DX10Mesh::SetIndexData([None] const void* pData,[None] int cIndices)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.SetPointRepresentationData(SharpDX.DataStream)">
            <summary>	
            Set the point rep data for the mesh.	
            </summary>	
            <param name="data">The point rep data to set. </param>
            <returns>The return value is one of the values listed in {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3DX10Mesh::SetPointRepData([None] const int* pPointReps)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.SetVertexData(System.Int32,SharpDX.DataStream)">
            <summary>	
            Set vertex data into one of the mesh's vertex buffers.	
            </summary>	
            <param name="index">The vertex buffer to be filled with pData. </param>
            <param name="data">The vertex data to set. </param>
            <returns>The return value is one of the values listed in {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3DX10Mesh::SetVertexData([None] int iBuffer,[None] const void* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Mesh"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetFaceCount">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>int ID3DX10Mesh::GetFaceCount()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetVertexCount">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>int ID3DX10Mesh::GetVertexCount()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetVertexBufferCount">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>int ID3DX10Mesh::GetVertexBufferCount()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetFlags">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>int ID3DX10Mesh::GetFlags()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetVertexDescription(SharpDX.Direct3D10.InputElement[],System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <param name="declCountRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::GetVertexDescription([Out, Buffer] const D3D10_INPUT_ELEMENT_DESC** ppDesc,[None] int* pDeclCount)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.SetVertexData(System.Int32,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="iBuffer">No documentation.</param>
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::SetVertexData([None] int iBuffer,[None] const void* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetVertexBuffer(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="iBuffer">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::GetVertexBuffer([None] int iBuffer,[None] ID3DX10MeshBuffer** ppVertexBuffer)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.SetIndexData(System.IntPtr,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="cIndices">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::SetIndexData([None] const void* pData,[None] int cIndices)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetIndexBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::GetIndexBuffer([None] ID3DX10MeshBuffer** ppIndexBuffer)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.SetAttributeData(System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::SetAttributeData([In] const void* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetAttributeBuffer(SharpDX.Direct3D10.MeshBuffer@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="attributeBufferRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::GetAttributeBuffer([None] ID3DX10MeshBuffer** ppAttributeBuffer)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.SetAttributeTable(SharpDX.Direct3D10.MeshAttributeRange[],System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="attribTableRef">No documentation.</param>
            <param name="cAttribTableSize">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::SetAttributeTable([In, Buffer] const D3DX10_ATTRIBUTE_RANGE* pAttribTable,[None] int cAttribTableSize)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetAttributeTable(SharpDX.Direct3D10.MeshAttributeRange[],System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="attribTableRef">No documentation.</param>
            <param name="attribTableSizeRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::GetAttributeTable([Out, Buffer, Optional] D3DX10_ATTRIBUTE_RANGE* pAttribTable,[None] int* pAttribTableSize)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GenerateAdjacencyAndPointRepresentation(System.Single)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="epsilon">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::GenerateAdjacencyAndPointReps([None] float Epsilon)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GenerateGeometryShaderAdjacency">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::GenerateGSAdjacency()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.SetAdjacencyData(System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="adjacencyRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::SetAdjacencyData([In] const void* pAdjacency)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetAdjacencyBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::GetAdjacencyBuffer([None] ID3DX10MeshBuffer** ppAdjacency)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.SetPointRepData(System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="ointRepsRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::SetPointRepData([In] const void* pPointReps)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetPointRepBuffer(SharpDX.Direct3D10.MeshBuffer@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="pointRepsRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::GetPointRepBuffer([None] ID3DX10MeshBuffer** ppPointReps)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.Discard(SharpDX.Direct3D10.MeshDiscardFlags)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dwDiscard">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::Discard([None] D3DX10_MESH_DISCARD_FLAGS dwDiscard)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.CloneMesh(System.Int32,System.String,SharpDX.Direct3D10.InputElement[],System.Int32,SharpDX.Direct3D10.Mesh@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="flags">No documentation.</param>
            <param name="osSemanticRef">No documentation.</param>
            <param name="descRef">No documentation.</param>
            <param name="declCount">No documentation.</param>
            <param name="cloneMeshRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::CloneMesh([None] int Flags,[None] const char* pPosSemantic,[In, Buffer] const D3D10_INPUT_ELEMENT_DESC* pDesc,[None] int DeclCount,[None] ID3DX10Mesh** ppCloneMesh)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.Optimize(System.Int32,System.Int32[],System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="flags">No documentation.</param>
            <param name="faceRemapRef">No documentation.</param>
            <param name="vertexRemapRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::Optimize([None] int Flags,[Out, Buffer, Optional] int* pFaceRemap,[In] void* ppVertexRemap)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GenerateAttributeBufferFromTable">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::GenerateAttributeBufferFromTable()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.Intersect(SharpDX.Vector3@,SharpDX.Vector3@,System.Int32@,System.Int32@,System.Single@,System.Single@,System.Single@,SharpDX.Direct3D.Blob@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="rayPosRef">No documentation.</param>
            <param name="rayDirRef">No documentation.</param>
            <param name="hitCountRef">No documentation.</param>
            <param name="faceIndexRef">No documentation.</param>
            <param name="uRef">No documentation.</param>
            <param name="vRef">No documentation.</param>
            <param name="distRef">No documentation.</param>
            <param name="allHitsRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::Intersect([None] D3DXVECTOR3* pRayPos,[None] D3DXVECTOR3* pRayDir,[None] int* pHitCount,[None] int* pFaceIndex,[None] float* pU,[None] float* pV,[None] float* pDist,[None] ID3D10Blob** ppAllHits)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.IntersectSubset(System.Int32,SharpDX.Vector3@,SharpDX.Vector3@,System.Int32@,System.Int32@,System.Single@,System.Single@,System.Single@,SharpDX.Direct3D.Blob@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="attribId">No documentation.</param>
            <param name="rayPosRef">No documentation.</param>
            <param name="rayDirRef">No documentation.</param>
            <param name="hitCountRef">No documentation.</param>
            <param name="faceIndexRef">No documentation.</param>
            <param name="uRef">No documentation.</param>
            <param name="vRef">No documentation.</param>
            <param name="distRef">No documentation.</param>
            <param name="allHitsRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::IntersectSubset([None] int AttribId,[None] D3DXVECTOR3* pRayPos,[None] D3DXVECTOR3* pRayDir,[None] int* pHitCount,[None] int* pFaceIndex,[None] float* pU,[None] float* pV,[None] float* pDist,[None] ID3D10Blob** ppAllHits)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.Commit">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::CommitToDevice()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.DrawSubset(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="attribId">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::DrawSubset([None] int AttribId)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.DrawSubsetInstanced(System.Int32,System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="attribId">No documentation.</param>
            <param name="instanceCount">No documentation.</param>
            <param name="startInstanceLocation">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::DrawSubsetInstanced([None] int AttribId,[None] int InstanceCount,[None] int StartInstanceLocation)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetDeviceVertexBuffer(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="iBuffer">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::GetDeviceVertexBuffer([None] int iBuffer,[None] ID3D10Buffer** ppVertexBuffer)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Mesh.GetDeviceIndexBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Mesh::GetDeviceIndexBuffer([None] ID3D10Buffer** ppIndexBuffer)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Mesh.Flags">
            <summary>	
            Access the mesh's creation flags.	
            </summary>	
            <returns>The creation flags passed into the options parameter of <see cref="M:SharpDX.Direct3D10.D3DX10.CreateMesh(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.InputElement[],System.Int32,System.String,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D10.Mesh@)"/> when the mesh was created. See {{D3DX10_MESH}}. </returns>
            <unmanaged>int ID3DX10Mesh::GetFlags()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Mesh.FaceCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ID3DX10Mesh::GetFaceCount()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Mesh.VertexCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ID3DX10Mesh::GetVertexCount()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthStencilState">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10DepthStencilState</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.DepthStencilState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.DepthStencilState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.DepthStencilState.GetDescription(SharpDX.Direct3D10.DepthStencilStateDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10DepthStencilState::GetDesc([Out] D3D10_DEPTH_STENCIL_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.DepthStencilState.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.DepthStencilStateDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D10.DepthStencilState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.DepthStencilState.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.DepthStencilStateDescription@)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D10.DepthStencilState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="P:SharpDX.Direct3D10.DepthStencilState.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10DepthStencilState::GetDesc([Out] D3D10_DEPTH_STENCIL_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.BlendState">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10BlendState</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.BlendState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.BlendState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.BlendState.GetDescription(SharpDX.Direct3D10.BlendStateDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10BlendState::GetDesc([Out] D3D10_BLEND_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.BlendState.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.BlendStateDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D10.BlendState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.BlendState.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.BlendStateDescription@)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D10.BlendState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="P:SharpDX.Direct3D10.BlendState.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10BlendState::GetDesc([Out] D3D10_BLEND_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ResourceView">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10View</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ResourceView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.ResourceView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.ResourceView.GetResource(SharpDX.Direct3D10.Resource@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceRef">No documentation.</param>
            <unmanaged>void ID3D10View::GetResource([Out] ID3D10Resource** ppResource)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.ResourceView.Resource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10View::GetResource([Out] ID3D10Resource** ppResource)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceView">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10ShaderResourceView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.ShaderResourceView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView.GetDescription(SharpDX.Direct3D10.ShaderResourceViewDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10ShaderResourceView::GetDesc([Out] D3D10_SHADER_RESOURCE_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Resource)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D10.ShaderResourceView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D10.ShaderResourceView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D10.BindFlags">ShaderResource</see> flag.</param>
            <unmanaged>ID3D10Device::CreateShaderResourceView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Resource,SharpDX.Direct3D10.ShaderResourceViewDescription)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D10.ShaderResourceView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D10.ShaderResourceView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D10.BindFlags">ShaderResource</see> flag.</param>
            <param name = "description">A structure describing the <see cref = "T:SharpDX.Direct3D10.ShaderResourceView" /> to be created.</param>
            <unmanaged>ID3D10Device::CreateShaderResourceView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView.FromFile(SharpDX.Direct3D10.Device,System.String)">
            <summary>	
            Create a shader-resource view from a file. Read the characteristics of a texture when the texture is loaded.
            </summary>	
            <param name="device">A reference to the device (see <see cref="T:SharpDX.Direct3D10.Device"/>) that will use the resource. </param>
            <param name="fileName">Name of the file that contains the shader-resource view.</param>
            <returns>Returns a reference to the shader-resource view (see <see cref="T:SharpDX.Direct3D10.ShaderResourceView"/>). </returns>
            <unmanaged>HRESULT D3DX10CreateShaderResourceViewFromFileW([None] ID3D10Device* pDevice,[None] const wchar_t* pSrcFile,[In, Optional] D3DX10_IMAGE_LOAD_INFO* pLoadInfo,[None] ID3DX10ThreadPump* pPump,[None] ID3D10ShaderResourceView** ppShaderResourceView,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView.FromFile(SharpDX.Direct3D10.Device,System.String,SharpDX.Direct3D10.ImageLoadInformation)">
            <summary>	
            Create a shader-resource view from a file.	
            </summary>	
            <param name="device">A reference to the device (see <see cref="T:SharpDX.Direct3D10.Device"/>) that will use the resource. </param>
            <param name="fileName">Name of the file that contains the shader-resource view.</param>
            <param name="loadInformation">Identifies the characteristics of a texture (see <see cref="T:SharpDX.Direct3D10.ImageLoadInformation"/>) when the data processor is created. </param>
            <returns>Returns a reference to the shader-resource view (see <see cref="T:SharpDX.Direct3D10.ShaderResourceView"/>). </returns>
            <unmanaged>HRESULT D3DX10CreateShaderResourceViewFromFileW([None] ID3D10Device* pDevice,[None] const wchar_t* pSrcFile,[In, Optional] D3DX10_IMAGE_LOAD_INFO* pLoadInfo,[None] ID3DX10ThreadPump* pPump,[None] ID3D10ShaderResourceView** ppShaderResourceView,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView.FromMemory(SharpDX.Direct3D10.Device,System.Byte[])">
            <summary>	
            Create a shader-resource view from a file in memory.	
            </summary>	
            <param name="device">A reference to the device (see <see cref="T:SharpDX.Direct3D10.Device"/>) that will use the resource. </param>
            <param name="memory">Pointer to a memory location that contains the shader-resource view. </param>
            <returns>Returns a reference to the shader-resource view (see <see cref="T:SharpDX.Direct3D10.ShaderResourceView"/>). </returns>
            <unmanaged>HRESULT D3DX10CreateShaderResourceViewFromMemory([None] ID3D10Device* pDevice,[None] const void* pSrcData,[None] SIZE_T SrcDataSize,[In, Optional] D3DX10_IMAGE_LOAD_INFO* pLoadInfo,[None] ID3DX10ThreadPump* pPump,[None] ID3D10ShaderResourceView** ppShaderResourceView,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView.FromMemory(SharpDX.Direct3D10.Device,System.Byte[],SharpDX.Direct3D10.ImageLoadInformation)">
            <summary>	
            Create a shader-resource view from a file in memory.	
            </summary>	
            <param name="device">A reference to the device (see <see cref="T:SharpDX.Direct3D10.Device"/>) that will use the resource. </param>
            <param name="memory">Pointer to a memory location that contains the shader-resource view. </param>
            <param name="loadInformation">Identifies the characteristics of a texture (see <see cref="T:SharpDX.Direct3D10.ImageLoadInformation"/>) when the data processor is created. </param>
            <returns>Returns a reference to the shader-resource view (see <see cref="T:SharpDX.Direct3D10.ShaderResourceView"/>). </returns>
            <unmanaged>HRESULT D3DX10CreateShaderResourceViewFromMemory([None] ID3D10Device* pDevice,[None] const void* pSrcData,[None] SIZE_T SrcDataSize,[In, Optional] D3DX10_IMAGE_LOAD_INFO* pLoadInfo,[None] ID3DX10ThreadPump* pPump,[None] ID3D10ShaderResourceView** ppShaderResourceView,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView.FromStream(SharpDX.Direct3D10.Device,System.IO.Stream,System.Int32)">
            <summary>	
            Create a shader-resource view from a file in a stream..	
            </summary>	
            <param name="device">A reference to the device (see <see cref="T:SharpDX.Direct3D10.Device"/>) that will use the resource. </param>
            <param name="stream">Pointer to the file in memory that contains the shader-resource view. </param>
            <param name="sizeInBytes">Size of the file to read from the stream</param>
            <returns>Returns a reference to the shader-resource view (see <see cref="T:SharpDX.Direct3D10.ShaderResourceView"/>). </returns>
            <unmanaged>HRESULT D3DX10CreateShaderResourceViewFromMemory([None] ID3D10Device* pDevice,[None] const void* pSrcData,[None] SIZE_T SrcDataSize,[In, Optional] D3DX10_IMAGE_LOAD_INFO* pLoadInfo,[None] ID3DX10ThreadPump* pPump,[None] ID3D10ShaderResourceView** ppShaderResourceView,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView.FromStream(SharpDX.Direct3D10.Device,System.IO.Stream,System.Int32,SharpDX.Direct3D10.ImageLoadInformation)">
            <summary>	
            Create a shader-resource view from a file in a stream..	
            </summary>	
            <param name="device">A reference to the device (see <see cref="T:SharpDX.Direct3D10.Device"/>) that will use the resource. </param>
            <param name="stream">Pointer to the file in memory that contains the shader-resource view. </param>
            <param name="sizeInBytes">Size of the file to read from the stream</param>
            <param name="loadInformation">Identifies the characteristics of a texture (see <see cref="T:SharpDX.Direct3D10.ImageLoadInformation"/>) when the data processor is created. </param>
            <returns>Returns a reference to the shader-resource view (see <see cref="T:SharpDX.Direct3D10.ShaderResourceView"/>). </returns>
            <unmanaged>HRESULT D3DX10CreateShaderResourceViewFromMemory([None] ID3D10Device* pDevice,[None] const void* pSrcData,[None] SIZE_T SrcDataSize,[In, Optional] D3DX10_IMAGE_LOAD_INFO* pLoadInfo,[None] ID3DX10ThreadPump* pPump,[None] ID3D10ShaderResourceView** ppShaderResourceView,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.ShaderResourceView.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10ShaderResourceView::GetDesc([Out] D3D10_SHADER_RESOURCE_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RenderTargetView">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10RenderTargetView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.RenderTargetView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.RenderTargetView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.RenderTargetView.GetDescription(SharpDX.Direct3D10.RenderTargetViewDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10RenderTargetView::GetDesc([Out] D3D10_RENDER_TARGET_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.RenderTargetView.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Resource)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D10.RenderTargetView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D10.RenderTargetView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D10.BindFlags">RenderTarget</see> flag.</param>
            <unmanaged>ID3D10Device::CreateRenderTargetView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.RenderTargetView.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Resource,SharpDX.Direct3D10.RenderTargetViewDescription)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D10.RenderTargetView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D10.RenderTargetView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D10.BindFlags">RenderTarget</see> flag.</param>
            <param name = "description">A structure describing the <see cref = "T:SharpDX.Direct3D10.RenderTargetView" /> to be created.</param>
            <unmanaged>ID3D10Device::CreateRenderTargetView</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.RenderTargetView.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10RenderTargetView::GetDesc([Out] D3D10_RENDER_TARGET_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthStencilView">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10DepthStencilView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.DepthStencilView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.DepthStencilView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.DepthStencilView.GetDescription(SharpDX.Direct3D10.DepthStencilViewDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10DepthStencilView::GetDesc([Out] D3D10_DEPTH_STENCIL_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.DepthStencilView.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Resource)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D10.DepthStencilView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D10.DepthStencilView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D10.BindFlags">DepthStencil</see> flag.</param>
            <unmanaged>ID3D10Device::CreateDepthStencilView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.DepthStencilView.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Resource,SharpDX.Direct3D10.DepthStencilViewDescription)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D10.DepthStencilView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D10.DepthStencilView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D10.BindFlags">DepthStencil</see> flag.</param>
            <param name = "description">A structure describing the <see cref = "T:SharpDX.Direct3D10.DepthStencilView" /> to be created.</param>
            <unmanaged>ID3D10Device::CreateDepthStencilView</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.DepthStencilView.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10DepthStencilView::GetDesc([Out] D3D10_DEPTH_STENCIL_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.VertexShader">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10VertexShader</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.VertexShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.VertexShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.VertexShader.#ctor(SharpDX.Direct3D10.Device,SharpDX.D3DCompiler.ShaderBytecode)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.VertexShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="T:SharpDX.Direct3D10.GeometryShader">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10GeometryShader</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.GeometryShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.GeometryShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.GeometryShader.#ctor(SharpDX.Direct3D10.Device,SharpDX.D3DCompiler.ShaderBytecode)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.GeometryShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.GeometryShader.#ctor(SharpDX.Direct3D10.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.Direct3D10.StreamOutputElement[],System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.GeometryShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "elements">An array of <see cref = "T:SharpDX.Direct3D10.StreamOutputElement" /> instances describing the layout of the output buffers.</param>
            <param name = "outputStreamStride">The size, in bytes, of each element in the array pointed to by pSODeclaration. This parameter is only used when the output slot is 0 for all entries in pSODeclaration.</param>
        </member>
        <member name="T:SharpDX.Direct3D10.PixelShader">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10PixelShader</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.PixelShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.PixelShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.PixelShader.#ctor(SharpDX.Direct3D10.Device,SharpDX.D3DCompiler.ShaderBytecode)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.PixelShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="T:SharpDX.Direct3D10.SamplerState">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10SamplerState</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SamplerState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.SamplerState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.SamplerState.GetDescription(SharpDX.Direct3D10.SamplerStateDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10SamplerState::GetDesc([Out] D3D10_SAMPLER_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SamplerState.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.SamplerStateDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D10.SamplerState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.SamplerState.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.SamplerStateDescription@)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D10.SamplerState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="P:SharpDX.Direct3D10.SamplerState.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10SamplerState::GetDesc([Out] D3D10_SAMPLER_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Predicate">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10Predicate</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Predicate.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Predicate"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Predicate.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.QueryDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D10.Predicate" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The query description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="T:SharpDX.Direct3D10.SwitchToRef">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10SwitchToRef</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SwitchToRef.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.SwitchToRef"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.SwitchToRef.SetUseRef(System.Boolean)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="useRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>BOOL ID3D10SwitchToRef::SetUseRef([None] BOOL UseRef)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SwitchToRef.GetUseRef">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>BOOL ID3D10SwitchToRef::GetUseRef()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.SwitchToRef.UseRef">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL ID3D10SwitchToRef::GetUseRef()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectType">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectType</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectType.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectType"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectType.IsValid_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>BOOL ID3D10EffectType::IsValid()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectType.GetDescription(SharpDX.Direct3D10.EffectTypeDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectType::GetDesc([Out] D3D10_EFFECT_TYPE_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectType.GetMemberTypeByIndex(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectType* ID3D10EffectType::GetMemberTypeByIndex([None] int Index)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectType.GetMemberTypeByName(System.String)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="name">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectType* ID3D10EffectType::GetMemberTypeByName([None] const char* Name)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectType.GetMemberTypeBySemantic(System.String)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="semantic">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectType* ID3D10EffectType::GetMemberTypeBySemantic([None] const char* Semantic)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectType.GetMemberName(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>const char* ID3D10EffectType::GetMemberName([None] int Index)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectType.GetMemberSemantic(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>const char* ID3D10EffectType::GetMemberSemantic([None] int Index)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectType.IsValid">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL ID3D10EffectType::IsValid()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectType.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3D10EffectType::GetDesc([Out] D3D10_EFFECT_TYPE_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectVectorVariable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectVectorVariable</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectVectorVariable"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.Set(System.Int32[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::SetBoolVector([In, Buffer] BOOL* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.Set(SharpDX.Int4)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::SetIntVector([In] SHARPDX_INT4* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.Set(SharpDX.Vector4)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::SetFloatVector([In] SHARPDX_VECTOR4* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.GetBoolVector(System.Int32[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::GetBoolVector([Out, Buffer] BOOL* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.GetIntVector(SharpDX.Int4@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::GetIntVector([Out] SHARPDX_INT4* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.GetFloatVector(SharpDX.Vector4@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::GetFloatVector([Out] SHARPDX_VECTOR4* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.Set(System.Int32[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::SetBoolVectorArray([In, Buffer] BOOL* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.Set(SharpDX.Int4[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::SetIntVectorArray([In, Buffer] SHARPDX_INT4* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.Set(SharpDX.Vector4[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::SetFloatVectorArray([In, Buffer] SHARPDX_VECTOR4* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.GetBoolVectorArray(System.Int32[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::GetBoolVectorArray([Out, Buffer] BOOL* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.GetIntVectorArray(SharpDX.Int4[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::GetIntVectorArray([Out, Buffer] SHARPDX_INT4* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.GetFloatVectorArray(SharpDX.Vector4[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::GetFloatVectorArray([Out, Buffer] SHARPDX_VECTOR4* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.GetIntVector">
            <summary>	
            Get a four-component vector that contains integer data.	
            </summary>	
            <returns>Returns a four-component vector that contains integer data </returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::GetIntVector([Out] int* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.GetFloatVector">
            <summary>	
            Get a four-component vector that contains floating-point data.	
            </summary>	
            <returns>Returns a four-component vector that contains floating-point data.</returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::GetFloatVector([Out] float* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.GetBoolVector">
            <summary>	
            Get a four-component vector that contains boolean data.	
            </summary>	
            <returns>a four-component vector that contains boolean data. </returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::GetBoolVector([Out, Buffer] BOOL* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.Set(SharpDX.Int4[])">
            <summary>	
            Set an array of four-component vectors that contain integer data.	
            </summary>	
            <param name="array">A reference to the start of the data to set. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::SetIntVectorArray([In, Buffer] int* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.Set(SharpDX.Vector4[])">
            <summary>	
            Set an array of four-component vectors that contain floating-point data.	
            </summary>	
            <param name="array">A reference to the start of the data to set. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::SetFloatVectorArray([In, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.Set(SharpDX.Vector2)">
            <summary>	
            Set a two-component vector that contains floating-point data.	
            </summary>	
            <param name="value">A reference to the first component. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::SetFloatVector([In] float* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.Set(SharpDX.Vector3)">
            <summary>	
            Set a three-component vector that contains floating-point data.	
            </summary>	
            <param name="value">A reference to the first component. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::SetFloatVector([In] float* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.Set(SharpDX.Color4)">
            <summary>	
            Set a four-component color that contains floating-point data.	
            </summary>	
            <param name="value">A reference to the first component. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::SetFloatVector([In] float* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.Set(SharpDX.Color4[])">
            <summary>	
            Set an array of four-component color that contain floating-point data.	
            </summary>	
            <param name="array">A reference to the start of the data to set. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::SetFloatVectorArray([In, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.Set(System.Boolean[])">
            <summary>	
            Set an array of four-component vectors that contain boolean data.	
            </summary>	
            <param name="array">A reference to the start of the data to set. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::SetBoolVectorArray([In, Buffer] BOOL* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.GetIntVectorArray(System.Int32)">
            <summary>	
            Get an array of four-component vectors that contain integer data.	
            </summary>	
            <param name="count">The number of array elements to set. </param>
            <returns>Returns an array of four-component vectors that contain integer data. </returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::GetIntVectorArray([Out, Buffer] int* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.GetFloatVectorArray(System.Int32)">
            <summary>	
            Get an array of four-component vectors that contain floating-point data.	
            </summary>	
            <param name="count">The number of array elements to set. </param>
            <returns>Returns an array of four-component vectors that contain floating-point data. </returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::GetFloatVectorArray([None] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectVectorVariable.GetBoolVectorArray(System.Int32)">
            <summary>	
            Get an array of four-component vectors that contain boolean data.	
            </summary>	
            <param name="count">The number of array elements to set. </param>
            <returns>an array of four-component vectors that contain boolean data.	 </returns>
            <unmanaged>HRESULT ID3D10EffectVectorVariable::GetBoolVectorArray([Out, Buffer] BOOL* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectMatrixVariable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectMatrixVariable</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectMatrixVariable"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.SetMatrix(SharpDX.Matrix@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::SetMatrix([In] SHARPDX_MATRIX* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.GetMatrix">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::GetMatrix([Out] SHARPDX_MATRIX* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.SetMatrixArray(SharpDX.Matrix[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::SetMatrixArray([In, Buffer] SHARPDX_MATRIX* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.GetMatrixArray(SharpDX.Matrix[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::GetMatrixArray([Out, Buffer] SHARPDX_MATRIX* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.SetMatrixTranspose(SharpDX.Matrix@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::SetMatrixTranspose([In] SHARPDX_MATRIX* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.GetMatrixTranspose">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::GetMatrixTranspose([Out] SHARPDX_MATRIX* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.SetMatrixTransposeArray(SharpDX.Matrix[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::SetMatrixTransposeArray([In, Buffer] SHARPDX_MATRIX* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.GetMatrixTransposeArray(SharpDX.Matrix[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::GetMatrixTransposeArray([Out, Buffer] SHARPDX_MATRIX* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.SetMatrix(SharpDX.Matrix)">
            <summary>	
            Set a floating-point matrix.	
            </summary>	
            <param name="dataRef"> A pointer to the first element in the matrix. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::SetMatrix([In] float* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.SetMatrix(SharpDX.Matrix[])">
            <summary>	
            Set an array of floating-point matrices.	
            </summary>	
            <param name="matrixArray"> A pointer to the first matrix. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::SetMatrixArray([In, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.SetMatrix(SharpDX.Matrix[],System.Int32)">
            <summary>	
            Set an array of floating-point matrices.	
            </summary>	
            <param name="matrixArray"> A pointer to the first matrix. </param>
            <param name="offset"> The number of matrix elements to skip from the start of the array. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::SetMatrixArray([In, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.GetMatrixArray(System.Int32)">
            <summary>	
            Get an array of matrices.	
            </summary>	
            <param name="count"> The number of matrices in the returned array. </param>
            <returns>Returns an array of matrix. </returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::GetMatrixArray([Out, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.GetMatrixArray(System.Int32,System.Int32)">
            <summary>	
            Get an array of matrices.	
            </summary>	
            <param name="offset"> The offset (in number of matrices) between the start of the array and the first matrix returned. </param>
            <param name="count"> The number of matrices in the returned array. </param>
            <returns>Returns an array of matrix. </returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::GetMatrixArray([Out, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.SetMatrixTranspose(SharpDX.Matrix)">
            <summary>	
            Transpose and set a floating-point matrix.	
            </summary>	
            <remarks>	
             Transposing a matrix will rearrange the data order from row-column order to column-row order (or vice versa). 	
            </remarks>	
            <param name="matrix"> A pointer to the first element of a matrix. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::SetMatrixTranspose([In] float* pData)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.SetMatrixTranspose(SharpDX.Matrix[])">
            <summary>	
            Transpose and set an array of floating-point matrices.	
            </summary>	
            <remarks>	
             Transposing a matrix will rearrange the data order from row-column order to column-row order (or vice versa). 	
            </remarks>	
            <param name="matrixArray"> A pointer to an array of matrices. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::SetMatrixTransposeArray([In] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.SetMatrixTranspose(SharpDX.Matrix[],System.Int32)">
            <summary>	
            Transpose and set an array of floating-point matrices.	
            </summary>	
            <remarks>	
             Transposing a matrix will rearrange the data order from row-column order to column-row order (or vice versa). 	
            </remarks>	
            <param name="matrixArray"> A pointer to an array of matrices. </param>
            <param name="offset"> The offset (in number of matrices) between the start of the array and the first matrix to set. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::SetMatrixTransposeArray([In] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.GetMatrixTransposeArray(System.Int32)">
            <summary>	
            Transpose and get an array of floating-point matrices.	
            </summary>	
            <remarks>	
             Transposing a matrix will rearrange the data order from row-column order to column-row order (or vice versa). 	
            </remarks>	
            <param name="count"> The number of matrices in the array to get. </param>
            <returns>Returns an array of transposed <see cref="T:SharpDX.Matrix"/>. </returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::GetMatrixTransposeArray([Out, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectMatrixVariable.GetMatrixTransposeArray(System.Int32,System.Int32)">
            <summary>	
            Transpose and get an array of floating-point matrices.	
            </summary>	
            <remarks>	
             Transposing a matrix will rearrange the data order from row-column order to column-row order (or vice versa). 	
            </remarks>	
            <param name="offset"> The offset (in number of matrices) between the start of the array and the first matrix to get. </param>
            <param name="count"> The number of matrices in the array to get. </param>
            <returns>Returns an array of transposed <see cref="T:SharpDX.Matrix"/>. </returns>
            <unmanaged>HRESULT ID3D10EffectMatrixVariable::GetMatrixTransposeArray([Out, Buffer] float* pData,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectStringVariable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectStringVariable</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectStringVariable.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectStringVariable"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectStringVariable.GetString(System.IntPtr@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="stringRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectStringVariable::GetString([Out] const void** ppString)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectStringVariable.GetStringArray(System.IntPtr,System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="stringsRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectStringVariable::GetStringArray([Out, Buffer] const void** ppStrings,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectStringVariable.GetString">
            <summary>	
            Get the string.	
            </summary>	
            <returns>Returns a reference to the string.</returns>
            <unmanaged>HRESULT ID3D10EffectStringVariable::GetString([Out] const char** ppString)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectStringVariable.GetStringArray(System.Int32)">
            <summary>	
            Get an array of strings.	
            </summary>	
            <param name="count">The number of strings in the returned array. </param>
            <returns>Returns a reference to the first string in the array.</returns>
            <unmanaged>HRESULT ID3D10EffectStringVariable::GetStringArray([Out, Buffer] const char** ppStrings,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectStringVariable.GetStringArray(System.Int32,System.Int32)">
            <summary>	
            Get an array of strings.	
            </summary>	
            <param name="offset">The offset (in number of strings) between the start of the array and the first string to get. </param>
            <param name="count">The number of strings in the returned array. </param>
            <returns>Returns a reference to the first string in the array.</returns>
            <unmanaged>HRESULT ID3D10EffectStringVariable::GetStringArray([Out, Buffer] const char** ppStrings,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectDepthStencilViewVariable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectDepthStencilViewVariable</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectDepthStencilViewVariable.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectDepthStencilViewVariable"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectDepthStencilViewVariable.SetDepthStencil(SharpDX.Direct3D10.DepthStencilView)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectDepthStencilViewVariable::SetDepthStencil([None] ID3D10DepthStencilView* pResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectDepthStencilViewVariable.GetDepthStencil">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectDepthStencilViewVariable::GetDepthStencil([None] ID3D10DepthStencilView** ppResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectDepthStencilViewVariable.SetDepthStencilArray(SharpDX.Direct3D10.DepthStencilView[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourcesRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectDepthStencilViewVariable::SetDepthStencilArray([In, Buffer] ID3D10DepthStencilView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectDepthStencilViewVariable.GetDepthStencilArray(SharpDX.Direct3D10.DepthStencilView[],System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourcesRef">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectDepthStencilViewVariable::GetDepthStencilArray([Out, Buffer] ID3D10DepthStencilView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectDepthStencilViewVariable.SetDepthStencilArray(SharpDX.Direct3D10.DepthStencilView[])">
            <summary>	
            Set an array of depth-stencil-view resources.	
            </summary>	
            <param name="resourcesRef"> A pointer to an array of depth-stencil-view interfaces. See <see cref="T:SharpDX.Direct3D10.DepthStencilView"/>. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectDepthStencilViewVariable::SetDepthStencilArray([In, Buffer] ID3D10DepthStencilView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectDepthStencilViewVariable.SetDepthStencilArray(SharpDX.Direct3D10.DepthStencilView[],System.Int32)">
            <summary>	
            Set an array of depth-stencil-view resources.	
            </summary>	
            <param name="resourcesRef"> A pointer to an array of depth-stencil-view interfaces. See <see cref="T:SharpDX.Direct3D10.DepthStencilView"/>. </param>
            <param name="offset"> The zero-based array index to set the first interface. </param>
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D10EffectDepthStencilViewVariable::SetDepthStencilArray([In, Buffer] ID3D10DepthStencilView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectDepthStencilViewVariable.GetDepthStencilArray(System.Int32)">
            <summary>	
            Get an array of depth-stencil-view resources.	
            </summary>	
            <param name="count"> The number of elements in the array. </param>
            <returns>Returns an array of depth-stencil-view interfaces. See <see cref="T:SharpDX.Direct3D10.DepthStencilView"/>. </returns>
            <unmanaged>HRESULT ID3D10EffectDepthStencilViewVariable::GetDepthStencilArray([Out, Buffer] ID3D10DepthStencilView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectDepthStencilViewVariable.GetDepthStencilArray(System.Int32,System.Int32)">
            <summary>	
            Get an array of depth-stencil-view resources.	
            </summary>	
            <param name="offset"> The zero-based array index to get the first interface. </param>
            <param name="count"> The number of elements in the array. </param>
            <returns>Returns an array of depth-stencil-view interfaces. See <see cref="T:SharpDX.Direct3D10.DepthStencilView"/>. </returns>
            <unmanaged>HRESULT ID3D10EffectDepthStencilViewVariable::GetDepthStencilArray([Out, Buffer] ID3D10DepthStencilView** ppResources,[None] int Offset,[None] int Count)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectConstantBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectConstantBuffer</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectConstantBuffer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectConstantBuffer"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectConstantBuffer.SetConstantBuffer(SharpDX.Direct3D10.Buffer)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="constantBufferRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectConstantBuffer::SetConstantBuffer([None] ID3D10Buffer* pConstantBuffer)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectConstantBuffer.GetConstantBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectConstantBuffer::GetConstantBuffer([Out] ID3D10Buffer** ppConstantBuffer)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectConstantBuffer.SetTextureBuffer(SharpDX.Direct3D10.ShaderResourceView)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="textureBufferRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectConstantBuffer::SetTextureBuffer([None] ID3D10ShaderResourceView* pTextureBuffer)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectConstantBuffer.GetTextureBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectConstantBuffer::GetTextureBuffer([Out] ID3D10ShaderResourceView** ppTextureBuffer)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectShaderVariable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectShaderVariable</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderVariable.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectShaderVariable"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderVariable.GetShaderDescription(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderIndex">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectShaderVariable::GetShaderDesc([None] int ShaderIndex,[Out] D3D10_EFFECT_SHADER_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderVariable.GetVertexShader(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderIndex">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectShaderVariable::GetVertexShader([None] int ShaderIndex,[Out] ID3D10VertexShader** ppVS)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderVariable.GetGeometryShader(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderIndex">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectShaderVariable::GetGeometryShader([None] int ShaderIndex,[Out] ID3D10GeometryShader** ppGS)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderVariable.GetPixelShader(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderIndex">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectShaderVariable::GetPixelShader([None] int ShaderIndex,[Out] ID3D10PixelShader** ppPS)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderVariable.GetInputSignatureElementDescription(System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderIndex">No documentation.</param>
            <param name="element">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectShaderVariable::GetInputSignatureElementDesc([None] int ShaderIndex,[None] int Element,[Out] D3D10_SIGNATURE_PARAMETER_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectShaderVariable.GetOutputSignatureElementDescription(System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderIndex">No documentation.</param>
            <param name="element">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectShaderVariable::GetOutputSignatureElementDesc([None] int ShaderIndex,[None] int Element,[Out] D3D10_SIGNATURE_PARAMETER_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectBlendVariable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectBlendVariable</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectBlendVariable.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectBlendVariable"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectBlendVariable.GetBlendState(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectBlendVariable::GetBlendState([None] int Index,[Out] ID3D10BlendState** ppBlendState)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectBlendVariable.GetBackingStore(System.Int32,SharpDX.Direct3D10.BlendStateDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <param name="blendDescRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectBlendVariable::GetBackingStore([None] int Index,[Out] D3D10_BLEND_DESC* pBlendDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectBlendVariable.GetBlendState">
            <summary>	
            Get a pointer to a blend-state interface.
            </summary>	
            <returns>Returns <see cref="T:SharpDX.Direct3D10.BlendState"/>.</returns>
            <unmanaged>HRESULT ID3D10EffectBlendVariable::GetBlendState([None] int Index,[Out] ID3D10BlendState** ppBlendState)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectDepthStencilVariable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectDepthStencilVariable</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectDepthStencilVariable.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectDepthStencilVariable"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectDepthStencilVariable.GetDepthStencilState(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectDepthStencilVariable::GetDepthStencilState([None] int Index,[Out] ID3D10DepthStencilState** ppDepthStencilState)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectDepthStencilVariable.GetBackingStore(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectDepthStencilVariable::GetBackingStore([None] int Index,[Out] D3D10_DEPTH_STENCIL_DESC* pDepthStencilDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectDepthStencilVariable.GetDepthStencilState">
            <summary>	
            Get a pointer to a depth-stencil interface.	
            </summary>	
            <returns>Returns a pointer to a blend-state interface (see <see cref="T:SharpDX.Direct3D10.DepthStencilState"/>). </returns>
            <unmanaged>HRESULT ID3D10EffectDepthStencilVariable::GetDepthStencilState([None] int Index,[Out] ID3D10DepthStencilState** ppDepthStencilState)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectPass">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectPass</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPass.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectPass"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPass.IsValid_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>BOOL ID3D10EffectPass::IsValid()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPass.GetDescription(SharpDX.Direct3D10.EffectPassDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectPass::GetDesc([Out] D3D10_PASS_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPass.GetVertexShaderDescription(SharpDX.Direct3D10.EffectPassShaderDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectPass::GetVertexShaderDesc([Out] D3D10_PASS_SHADER_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPass.GetGeometryShaderDescription(SharpDX.Direct3D10.EffectPassShaderDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectPass::GetGeometryShaderDesc([Out] D3D10_PASS_SHADER_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPass.GetPixelShaderDescription(SharpDX.Direct3D10.EffectPassShaderDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectPass::GetPixelShaderDesc([Out] D3D10_PASS_SHADER_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPass.GetAnnotationByIndex(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVariable* ID3D10EffectPass::GetAnnotationByIndex([None] int Index)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPass.GetAnnotationByName(System.String)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="name">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVariable* ID3D10EffectPass::GetAnnotationByName([None] const char* Name)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPass.Apply(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="flags">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectPass::Apply([None] int Flags)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPass.ComputeStateBlockMask(SharpDX.Direct3D10.StateBlockMask@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="stateBlockMaskRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectPass::ComputeStateBlockMask([None] D3D10_STATE_BLOCK_MASK* pStateBlockMask)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectPass.Apply">
            <summary>	
            Set the state contained in a pass to the device.	
            </summary>	
            <returns>Returns one of the following {{Direct3D 10 Return Codes}}.</returns>
            <unmanaged>HRESULT Apply([None] UINT Flags)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectPass.IsValid">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL ID3D10EffectPass::IsValid()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectPass.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3D10EffectPass::GetDesc([Out] D3D10_PASS_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectPass.VertexShaderDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3D10EffectPass::GetVertexShaderDesc([Out] D3D10_PASS_SHADER_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectPass.GeometryShaderDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3D10EffectPass::GetGeometryShaderDesc([Out] D3D10_PASS_SHADER_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectPass.PixelShaderDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3D10EffectPass::GetPixelShaderDesc([Out] D3D10_PASS_SHADER_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectTechnique">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10EffectTechnique</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectTechnique.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.EffectTechnique"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.EffectTechnique.IsValid_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>BOOL ID3D10EffectTechnique::IsValid()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectTechnique.GetDescription(SharpDX.Direct3D10.EffectTechniqueDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectTechnique::GetDesc([Out] D3D10_TECHNIQUE_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectTechnique.GetAnnotationByIndex(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVariable* ID3D10EffectTechnique::GetAnnotationByIndex([None] int Index)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectTechnique.GetAnnotationByName(System.String)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="name">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVariable* ID3D10EffectTechnique::GetAnnotationByName([None] const char* Name)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectTechnique.GetPassByIndex(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectPass* ID3D10EffectTechnique::GetPassByIndex([None] int Index)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectTechnique.GetPassByName(System.String)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="name">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectPass* ID3D10EffectTechnique::GetPassByName([None] const char* Name)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.EffectTechnique.ComputeStateBlockMask(SharpDX.Direct3D10.StateBlockMask@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="stateBlockMaskRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10EffectTechnique::ComputeStateBlockMask([None] D3D10_STATE_BLOCK_MASK* pStateBlockMask)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectTechnique.IsValid">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL ID3D10EffectTechnique::IsValid()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectTechnique.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3D10EffectTechnique::GetDesc([Out] D3D10_TECHNIQUE_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Effect">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10Effect</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Effect"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.IsValid_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>BOOL ID3D10Effect::IsValid()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.IsPool_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>BOOL ID3D10Effect::IsPool()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.GetDevice(SharpDX.Direct3D10.Device@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Effect::GetDevice([Out] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.GetDescription(SharpDX.Direct3D10.EffectDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Effect::GetDesc([Out] D3D10_EFFECT_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.GetConstantBufferByIndex(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectConstantBuffer* ID3D10Effect::GetConstantBufferByIndex([None] int Index)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.GetConstantBufferByName(System.String)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="name">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectConstantBuffer* ID3D10Effect::GetConstantBufferByName([None] const char* Name)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.GetVariableByIndex(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVariable* ID3D10Effect::GetVariableByIndex([None] int Index)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.GetVariableByName(System.String)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="name">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVariable* ID3D10Effect::GetVariableByName([None] const char* Name)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.GetVariableBySemantic(System.String)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="semantic">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectVariable* ID3D10Effect::GetVariableBySemantic([None] const char* Semantic)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.GetTechniqueByIndex(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectTechnique* ID3D10Effect::GetTechniqueByIndex([None] int Index)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.GetTechniqueByName(System.String)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="name">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>ID3D10EffectTechnique* ID3D10Effect::GetTechniqueByName([None] const char* Name)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.Optimize">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3D10Effect::Optimize()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.IsOptimized_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>BOOL ID3D10Effect::IsOptimized()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.#ctor(SharpDX.Direct3D10.Device,SharpDX.D3DCompiler.ShaderBytecode)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Effect"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="effectByteCode">The effect byte code.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.#ctor(SharpDX.Direct3D10.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.D3DCompiler.EffectFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Effect"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="effectByteCode">The effect byte code.</param>
            <param name="fxFlags">Effect compile options</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Effect.#ctor(SharpDX.Direct3D10.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.D3DCompiler.EffectFlags,SharpDX.Direct3D10.EffectPool)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Effect"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="effectByteCode">The effect byte code.</param>
            <param name="fxFlags">Effect compile options</param>
            <param name="effectPool">Optional. A reference to an memory space for effect variables that are shared across effects (see <see cref="T:SharpDX.Direct3D10.EffectPool"/>).</param>
        </member>
        <member name="P:SharpDX.Direct3D10.Effect.IsValid">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL ID3D10Effect::IsValid()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Effect.IsPool">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL ID3D10Effect::IsPool()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Effect.Device">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3D10Effect::GetDevice([Out] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Effect.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3D10Effect::GetDesc([Out] D3D10_EFFECT_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Effect.IsOptimized">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL ID3D10Effect::IsOptimized()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.BlendState1">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10BlendState1</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.BlendState1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.BlendState1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.BlendState1.GetDescription1(SharpDX.Direct3D10.BlendStateDescription1@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10BlendState1::GetDesc1([Out] D3D10_BLEND_DESC1* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.BlendState1.#ctor(SharpDX.Direct3D10.Device1,SharpDX.Direct3D10.BlendStateDescription1)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D10.BlendState1" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D10.BlendState1.#ctor(SharpDX.Direct3D10.Device1,SharpDX.Direct3D10.BlendStateDescription1@)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D10.BlendState1" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="P:SharpDX.Direct3D10.BlendState1.Description1">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10BlendState1::GetDesc1([Out] D3D10_BLEND_DESC1* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceView1">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10ShaderResourceView1</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.ShaderResourceView1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView1.GetDescription1(SharpDX.Direct3D10.ShaderResourceViewDescription1@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <unmanaged>void ID3D10ShaderResourceView1::GetDesc1([Out] D3D10_SHADER_RESOURCE_VIEW_DESC1* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView1.#ctor(SharpDX.Direct3D10.Device1,SharpDX.Direct3D10.Resource)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D10.ShaderResourceView1" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D10.ShaderResourceView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D10.BindFlags">ShaderResource</see> flag.</param>
            <unmanaged>ID3D10Device1::CreateShaderResourceView1</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ShaderResourceView1.#ctor(SharpDX.Direct3D10.Device1,SharpDX.Direct3D10.Resource,SharpDX.Direct3D10.ShaderResourceViewDescription1)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D10.ShaderResourceView1" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D10.ShaderResourceView1" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D10.BindFlags">ShaderResource</see> flag.</param>
            <param name = "description">A structure describing the <see cref = "T:SharpDX.Direct3D10.ShaderResourceView1" /> to be created.</param>
            <unmanaged>ID3D10Device1::CreateShaderResourceView1</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.ShaderResourceView1.Description1">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void ID3D10ShaderResourceView1::GetDesc1([Out] D3D10_SHADER_RESOURCE_VIEW_DESC1* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Sprite">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3DX10Sprite</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Sprite"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.Begin(SharpDX.Direct3D10.SpriteFlags)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="flags">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Sprite::Begin([None] D3DX10_SPRITE_FLAG flags)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.DrawSpritesBuffered(SharpDX.Direct3D10.SpriteInstance[],System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="spritesRef">No documentation.</param>
            <param name="cSprites">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Sprite::DrawSpritesBuffered([In, Buffer] D3DX10_SPRITE* pSprites,[None] int cSprites)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.Flush">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Sprite::Flush()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.DrawSpritesImmediate(SharpDX.Direct3D10.SpriteInstance[],System.Int32,System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="spritesRef">No documentation.</param>
            <param name="cSprites">No documentation.</param>
            <param name="cbSprite">No documentation.</param>
            <param name="flags">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Sprite::DrawSpritesImmediate([In, Buffer] D3DX10_SPRITE* pSprites,[None] int cSprites,[None] int cbSprite,[None] int flags)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.End">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Sprite::End()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.GetViewTransform(SharpDX.Matrix@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="viewTransformRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Sprite::GetViewTransform([Out] D3DXMATRIX* pViewTransform)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.SetViewTransform(SharpDX.Matrix@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="viewTransformRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Sprite::SetViewTransform([None] D3DXMATRIX* pViewTransform)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.GetProjectionTransform(SharpDX.Matrix@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="rojectionTransformRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Sprite::GetProjectionTransform([Out] D3DXMATRIX* pProjectionTransform)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.SetProjectionTransform(SharpDX.Matrix@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="rojectionTransformRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Sprite::SetProjectionTransform([None] D3DXMATRIX* pProjectionTransform)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.GetDevice(SharpDX.Direct3D10.Device@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Sprite::GetDevice([Out] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.#ctor(SharpDX.Direct3D10.Device,System.Int32)">
            <summary>	
            Create a sprite for drawing a 2D texture.	
            </summary>	
            <param name="device">A reference to the device (see <see cref="T:SharpDX.Direct3D10.Device"/>) that will draw the sprite. </param>
            <param name="bufferSize">The size of the vertex buffer, in number of sprites, that will be sent to the device when <see cref="M:SharpDX.Direct3D10.Sprite.Flush"/> or <see cref="M:SharpDX.Direct3D10.Sprite.DrawSpritesBuffered(SharpDX.Direct3D10.SpriteInstance[])"/> is called. This should be a small number if you know you will be rendering a small number of sprites at a time (to save memory) and a large number if you know you will be rendering a large number of sprites at a time. The maximum value is 4096. If 0 is specified, the vertex buffer size will automatically be set to 4096. </param>
            <unmanaged>HRESULT D3DX10CreateSprite([None] ID3D10Device* pDevice,[None] int cDeviceBufferSize,[None] LPD3DX10SPRITE* ppSprite)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.DrawSpritesBuffered(SharpDX.Direct3D10.SpriteInstance[])">
            <summary>	
            Add an array of sprites to the batch of sprites to be rendered. This must be called in between calls to <see cref="M:SharpDX.Direct3D10.Sprite.Begin(SharpDX.Direct3D10.SpriteFlags)"/> and <see cref="M:SharpDX.Direct3D10.Sprite.End"/>, and <see cref="M:SharpDX.Direct3D10.Sprite.Flush"/> must be called before End to send all of the batched sprites to the device for rendering. This draw method is most useful when drawing a small number of sprites that you want buffered into a large batch, such as fonts.	
            </summary>	
            <param name="sprites">The array of sprites to draw. See <see cref="T:SharpDX.Direct3D10.SpriteInstance"/>. </param>
            <returns>If the method succeeds, the return value is S_OK. If the method fails, the return value can be one of the following: D3DERR_INVALIDCALL, D3DXERR_INVALIDDATA. </returns>
            <unmanaged>HRESULT ID3DX10Sprite::DrawSpritesBuffered([None] D3DX10_SPRITE* pSprites,[None] int cSprites)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Sprite.DrawSpritesImmediate(SharpDX.Direct3D10.SpriteInstance[])">
            <summary>	
            Draw an array of sprites. This will immediately send the sprites to the device for rendering, which is different from <see cref="M:SharpDX.Direct3D10.Sprite.DrawSpritesBuffered(SharpDX.Direct3D10.SpriteInstance[])"/> which only adds an array of sprites to a batch of sprites to be rendered when <see cref="M:SharpDX.Direct3D10.Sprite.Flush"/> is called. This draw method is most useful when drawing a large number of sprites that have already been sorted on the CPU (or do not need to be sorted), such as in a particle system. This must be called in between calls to <see cref="M:SharpDX.Direct3D10.Sprite.Begin(SharpDX.Direct3D10.SpriteFlags)"/> and <see cref="M:SharpDX.Direct3D10.Sprite.End"/>.	
            </summary>	
            <param name="sprites">The array of sprites to draw. See <see cref="T:SharpDX.Direct3D10.SpriteInstance"/>. </param>
            <returns>If the method succeeds, the return value is S_OK. If the method fails, the return value can be one of the following: D3DERR_INVALIDCALL, D3DXERR_INVALIDDATA. </returns>
            <unmanaged>HRESULT ID3DX10Sprite::DrawSpritesImmediate([In, Buffer] D3DX10_SPRITE* pSprites,[None] int cSprites,[None] int cbSprite,[None] int flags)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Sprite.ViewTransform">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3DX10Sprite::GetViewTransform([Out] D3DXMATRIX* pViewTransform)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Sprite.ProjectionTransform">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3DX10Sprite::GetProjectionTransform([Out] D3DXMATRIX* pProjectionTransform)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Sprite.Device">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3DX10Sprite::GetDevice([Out] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Font">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3DX10Font</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Font"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.Font.GetDevice(SharpDX.Direct3D10.Device@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Font::GetDevice([Out] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.GetDescription(SharpDX.Direct3D10.FontDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Font::GetDescW([Out] D3DX10_FONT_DESCW* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.GetTextMetrics(System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="textMetricsRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>BOOL ID3DX10Font::GetTextMetricsW([In] void* pTextMetrics)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.GetDisplayDeviceContext">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>void* ID3DX10Font::GetDC()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.GetGlyphData(System.Int32,SharpDX.Direct3D10.ShaderResourceView@,SharpDX.Rectangle@,System.Drawing.Point@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="glyph">No documentation.</param>
            <param name="textureRef">No documentation.</param>
            <param name="blackBoxRef">No documentation.</param>
            <param name="cellIncRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Font::GetGlyphData([None] int Glyph,[Out] ID3D10ShaderResourceView** ppTexture,[Out] RECT* pBlackBox,[Out] POINT* pCellInc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.PreloadCharacters(System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="first">No documentation.</param>
            <param name="last">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Font::PreloadCharacters([None] int First,[None] int Last)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.PreloadGlyphs(System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="first">No documentation.</param>
            <param name="last">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Font::PreloadGlyphs([None] int First,[None] int Last)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.PreloadText(System.String,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="stringRef">No documentation.</param>
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10Font::PreloadTextW([None] const wchar_t* pString,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.DrawText(SharpDX.Direct3D10.Sprite,System.String,System.Int32,SharpDX.Rectangle@,System.Int32,SharpDX.Color4)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="pSprite">No documentation.</param>
            <param name="stringRef">No documentation.</param>
            <param name="count">No documentation.</param>
            <param name="rectRef">No documentation.</param>
            <param name="format">No documentation.</param>
            <param name="color">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>int ID3DX10Font::DrawTextW([None] LPD3DX10SPRITE pSprite,[None] const wchar_t* pString,[None] int Count,[None] RECT* pRect,[None] int Format,[None] D3DXCOLOR Color)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.#ctor(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.FontDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Font"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="fontDescription">The font description.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.#ctor(SharpDX.Direct3D10.Device,System.Int32,System.Int32,SharpDX.Direct3D10.FontWeight,System.Int32,System.Boolean,SharpDX.Direct3D10.FontCharacterSet,SharpDX.Direct3D10.FontPrecision,SharpDX.Direct3D10.FontQuality,SharpDX.Direct3D10.FontPitchAndFamily,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.Font"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="height">The height.</param>
            <param name="width">The width.</param>
            <param name="weight">The weight.</param>
            <param name="mipLevels">The mip levels.</param>
            <param name="isItalic">if set to <c>true</c> [is italic].</param>
            <param name="characterSet">The character set.</param>
            <param name="precision">The precision.</param>
            <param name="quality">The quality.</param>
            <param name="pitchAndFamily">The pitch and family.</param>
            <param name="faceName">Name of the face.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.PreloadText(System.String)">
            <summary>	
            Load formatted text into video memory to improve the efficiency of rendering to the device. This method supports ANSI and Unicode strings.	
            </summary>	
            <remarks>	
            The compiler setting also determines the function version. If Unicode is defined, the function call resolves to PreloadTextW. Otherwise, the function call resolves to PreloadTextA because ANSI strings are being used. This method generates textures that contain glyphs that represent the input text. The glyphs are drawn as a series of triangles. Text will not be rendered to the device; ID3DX10Font::DrawText must still be called to render the text. However, by preloading text into video memory, ID3DX10Font::DrawText will use substantially fewer CPU resources. This method internally converts characters to glyphs using the GDI function {{GetCharacterPlacement}}. 	
            </remarks>	
            <param name="stringRef">Pointer to a string of characters to be loaded into video memory. If the compiler settings require Unicode, the data type LPCTSTR resolves to LPCWSTR; otherwise, the data type resolves to LPCSTR. See Remarks. </param>
            <returns>If the method succeeds, the return value is S_OK. If the method fails, the return value can be one of the following: D3DERR_INVALIDCALL, D3DXERR_INVALIDDATA. </returns>
            <unmanaged>HRESULT ID3DX10Font::PreloadTextW([None] const wchar_t* pString,[None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.DrawText(SharpDX.Direct3D10.Sprite,System.String,SharpDX.Rectangle,SharpDX.Direct3D10.FontDrawFlags,SharpDX.Color4)">
            <summary>	
            Draw formatted text. This method supports ANSI and Unicode strings.	
            </summary>	
            <remarks>	
            The parameters of this method are very similar to those of the {{GDI DrawText}} function. This method supports both ANSI and Unicode strings. Unless the DT_NOCLIP format is used, this method clips the text so that it does not appear outside the specified rectangle. All formatting is assumed to have multiple lines unless the DT_SINGLELINE format is specified. If the selected font is too large for the rectangle, this method does not attempt to substitute a smaller font. This method supports only fonts whose escapement and orientation are both zero. 	
            </remarks>	
            <param name="sprite">Reference to an ID3DX10Sprite object that contains the string you wish to draw. Can be NULL, in which case Direct3D will render the string with its own sprite object. To improve efficiency, a sprite object should be specified if ID3DX10Font::DrawText is to be called more than once in a row. </param>
            <param name="text">Pointer to a string to draw. If UNICODE is defined, this parameter type resolves to an LPCWSTR, otherwise, the type resolves to an LPCSTR. If the Count parameter is -1, the string must be NULL terminated. </param>
            <param name="rect">Pointer to a <see cref="T:SharpDX.Rectangle"/> structure that contains the rectangle, in logical coordinates, in which the text is to be formatted. As with any RECT object, the coordinate value of the rectangle's right side must be greater than that of its left side. Likewise, the coordinate value of the bottom must be greater than that of the top. </param>
            <param name="drawFlags">Specify the method of formatting the text. It can be any combination of the following values:    ItemDescription  DT_BOTTOM  Justify the text to the bottom of the rectangle. This value must be combined with DT_SINGLELINE.   DT_CALCRECT  Tell DrawText to automatically calculate the width and height of the rectangle based on the length of the string you tell it to draw. If there are multiple lines of text, ID3DX10Font::DrawText uses the width of the rectangle pointed to by the pRect parameter and extends the base of the rectangle to bound the last line of text. If there is only one line of text, ID3DX10Font::DrawText modifies the right side of the rectangle so that it bounds the last character in the line. In either case, ID3DX10Font::DrawText returns the height of the formatted text but does not draw the text.   DT_CENTER  Center text horizontally in the rectangle.   DT_EXPANDTABS  Expand tab characters. The default number of characters per tab is eight.   DT_LEFT  Align text to the left.   DT_NOCLIP  Draw without clipping. ID3DX10Font::DrawText is somewhat faster when DT_NOCLIP is used.   DT_RIGHT  Align text to the right.   DT_RTLREADING  Display text in right-to-left reading order for bidirectional text when a Hebrew or Arabic font is selected. The default reading order for all text is left-to-right.   DT_SINGLELINE  Display text on a single line only. Carriage returns and line feeds do not break the line.   DT_TOP  Top-justify text.   DT_VCENTER  Center text vertically (single line only).   DT_WORDBREAK  Break words. Lines are automatically broken between words if a word would extend past the edge of the rectangle specified by the pRect parameter. A carriage return/line feed sequence also breaks the line.   ? </param>
            <param name="color">Color of the text. See <see cref="T:SharpDX.Color4"/>. </param>
            <returns>If the function succeeds, the return value is the height of the text in logical units. If DT_VCENTER or DT_BOTTOM is specified, the return value is the offset from pRect (top to the bottom) of the drawn text. If the function fails, the return value is zero. </returns>
            <unmanaged>int ID3DX10Font::DrawTextW([None] LPD3DX10SPRITE pSprite,[None] const wchar_t* pString,[None] int Count,[None] RECT* pRect,[None] int Format,[None] D3DXCOLOR Color)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.Font.Measure(SharpDX.Direct3D10.Sprite,System.String,SharpDX.Rectangle,SharpDX.Direct3D10.FontDrawFlags)">
            <summary>
            Measures the specified sprite.
            </summary>
            <param name="sprite">Reference to an ID3DX10Sprite object that contains the string you wish to draw. Can be NULL, in which case Direct3D will render the string with its own sprite object. To improve efficiency, a sprite object should be specified if ID3DX10Font::DrawText is to be called more than once in a row. </param>
            <param name="text">A string to measure. </param>
            <param name="rect">A <see cref="T:SharpDX.Rectangle"/> structure that contains the rectangle, in logical coordinates, in which the text is to be formatted. As with any RECT object, the coordinate value of the rectangle's right side must be greater than that of its left side. Likewise, the coordinate value of the bottom must be greater than that of the top.</param>
            <param name="drawFlags">Specify the method of formatting the text.</param>
            <returns></returns>
        </member>
        <member name="P:SharpDX.Direct3D10.Font.Device">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3DX10Font::GetDevice([Out] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Font.Description">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>HRESULT ID3DX10Font::GetDescW([Out] D3DX10_FONT_DESCW* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.Font.DisplayDeviceContext">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void* ID3DX10Font::GetDC()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.MeshBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3DX10MeshBuffer</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.MeshBuffer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.MeshBuffer"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.MeshBuffer.Map(System.IntPtr@,SharpDX.Size@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="sizeRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10MeshBuffer::Map([Out] void** ppData,[Out] SIZE_T* pSize)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.MeshBuffer.Unmap">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10MeshBuffer::Unmap()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.MeshBuffer.GetSizeInBytes">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>SIZE_T ID3DX10MeshBuffer::GetSize()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.MeshBuffer.Map">
            <summary>	
            Get a reference to the mesh buffer memory to modify its contents.	
            </summary>	
            <remarks>	
            Differences between Direct3D 9 and Direct3D 10: Map() in Direct3D 10 is analogous to resource Map() in Direct3D 9.   ? 	
            </remarks>	
            <returns>Returns a reference to the mesh buffer memory to modify its contents</returns>
            <unmanaged>HRESULT ID3DX10MeshBuffer::Map([Out] void** ppData,[Out] SIZE_T* pSize)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.MeshBuffer.SizeInBytes">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>SIZE_T ID3DX10MeshBuffer::GetSize()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.SkinInfo">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3DX10SkinInfo</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.SkinInfo"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.GetNumVertices">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>int ID3DX10SkinInfo::GetNumVertices()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.GetNumBones">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>int ID3DX10SkinInfo::GetNumBones()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.GetMaxBoneInfluences">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>
            <unmanaged>int ID3DX10SkinInfo::GetMaxBoneInfluences()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.AddVertices(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::AddVertices([None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.RemapVertices(System.Int32,System.Int32[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="newVertexCount">No documentation.</param>
            <param name="vertexRemapRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::RemapVertices([None] int NewVertexCount,[In, Buffer] int* pVertexRemap)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.AddBones(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="count">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::AddBones([None] int Count)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.RemoveBone(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::RemoveBone([None] int Index)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.RemapBones(System.Int32,System.Int32[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="newBoneCount">No documentation.</param>
            <param name="boneRemapRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::RemapBones([None] int NewBoneCount,[In, Buffer] int* pBoneRemap)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.AddBoneInfluences(System.Int32,System.Int32,System.Int32[],System.Single[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="boneIndex">No documentation.</param>
            <param name="influenceCount">No documentation.</param>
            <param name="indicesRef">No documentation.</param>
            <param name="weightsRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::AddBoneInfluences([None] int BoneIndex,[None] int InfluenceCount,[In, Buffer] int* pIndices,[In, Buffer] float* pWeights)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.ClearBoneInfluences(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="boneIndex">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::ClearBoneInfluences([None] int BoneIndex)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.GetBoneInfluenceCount(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="boneIndex">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>int ID3DX10SkinInfo::GetBoneInfluenceCount([None] int BoneIndex)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.GetBoneInfluences(System.Int32,System.Int32,System.Int32,System.Int32[],System.Single[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="boneIndex">No documentation.</param>
            <param name="offset">No documentation.</param>
            <param name="count">No documentation.</param>
            <param name="destIndicesRef">No documentation.</param>
            <param name="destWeightsRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::GetBoneInfluences([None] int BoneIndex,[None] int Offset,[None] int Count,[Out, Buffer] int* pDestIndices,[Out, Buffer] float* pDestWeights)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.FindBoneInfluenceIndex(System.Int32,System.Int32,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="boneIndex">No documentation.</param>
            <param name="vertexIndex">No documentation.</param>
            <param name="influenceIndexRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::FindBoneInfluenceIndex([None] int BoneIndex,[None] int VertexIndex,[None] int* pInfluenceIndex)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.SetBoneInfluence(System.Int32,System.Int32,System.Single)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="boneIndex">No documentation.</param>
            <param name="influenceIndex">No documentation.</param>
            <param name="weight">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::SetBoneInfluence([None] int BoneIndex,[None] int InfluenceIndex,[None] float Weight)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.GetBoneInfluence(System.Int32,System.Int32,System.Single@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="boneIndex">No documentation.</param>
            <param name="influenceIndex">No documentation.</param>
            <param name="weightRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::GetBoneInfluence([None] int BoneIndex,[None] int InfluenceIndex,[None] float* pWeight)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.Compact(System.Int32,System.Int32,System.Single)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="maxPerVertexInfluences">No documentation.</param>
            <param name="scaleMode">No documentation.</param>
            <param name="minWeight">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::Compact([None] int MaxPerVertexInfluences,[None] int ScaleMode,[None] float MinWeight)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.DoSoftwareSkinning(System.Int32,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32,SharpDX.Matrix@,System.Nullable{SharpDX.Matrix},SharpDX.Direct3D10.SkinningChannel@,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="startVertex">No documentation.</param>
            <param name="vertexCount">No documentation.</param>
            <param name="srcVerticesRef">No documentation.</param>
            <param name="srcStride">No documentation.</param>
            <param name="destVerticesRef">No documentation.</param>
            <param name="destStride">No documentation.</param>
            <param name="boneMatricesRef">No documentation.</param>
            <param name="inverseTransposeBoneMatricesRef">No documentation.</param>
            <param name="channelDescsRef">No documentation.</param>
            <param name="numChannels">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::DoSoftwareSkinning([None] int StartVertex,[None] int VertexCount,[None] void* pSrcVertices,[None] int SrcStride,[None] void* pDestVertices,[None] int DestStride,[None] D3DXMATRIX* pBoneMatrices,[In, Optional] D3DXMATRIX* pInverseTransposeBoneMatrices,[None] D3DX10_SKINNING_CHANNEL* pChannelDescs,[None] int NumChannels)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.SkinInfo.GetBoneInfluences(System.Int32,System.Int32,System.Int32,System.Int32[]@,System.Single[]@)">
            <summary>	
            Get a list of vertices that a given bone influences and a list of the amount of influence that bone has on each vertex.	
            </summary>	
            <param name="boneIndex">An index that specifies an existing bone. Must be between 0 and the value returned by <see cref="M:SharpDX.Direct3D10.SkinInfo.GetNumBones" />. </param>
            <param name="offset">An offset from the top of the bone's list of influenced vertices. This must be between 0 and the value returned by <see cref="M:SharpDX.Direct3D10.SkinInfo.GetBoneInfluenceCount(System.Int32)" />. </param>
            <param name="count">The number of indices and weights to retrieve.  Must be between 0 and the value returned by ID3DX10SkinInfo::GetBoneInfluenceCount. </param>
            <param name="destIndicesRef">A list of indices into the vertex buffer, each one representing a vertex influenced by the bone. These values correspond to the values in pDestWeights, such that pDestIndices[i] corresponds to pDestWeights[i]. </param>
            <param name="destWeightsRef">A list of the amount of influence the bone has on each vertex. These values correspond to the values in pDestIndices, such that pDestWeights[i] corresponds to pDestIndices[i].f </param>
            <returns>If the method succeeds, the return value is S_OK. If the method fails, the return value can be: E_INVALIDARG or E_OUTOFMEMORY. </returns>
            <unmanaged>HRESULT ID3DX10SkinInfo::GetBoneInfluences([None] int BoneIndex,[None] int Offset,[None] int Count,[Out, Buffer] int* pDestIndices,[Out, Buffer] float* pDestWeights)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.SkinInfo.NumVertices">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ID3DX10SkinInfo::GetNumVertices()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.SkinInfo.NumBones">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ID3DX10SkinInfo::GetNumBones()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.SkinInfo.MaxBoneInfluences">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ID3DX10SkinInfo::GetMaxBoneInfluences()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.FontPrecision">
            <summary>
            Defines precision levels for font rendering.
            </summary>
            <unmanaged>OutPrecision</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPrecision.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPrecision.String">
            <summary>
            String
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPrecision.Character">
            <summary>
            Character
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPrecision.Stroke">
            <summary>
            Stroke
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPrecision.TrueType">
            <summary>
            TrueType
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPrecision.Device">
            <summary>
            Device
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPrecision.Raster">
            <summary>
            Raster
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPrecision.TrueTypeOnly">
            <summary>
            TrueTypeOnly
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPrecision.Outline">
            <summary>
            Outline
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPrecision.ScreenOutline">
            <summary>
            ScreenOutline
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPrecision.PostScriptOnly">
            <summary>
            PostScriptOnly
            </summary>
        </member>
        <member name="T:SharpDX.Direct3D10.ImageInformation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_IMAGE_INFO</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ImageInformation.FromFile(System.String)">
            <summary>	
            Retrieves information about a given image file.	
            </summary>	
            <param name="fileName">File name of image to retrieve information about.</param>
            <returns>If the function succeeds, returns a <see cref="T:SharpDX.Direct3D10.ImageInformation"/> filled with the description of the data in the source file. else returns null </returns>
            <unmanaged>HRESULT D3DX11GetImageInfoFromFileW([None] const wchar_t* pSrcFile,[None] ID3DX11ThreadPump* pPump,[None] D3DX11_IMAGE_INFO* pSrcInfo,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.ImageInformation.FromMemory(System.Byte[])">
            <summary>	
            Retrieves information about a given image file from a memory location.
            </summary>	
            <param name="memory">an array to the image in memory</param>
            <returns>If the function succeeds, returns a <see cref="T:SharpDX.Direct3D10.ImageInformation"/> filled with the description of the data from the image memory. else returns null </returns>
            <unmanaged>HRESULT D3DX11GetImageInfoFromFileW([None] const wchar_t* pSrcFile,[None] ID3DX11ThreadPump* pPump,[None] D3DX11_IMAGE_INFO* pSrcInfo,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageInformation.Width">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Width</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageInformation.Height">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Height</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageInformation.Depth">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Depth</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageInformation.ArraySize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ArraySize</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageInformation.MipLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipLevels</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageInformation.OptionFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_MISC_FLAG MiscFlags</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageInformation.Format">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageInformation.ResourceDimension">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_DIMENSION ResourceDimension</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageInformation.ImageFileFormat">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_IMAGE_FILE_FORMAT ImageFileFormat</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.CounterMetadata">
            <summary>
            Counter metadata that contains the type, name, units of measure, and a description of an existing counter.
            </summary>
        </member>
        <member name="P:SharpDX.Direct3D10.CounterMetadata.Type">
            <summary>
            Gets the data type of a counter (see <see cref="T:SharpDX.Direct3D10.CounterType"/>).
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:SharpDX.Direct3D10.CounterMetadata.HardwareCounterCount">
            <summary>
            Gets the number of hardware counters that are needed for this counter type to be created. All instances of the same counter type use the same hardware counters.
            </summary>
            <value>The hardware counter count.</value>
        </member>
        <member name="P:SharpDX.Direct3D10.CounterMetadata.Name">
            <summary>
            Gets a brief name for the counter.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:SharpDX.Direct3D10.CounterMetadata.Units">
            <summary>
            Gets the units a counter measures.
            </summary>
            <value>The units.</value>
        </member>
        <member name="P:SharpDX.Direct3D10.CounterMetadata.Description">
            <summary>
            Gets a description of the counter.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:SharpDX.Direct3D10.StreamOutputElement">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_SO_DECLARATION_ENTRY</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.StreamOutputElement.#ctor(System.String,System.Int32,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.StreamOutputElement"/> struct.
            </summary>
            <param name="semanticName">Name of the semantic.</param>
            <param name="semanticIndex">Index of the semantic.</param>
            <param name="startComponent">The start component.</param>
            <param name="componentCount">The component count.</param>
            <param name="outputSlot">The output slot.</param>
        </member>
        <member name="F:SharpDX.Direct3D10.StreamOutputElement.SemanticName">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>const char* SemanticName</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StreamOutputElement.SemanticIndex">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int SemanticIndex</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StreamOutputElement.StartComponent">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>byte StartComponent</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StreamOutputElement.ComponentCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>byte ComponentCount</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StreamOutputElement.OutputSlot">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>byte OutputSlot</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.SpriteInstance">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_SPRITE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SpriteInstance.Transform">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DXMATRIX matWorld</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SpriteInstance.TextureCoordinates">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DXVECTOR2 TexCoord</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SpriteInstance.TextureDimensions">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DXVECTOR2 TexSize</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SpriteInstance.Color">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DXCOLOR ColorModulate</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SpriteInstance.ShaderResourceViewPointer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ID3D10ShaderResourceView* pTexture</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SpriteInstance.TextureIndex">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int TextureIndex</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.SpriteInstance.Texture">
            <summary>
            Gets or sets the texture.
            </summary>
            <value>The texture.</value>
        </member>
        <member name="T:SharpDX.Direct3D10.FontWeight">
            <summary>
            Specifies weights for font rendering.
            </summary>
            <unmanaged>FW</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.Black">
            <summary>
            Use a black weight.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.Bold">
            <summary>
            Use a bold weight.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.DemiBold">
            <summary>
            Use a demi-bold weight.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.DoNotCare">
            <summary>
            The font weight doesn't matter.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.ExtraBold">
            <summary>
            Use an extra bold weight.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.ExtraLight">
            <summary>
            Make the font extra light.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.Heavy">
            <summary>
            Use a heavy weight.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.Light">
            <summary>
            Make the font light.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.Medium">
            <summary>
            Use a medium weight.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.Normal">
            <summary>
            Use a normal weight.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.Regular">
            <summary>
            Use a regular weight.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.SemiBold">
            <summary>
            Use a semi-bold weight.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.Thin">
            <summary>
            Make the font thin.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.UltraBold">
            <summary>
            Use an ultra bold weight.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontWeight.UltraLight">
            <summary>
            Make the font ultra light.
            </summary>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectShaderDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_EFFECT_SHADER_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectShaderDescription.InputSignaturePointer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>const byte* pInputSignature</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectShaderDescription.BytecodePointer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>const byte* pBytecode</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectShaderDescription.BytecodeLength">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int BytecodeLength</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectShaderDescription.StreamOutputDeclaration">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>const char* SODecl</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectShaderDescription.InputParameterCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int NumInputSignatureEntries</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectShaderDescription.OutputParameterCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int NumOutputSignatureEntries</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectShaderDescription.Signature">
            <summary>
            Gets the signature passed into InputLayout. Only valid on a vertex shader or geometry shader.
            </summary>
            <value>The signature.</value>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectShaderDescription.Bytecode">
            <summary>
            Gets the bytecode from the compiled shader.
            </summary>
            <value>The bytecode.</value>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectShaderDescription.IsInline">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL IsInline</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.StreamOutputBufferBinding">
            <summary>
              Properties defining the way a buffer is bound to the pipeline as a target for stream output operations.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D10.StreamOutputBufferBinding.#ctor(SharpDX.Direct3D10.Buffer,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.StreamOutputBufferBinding" /> struct.
            </summary>
            <param name = "buffer">The buffer being bound.</param>
            <param name = "offset">The offset to the first vertex (in bytes).</param>
        </member>
        <member name="P:SharpDX.Direct3D10.StreamOutputBufferBinding.Buffer">
            <summary>
              Gets or sets the buffer being bound.
            </summary>
        </member>
        <member name="P:SharpDX.Direct3D10.StreamOutputBufferBinding.Offset">
            <summary>
              Gets or sets the offset from the start of the buffer of the first vertex to use (in bytes).
            </summary>
        </member>
        <member name="T:SharpDX.Direct3D10.InputElement">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_INPUT_ELEMENT_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.InputElement.SemanticName">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>const char* SemanticName</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.InputElement.SemanticIndex">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int SemanticIndex</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.InputElement.Format">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.InputElement.Slot">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int InputSlot</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.InputElement.AlignedByteOffset">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int AlignedByteOffset</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.InputElement.Classification">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_INPUT_CLASSIFICATION InputSlotClass</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.InputElement.InstanceDataStepRate">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int InstanceDataStepRate</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.InputElement.#ctor(System.String,System.Int32,SharpDX.DXGI.Format,System.Int32,System.Int32,SharpDX.Direct3D10.InputClassification,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.InputElement" /> struct.
            </summary>
            <param name = "name">The HLSL semantic associated with this element in a shader input-signature.</param>
            <param name = "index">The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix, however each of the four component would have different semantic indices (0, 1, 2, and 3).</param>
            <param name = "format">The data type of the element data.</param>
            <param name = "offset">Offset (in bytes) between each element. Use AppendAligned for convenience to define the current element directly after the previous one, including any packing if necessary.</param>
            <param name = "slot">An integer value that identifies the input-assembler. Valid values are between 0 and 15.</param>
            <param name = "slotClass">Identifies the input data class for a single input slot.</param>
            <param name = "stepRate">The number of instances to draw using the same per-instance data before advancing in the buffer by one element. This value must be 0 for an element that contains per-vertex data.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.InputElement.#ctor(System.String,System.Int32,SharpDX.DXGI.Format,System.Int32,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.InputElement" /> struct.
            </summary>
            <param name = "name">The HLSL semantic associated with this element in a shader input-signature.</param>
            <param name = "index">The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix, however each of the four component would have different semantic indices (0, 1, 2, and 3).</param>
            <param name = "format">The data type of the element data.</param>
            <param name = "offset">Offset (in bytes) between each element. Use AppendAligned for convenience to define the current element directly after the previous one, including any packing if necessary.</param>
            <param name = "slot">An integer value that identifies the input-assembler. Valid values are between 0 and 15.</param>
        </member>
        <member name="M:SharpDX.Direct3D10.InputElement.#ctor(System.String,System.Int32,SharpDX.DXGI.Format,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D10.InputElement" /> struct.
            </summary>
            <param name = "name">The HLSL semantic associated with this element in a shader input-signature.</param>
            <param name = "index">The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix, however each of the four component would have different semantic indices (0, 1, 2, and 3).</param>
            <param name = "format">The data type of the element data.</param>
            <param name = "slot">An integer value that identifies the input-assembler. Valid values are between 0 and 15.</param>
        </member>
        <member name="P:SharpDX.Direct3D10.InputElement.AppendAligned">
            <summary>
              Returns a value that can be used for the offset parameter of an InputElement to indicate that the element
              should be aligned directly after the previous element, including any packing if neccessary.
            </summary>
            <returns>A value used to align input elements.</returns>
            <unmanaged>D3D10_APPEND_ALIGNED_ELEMENT</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ResourceRegion">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BOX</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceRegion.Left">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int left</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceRegion.Top">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int top</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceRegion.Front">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int front</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceRegion.Right">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int right</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceRegion.Bottom">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int bottom</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceRegion.Back">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int back</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthStencilOperationDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEPTH_STENCILOP_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilOperationDescription.FailOperation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STENCIL_OP StencilFailOp</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilOperationDescription.DepthFailOperation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STENCIL_OP StencilDepthFailOp</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilOperationDescription.PassOperation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STENCIL_OP StencilPassOp</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilOperationDescription.Comparison">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COMPARISON_FUNC StencilFunc</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthStencilStateDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEPTH_STENCIL_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilStateDescription.DepthWriteMask">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEPTH_WRITE_MASK DepthWriteMask</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilStateDescription.DepthComparison">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COMPARISON_FUNC DepthFunc</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilStateDescription.StencilReadMask">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>byte StencilReadMask</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilStateDescription.StencilWriteMask">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>byte StencilWriteMask</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilStateDescription.FrontFace">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEPTH_STENCILOP_DESC FrontFace</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilStateDescription.BackFace">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEPTH_STENCILOP_DESC BackFace</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.DepthStencilStateDescription.IsDepthEnabled">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL DepthEnable</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.DepthStencilStateDescription.IsStencilEnabled">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL StencilEnable</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.BlendStateDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendStateDescription.SourceBlend">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND SrcBlend</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendStateDescription.DestinationBlend">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND DestBlend</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendStateDescription.BlendOperation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_OP BlendOp</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendStateDescription.SourceAlphaBlend">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND SrcBlendAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendStateDescription.DestinationAlphaBlend">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND DestBlendAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendStateDescription.AlphaBlendOperation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_OP BlendOpAlpha</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.BlendStateDescription.IsAlphaToCoverageEnabled">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL AlphaToCoverageEnable</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.BlendStateDescription.IsBlendEnabled">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL BlendEnable[8]</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.BlendStateDescription.RenderTargetWriteMask">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COLOR_WRITE_ENABLE RenderTargetWriteMask[8]</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RasterizerStateDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RASTERIZER_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RasterizerStateDescription.FillMode">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILL_MODE FillMode</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RasterizerStateDescription.CullMode">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CULL_MODE CullMode</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RasterizerStateDescription.DepthBias">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int DepthBias</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RasterizerStateDescription.DepthBiasClamp">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float DepthBiasClamp</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RasterizerStateDescription.SlopeScaledDepthBias">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float SlopeScaledDepthBias</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.RasterizerStateDescription.IsFrontCounterClockwise">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL FrontCounterClockwise</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.RasterizerStateDescription.IsDepthClipEnabled">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL DepthClipEnable</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.RasterizerStateDescription.IsScissorEnabled">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL ScissorEnable</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.RasterizerStateDescription.IsMultisampleEnabled">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL MultisampleEnable</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.RasterizerStateDescription.IsAntialiasedLineEnabled">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL AntialiasedLineEnable</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.SubResourceData">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_SUBRESOURCE_DATA</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SubResourceData.DataPointer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>const void* pSysMem</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SubResourceData.Pitch">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int SysMemPitch</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SubResourceData.SlicePitch">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int SysMemSlicePitch</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.BufferDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BUFFER_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BufferDescription.SizeInBytes">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ByteWidth</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BufferDescription.Usage">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_USAGE Usage</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BufferDescription.BindFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BIND_FLAG BindFlags</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BufferDescription.CpuAccessFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BufferDescription.OptionFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_MISC_FLAG MiscFlags</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.BufferDescription.#ctor(System.Int32,SharpDX.Direct3D10.ResourceUsage,SharpDX.Direct3D10.BindFlags,SharpDX.Direct3D10.CpuAccessFlags,SharpDX.Direct3D10.ResourceOptionFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D10.BufferDescription"/> struct.
            </summary>
            <param name="sizeInBytes">The size in bytes.</param>
            <param name="usage">The usage.</param>
            <param name="bindFlags">The bind flags.</param>
            <param name="cpuAccessFlags">The cpu access flags.</param>
            <param name="optionFlags">The option flags.</param>
        </member>
        <member name="T:SharpDX.Direct3D10.Texture1DDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURE1D_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture1DDescription.Width">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Width</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture1DDescription.MipLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipLevels</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture1DDescription.ArraySize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ArraySize</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture1DDescription.Format">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture1DDescription.Usage">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_USAGE Usage</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture1DDescription.BindFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BIND_FLAG BindFlags</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture1DDescription.CpuAccessFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture1DDescription.OptionFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_MISC_FLAG MiscFlags</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Texture2DDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURE2D_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture2DDescription.Width">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Width</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture2DDescription.Height">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Height</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture2DDescription.MipLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipLevels</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture2DDescription.ArraySize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ArraySize</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture2DDescription.Format">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture2DDescription.SampleDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>DXGI_SAMPLE_DESC SampleDesc</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture2DDescription.Usage">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_USAGE Usage</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture2DDescription.BindFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BIND_FLAG BindFlags</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture2DDescription.CpuAccessFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture2DDescription.OptionFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_MISC_FLAG MiscFlags</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.MappedTexture2D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_MAPPED_TEXTURE2D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MappedTexture2D.PData">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void* pData</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MappedTexture2D.RowPitch">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int RowPitch</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Texture3DDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURE3D_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture3DDescription.Width">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Width</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture3DDescription.Height">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Height</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture3DDescription.Depth">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Depth</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture3DDescription.MipLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipLevels</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture3DDescription.Format">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture3DDescription.Usage">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_USAGE Usage</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture3DDescription.BindFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BIND_FLAG BindFlags</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture3DDescription.CpuAccessFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Texture3DDescription.OptionFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_MISC_FLAG MiscFlags</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.MappedTexture3D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_MAPPED_TEXTURE3D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MappedTexture3D.PData">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>void* pData</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MappedTexture3D.RowPitch">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int RowPitch</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MappedTexture3D.DepthPitch">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int DepthPitch</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceViewDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_SHADER_RESOURCE_VIEW_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Format">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Dimension">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_SRV_DIMENSION ViewDimension</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Buffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BUFFER_SRV Buffer</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture1D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_SRV Texture1D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture1DArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_ARRAY_SRV Texture1DArray</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_SRV Texture2D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_ARRAY_SRV Texture2DArray</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DMS">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_SRV Texture2DMS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DMSArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_ARRAY_SRV Texture2DMSArray</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture3D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX3D_SRV Texture3D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.TextureCube">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXCUBE_SRV TextureCube</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceViewDescription.BufferResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BUFFER_SRV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.BufferResource.FirstElement">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FirstElement</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.BufferResource.ElementOffset">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ElementOffset</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.BufferResource.ElementCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int NumElements</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.BufferResource.ElementWidth">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ElementWidth</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture1DResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_SRV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture1DResource.MostDetailedMip">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MostDetailedMip</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture1DResource.MipLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipLevels</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture1DArrayResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_ARRAY_SRV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture1DArrayResource.MostDetailedMip">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MostDetailedMip</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture1DArrayResource.MipLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipLevels</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture1DArrayResource.FirstArraySlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FirstArraySlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture1DArrayResource.ArraySize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ArraySize</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_SRV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DResource.MostDetailedMip">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MostDetailedMip</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DResource.MipLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipLevels</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DArrayResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_ARRAY_SRV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DArrayResource.MostDetailedMip">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MostDetailedMip</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DArrayResource.MipLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipLevels</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DArrayResource.FirstArraySlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FirstArraySlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DArrayResource.ArraySize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ArraySize</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture3DResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX3D_SRV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture3DResource.MostDetailedMip">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MostDetailedMip</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture3DResource.MipLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipLevels</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceViewDescription.TextureCubeResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXCUBE_SRV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.TextureCubeResource.MostDetailedMip">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MostDetailedMip</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.TextureCubeResource.MipLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipLevels</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DMultisampledResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_SRV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DMultisampledResource.UnusedFieldNothingToDefine">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int UnusedField_NothingToDefine</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DMultisampledArrayResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_ARRAY_SRV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DMultisampledArrayResource.FirstArraySlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FirstArraySlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription.Texture2DMultisampledArrayResource.ArraySize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ArraySize</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RenderTargetViewDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RENDER_TARGET_VIEW_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Format">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Dimension">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RTV_DIMENSION ViewDimension</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Buffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BUFFER_RTV Buffer</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture1D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_RTV Texture1D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture1DArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_ARRAY_RTV Texture1DArray</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_RTV Texture2D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_ARRAY_RTV Texture2DArray</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DMS">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_RTV Texture2DMS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DMSArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_ARRAY_RTV Texture2DMSArray</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture3D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX3D_RTV Texture3D</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RenderTargetViewDescription.BufferResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BUFFER_RTV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.BufferResource.FirstElement">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FirstElement</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.BufferResource.ElementOffset">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ElementOffset</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.BufferResource.ElementCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int NumElements</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.BufferResource.ElementWidth">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ElementWidth</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RenderTargetViewDescription.Texture1DResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_RTV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture1DResource.MipSlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipSlice</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RenderTargetViewDescription.Texture1DArrayResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_ARRAY_RTV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture1DArrayResource.MipSlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipSlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture1DArrayResource.FirstArraySlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FirstArraySlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture1DArrayResource.ArraySize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ArraySize</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_RTV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DResource.MipSlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipSlice</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DMultisampledResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_RTV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DMultisampledResource.UnusedFieldNothingToDefine">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int UnusedField_NothingToDefine</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DArrayResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_ARRAY_RTV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DArrayResource.MipSlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipSlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DArrayResource.FirstArraySlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FirstArraySlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DArrayResource.ArraySize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ArraySize</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DMultisampledArrayResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_ARRAY_RTV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DMultisampledArrayResource.FirstArraySlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FirstArraySlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture2DMultisampledArrayResource.ArraySize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ArraySize</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RenderTargetViewDescription.Texture3DResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX3D_RTV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture3DResource.MipSlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipSlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture3DResource.FirstDepthSlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FirstWSlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDescription.Texture3DResource.DepthSliceCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int WSize</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthStencilViewDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEPTH_STENCIL_VIEW_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Format">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Dimension">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DSV_DIMENSION ViewDimension</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture1D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_DSV Texture1D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture1DArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_ARRAY_DSV Texture1DArray</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_DSV Texture2D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_ARRAY_DSV Texture2DArray</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DMS">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_DSV Texture2DMS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DMSArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_ARRAY_DSV Texture2DMSArray</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthStencilViewDescription.Texture1DResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_DSV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture1DResource.MipSlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipSlice</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthStencilViewDescription.Texture1DArrayResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_ARRAY_DSV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture1DArrayResource.MipSlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipSlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture1DArrayResource.FirstArraySlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FirstArraySlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture1DArrayResource.ArraySize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ArraySize</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_DSV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DResource.MipSlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipSlice</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DArrayResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_ARRAY_DSV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DArrayResource.MipSlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipSlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DArrayResource.FirstArraySlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FirstArraySlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DArrayResource.ArraySize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ArraySize</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DMultisampledResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_DSV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DMultisampledResource.UnusedFieldNothingToDefine">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int UnusedField_NothingToDefine</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DMultisampledArrayResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_ARRAY_DSV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DMultisampledArrayResource.FirstArraySlice">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FirstArraySlice</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDescription.Texture2DMultisampledArrayResource.ArraySize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ArraySize</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.SamplerStateDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_SAMPLER_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SamplerStateDescription.Filter">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER Filter</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SamplerStateDescription.AddressU">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURE_ADDRESS_MODE AddressU</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SamplerStateDescription.AddressV">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURE_ADDRESS_MODE AddressV</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SamplerStateDescription.AddressW">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURE_ADDRESS_MODE AddressW</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SamplerStateDescription.MipLodBias">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float MipLODBias</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SamplerStateDescription.MaximumAnisotropy">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MaxAnisotropy</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SamplerStateDescription.ComparisonFunction">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COMPARISON_FUNC ComparisonFunc</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SamplerStateDescription.BorderColor">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>SHARPDX_COLOR4 BorderColor</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SamplerStateDescription.MinimumLod">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float MinLOD</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SamplerStateDescription.MaximumLod">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float MaxLOD</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.QueryDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryDescription.Type">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY Query</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryDescription.Flags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_MISC_FLAG MiscFlags</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.QueryDataTimestampDisjoint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_DATA_TIMESTAMP_DISJOINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryDataTimestampDisjoint.Frequency">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>__int64 Frequency</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.QueryDataTimestampDisjoint.Disjoint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL Disjoint</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.QueryDataPipelineStatistics">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_DATA_PIPELINE_STATISTICS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryDataPipelineStatistics.IAVerticeCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>__int64 IAVertices</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryDataPipelineStatistics.IAPrimitiveCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>__int64 IAPrimitives</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryDataPipelineStatistics.VSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>__int64 VSInvocations</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryDataPipelineStatistics.GSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>__int64 GSInvocations</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryDataPipelineStatistics.GSPrimitiveCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>__int64 GSPrimitives</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryDataPipelineStatistics.CInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>__int64 CInvocations</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryDataPipelineStatistics.CPrimitiveCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>__int64 CPrimitives</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryDataPipelineStatistics.PSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>__int64 PSInvocations</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.StreamOutputStatistics">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_DATA_SO_STATISTICS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StreamOutputStatistics.NumPrimitivesWritten">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>__int64 NumPrimitivesWritten</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StreamOutputStatistics.PrimitivesStorageNeeded">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>__int64 PrimitivesStorageNeeded</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.CounterDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterDescription.Counter">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER Counter</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterDescription.MiscFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MiscFlags</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.CounterCapabilities">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_INFO</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterCapabilities.LastDeviceDependentCounter">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER LastDeviceDependentCounter</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterCapabilities.SimultaneousCounterCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int NumSimultaneousCounters</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterCapabilities.DetectableParallelUnitCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>byte NumDetectableParallelUnits</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderBufferDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_SHADER_BUFFER_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderBufferDescription.Name">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>const char* Name</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderBufferDescription.Type">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CBUFFER_TYPE Type</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderBufferDescription.VariableCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Variables</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderBufferDescription.Size">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Size</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderBufferDescription.Flags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D_SHADER_CBUFFER_FLAGS uFlags</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderParameterDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_SIGNATURE_PARAMETER_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderParameterDescription.SemanticName">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>const char* SemanticName</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderParameterDescription.SemanticIndex">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int SemanticIndex</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderParameterDescription.Register">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Register</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderParameterDescription.SystemValueType">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_NAME SystemValueType</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderParameterDescription.ComponentType">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_REGISTER_COMPONENT_TYPE ComponentType</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderParameterDescription.Mask">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>byte Mask</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderParameterDescription.ReadWriteMask">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>byte ReadWriteMask</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.StateBlockMask">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STATE_BLOCK_MASK</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.Vs">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool VS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.Gs">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool GS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.Ps">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool PS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.IAIndexBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool IAIndexBuffer</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.IAInputLayout">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool IAInputLayout</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.IAPrimitiveTopology">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool IAPrimitiveTopology</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.OMRenderTargets">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool OMRenderTargets</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.OMDepthStencilState">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool OMDepthStencilState</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.OMBlendState">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool OMBlendState</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.RSViewports">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool RSViewports</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.RSScissorRects">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool RSScissorRects</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.RSRasterizerState">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool RSRasterizerState</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.SOBuffers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool SOBuffers</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StateBlockMask.Predication">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool Predication</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.StateBlockMask.VSSamplers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool VSSamplers[2.875]</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.StateBlockMask.VSShaderResources">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool VSShaderResources[16.875]</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.StateBlockMask.VSConstantBuffers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool VSConstantBuffers[2.625]</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.StateBlockMask.GSSamplers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool GSSamplers[2.875]</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.StateBlockMask.GSShaderResources">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool GSShaderResources[16.875]</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.StateBlockMask.GSConstantBuffers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool GSConstantBuffers[2.625]</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.StateBlockMask.PSSamplers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool PSSamplers[2.875]</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.StateBlockMask.PSShaderResources">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool PSShaderResources[16.875]</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.StateBlockMask.PSConstantBuffers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool PSConstantBuffers[2.625]</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.StateBlockMask.IAVertexBuffers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>bool IAVertexBuffers[2.875]</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectTypeDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_EFFECT_TYPE_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectTypeDescription.TypeName">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>const char* TypeName</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectTypeDescription.Class">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_SHADER_VARIABLE_CLASS Class</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectTypeDescription.Type">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_SHADER_VARIABLE_TYPE Type</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectTypeDescription.Elements">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Elements</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectTypeDescription.Members">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Members</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectTypeDescription.Rows">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Rows</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectTypeDescription.Columns">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Columns</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectTypeDescription.PackedSize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int PackedSize</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectTypeDescription.UnpackedSize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int UnpackedSize</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectTypeDescription.Stride">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Stride</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectVariableDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_EFFECT_VARIABLE_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectVariableDescription.Name">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>const char* Name</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectVariableDescription.Semantic">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>const char* Semantic</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectVariableDescription.Flags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_EFFECT_VARIABLE_FLAGS Flags</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectVariableDescription.AnnotationCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Annotations</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectVariableDescription.BufferOffset">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int BufferOffset</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectVariableDescription.ExplicitBindPoint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ExplicitBindPoint</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectPassDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_PASS_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectPassDescription.Name">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>const char* Name</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectPassDescription.AnnotationCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Annotations</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectPassDescription.PIAInputSignature">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>byte* pIAInputSignature</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectPassDescription.IAInputSignatureSize">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>SIZE_T IAInputSignatureSize</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectPassDescription.StencilReference">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int StencilRef</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectPassDescription.SampleMask">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int SampleMask</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectPassDescription.BlendFactor">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>SHARPDX_COLOR4 BlendFactor</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectPassDescription.Signature">
            <summary>
            Returns the signature of this Effect pass.
            </summary>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectTechniqueDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TECHNIQUE_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectTechniqueDescription.Name">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>const char* Name</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectTechniqueDescription.PassCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Passes</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectTechniqueDescription.AnnotationCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Annotations</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_EFFECT_DESC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectDescription.ConstantBufferCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int ConstantBuffers</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectDescription.SharedConstantBufferCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int SharedConstantBuffers</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectDescription.GlobalVariableCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int GlobalVariables</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectDescription.SharedGlobalVariableCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int SharedGlobalVariables</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectDescription.TechniqueCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Techniques</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.EffectDescription.IsChildEffect">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL IsChildEffect</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RenderTargetBlendDescription1">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RENDER_TARGET_BLEND_DESC1</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetBlendDescription1.SourceBlend">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND SrcBlend</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetBlendDescription1.DestinationBlend">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND DestBlend</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetBlendDescription1.BlendOperation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_OP BlendOp</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetBlendDescription1.SourceAlphaBlend">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND SrcBlendAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetBlendDescription1.DestinationAlphaBlend">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND DestBlendAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetBlendDescription1.AlphaBlendOperation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_OP BlendOpAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetBlendDescription1.RenderTargetWriteMask">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COLOR_WRITE_ENABLE RenderTargetWriteMask</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.RenderTargetBlendDescription1.IsBlendEnabled">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL BlendEnable</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.BlendStateDescription1">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_DESC1</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.BlendStateDescription1.IsAlphaToCoverageEnabled">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL AlphaToCoverageEnable</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.BlendStateDescription1.IndependentBlendEnable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL IndependentBlendEnable</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.BlendStateDescription1.RenderTarget">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RENDER_TARGET_BLEND_DESC1 RenderTarget[8]</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceViewDescription1">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_SHADER_RESOURCE_VIEW_DESC1</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.Format">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.Dimension">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_SRV_DIMENSION1 ViewDimension</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.Buffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BUFFER_SRV Buffer</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.Texture1D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_SRV Texture1D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.Texture1DArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX1D_ARRAY_SRV Texture1DArray</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_SRV Texture2D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.Texture2DArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2D_ARRAY_SRV Texture2DArray</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.Texture2DMS">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_SRV Texture2DMS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.Texture2DMSArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX2DMS_ARRAY_SRV Texture2DMSArray</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.Texture3D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEX3D_SRV Texture3D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.TextureCube">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXCUBE_SRV TextureCube</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.TextureCubeArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXCUBE_ARRAY_SRV1 TextureCubeArray</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ShaderResourceViewDescription1.TextureCubeArrayResource1">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXCUBE_ARRAY_SRV1</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.TextureCubeArrayResource1.MostDetailedMip">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MostDetailedMip</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.TextureCubeArrayResource1.MipLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipLevels</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.TextureCubeArrayResource1.First2DArrayFace">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int First2DArrayFace</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ShaderResourceViewDescription1.TextureCubeArrayResource1.CubeCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int NumCubes</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.FontDescription">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FONT_DESCW</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDescription.Height">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Height</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDescription.Width">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int Width</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDescription.Weight">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FONT_WEIGHT Weight</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDescription.MipLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int MipLevels</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDescription.CharacterSet">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FONT_CHARSET CharSet</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDescription.OutputPrecision">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FONT_PRECISION OutputPrecision</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDescription.Quality">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FONT_QUALITY Quality</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDescription.PitchAndFamily">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FONT_PITCHFAMILY PitchAndFamily</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontDescription.FaceName">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>wchar_t FaceName[32]</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.FontDescription.Italic">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL Italic</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.MeshAttributeRange">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_ATTRIBUTE_RANGE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshAttributeRange.Id">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int AttribId</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshAttributeRange.FaceStart">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FaceStart</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshAttributeRange.FaceCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int FaceCount</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshAttributeRange.VertexStart">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int VertexStart</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshAttributeRange.VertexCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int VertexCount</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.SkinningChannel">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_SKINNING_CHANNEL</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SkinningChannel.SourceOffset">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int SrcOffset</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SkinningChannel.DestinationOffset">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>int DestOffset</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.SkinningChannel.IsNormal">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>BOOL IsNormal</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.MeshAttributeWeights">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_ATTRIBUTE_WEIGHTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshAttributeWeights.Position">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float Position</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshAttributeWeights.Boundary">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float Boundary</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshAttributeWeights.Normal">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float Normal</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshAttributeWeights.Diffuse">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float Diffuse</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshAttributeWeights.Specular">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float Specular</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshAttributeWeights.Tangent">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float Tangent</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshAttributeWeights.Binormal">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float Binormal</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D10.MeshAttributeWeights.Texcoord">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>float Texcoord[8]</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.InputClassification">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_INPUT_CLASSIFICATION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.InputClassification.PerVertexData">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_INPUT_PER_VERTEX_DATA</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.InputClassification.PerInstanceData">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_INPUT_PER_INSTANCE_DATA</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.FillMode">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILL_MODE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FillMode.Wireframe">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILL_WIREFRAME</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FillMode.Solid">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILL_SOLID</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.CullMode">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CULL_MODE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CullMode.None">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CULL_NONE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CullMode.Front">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CULL_FRONT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CullMode.Back">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CULL_BACK</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ResourceDimension">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceDimension.Unknown">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_DIMENSION_UNKNOWN</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceDimension.Buffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_DIMENSION_BUFFER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceDimension.Texture1D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_DIMENSION_TEXTURE1D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceDimension.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_DIMENSION_TEXTURE2D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceDimension.Texture3D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_DIMENSION_TEXTURE3D</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthStencilViewDimension">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DSV_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDimension.Unknown">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DSV_DIMENSION_UNKNOWN</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDimension.Texture1D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DSV_DIMENSION_TEXTURE1D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDimension.Texture1DArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DSV_DIMENSION_TEXTURE1DARRAY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDimension.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DSV_DIMENSION_TEXTURE2D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDimension.Texture2DArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DSV_DIMENSION_TEXTURE2DARRAY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDimension.Texture2DMultisampled">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DSV_DIMENSION_TEXTURE2DMS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilViewDimension.Texture2DMultisampledArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DSV_DIMENSION_TEXTURE2DMSARRAY</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.RenderTargetViewDimension">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RTV_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDimension.Unknown">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RTV_DIMENSION_UNKNOWN</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDimension.Buffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RTV_DIMENSION_BUFFER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDimension.Texture1D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RTV_DIMENSION_TEXTURE1D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDimension.Texture1DArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RTV_DIMENSION_TEXTURE1DARRAY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDimension.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RTV_DIMENSION_TEXTURE2D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDimension.Texture2DArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RTV_DIMENSION_TEXTURE2DARRAY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDimension.Texture2DMultisampled">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RTV_DIMENSION_TEXTURE2DMS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDimension.Texture2DMultisampledArray">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RTV_DIMENSION_TEXTURE2DMSARRAY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.RenderTargetViewDimension.Texture3D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RTV_DIMENSION_TEXTURE3D</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ResourceUsage">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_USAGE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceUsage.Default">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_USAGE_DEFAULT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceUsage.Immutable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_USAGE_IMMUTABLE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceUsage.Dynamic">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_USAGE_DYNAMIC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceUsage.Staging">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_USAGE_STAGING</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.BindFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BIND_FLAG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BindFlags.VertexBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BIND_VERTEX_BUFFER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BindFlags.IndexBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BIND_INDEX_BUFFER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BindFlags.ConstantBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BIND_CONSTANT_BUFFER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BindFlags.ShaderResource">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BIND_SHADER_RESOURCE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BindFlags.StreamOutput">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BIND_STREAM_OUTPUT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BindFlags.RenderTarget">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BIND_RENDER_TARGET</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BindFlags.DepthStencil">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BIND_DEPTH_STENCIL</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BindFlags.None">
            <summary>	
            None.	
            </summary>	
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.CpuAccessFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CPU_ACCESS_FLAG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CpuAccessFlags.Write">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CPU_ACCESS_WRITE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CpuAccessFlags.Read">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CPU_ACCESS_READ</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CpuAccessFlags.None">
            <summary>	
            None.	
            </summary>	
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ResourceOptionFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_MISC_FLAG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceOptionFlags.GenerateMipMaps">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_MISC_GENERATE_MIPS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceOptionFlags.Shared">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_MISC_SHARED</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceOptionFlags.TextureCube">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_MISC_TEXTURECUBE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceOptionFlags.SharedKeyedmutex">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_MISC_SHARED_KEYEDMUTEX</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceOptionFlags.GdiCompatible">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_RESOURCE_MISC_GDI_COMPATIBLE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ResourceOptionFlags.None">
            <summary>	
            None.	
            </summary>	
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.MapMode">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_MAP</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MapMode.Read">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_MAP_READ</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MapMode.Write">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_MAP_WRITE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MapMode.ReadWrite">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_MAP_READ_WRITE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MapMode.WriteDiscard">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_MAP_WRITE_DISCARD</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MapMode.WriteNoOverwrite">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_MAP_WRITE_NO_OVERWRITE</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.MapFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_MAP_FLAG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MapFlags.DoNotWait">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_MAP_FLAG_DO_NOT_WAIT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MapFlags.None">
            <summary>	
            None.	
            </summary>	
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthStencilClearFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CLEAR_FLAG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilClearFlags.Depth">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CLEAR_DEPTH</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthStencilClearFlags.Stencil">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CLEAR_STENCIL</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Comparison">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COMPARISON_FUNC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Comparison.Never">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COMPARISON_NEVER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Comparison.Less">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COMPARISON_LESS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Comparison.Equal">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COMPARISON_EQUAL</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Comparison.LessEqual">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COMPARISON_LESS_EQUAL</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Comparison.Greater">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COMPARISON_GREATER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Comparison.NotEqual">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COMPARISON_NOT_EQUAL</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Comparison.GreaterEqual">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COMPARISON_GREATER_EQUAL</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Comparison.Always">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COMPARISON_ALWAYS</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DepthWriteMask">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEPTH_WRITE_MASK</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthWriteMask.Zero">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEPTH_WRITE_MASK_ZERO</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DepthWriteMask.All">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEPTH_WRITE_MASK_ALL</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.StencilOperation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STENCIL_OP</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StencilOperation.Keep">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STENCIL_OP_KEEP</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StencilOperation.Zero">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STENCIL_OP_ZERO</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StencilOperation.Replace">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STENCIL_OP_REPLACE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StencilOperation.IncrementAndClamp">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STENCIL_OP_INCR_SAT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StencilOperation.DecrementAndClamp">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STENCIL_OP_DECR_SAT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StencilOperation.Invert">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STENCIL_OP_INVERT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StencilOperation.Increment">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STENCIL_OP_INCR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StencilOperation.Decrement">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STENCIL_OP_DECR</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.BlendOption">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.Zero">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_ZERO</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.One">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_ONE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.SourceColor">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_SRC_COLOR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.InverseSourceColor">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_INV_SRC_COLOR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.SourceAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_SRC_ALPHA</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.InverseSourceAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_INV_SRC_ALPHA</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.DestinationAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_DEST_ALPHA</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.InverseDestinationAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_INV_DEST_ALPHA</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.DestinationColor">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_DEST_COLOR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.InverseDestinationColor">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_INV_DEST_COLOR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.SourceAlphaSaturate">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_SRC_ALPHA_SAT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.BlendFactor">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_BLEND_FACTOR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.InverseBlendFactor">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_INV_BLEND_FACTOR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.SecondarySourceColor">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_SRC1_COLOR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.InverseSecondarySourceColor">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_INV_SRC1_COLOR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.SecondarySourceAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_SRC1_ALPHA</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOption.InverseSecondarySourceAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_INV_SRC1_ALPHA</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.BlendOperation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_OP</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOperation.Add">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_OP_ADD</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOperation.Subtract">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_OP_SUBTRACT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOperation.ReverseSubtract">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_OP_REV_SUBTRACT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOperation.Minimum">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_OP_MIN</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.BlendOperation.Maximum">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_BLEND_OP_MAX</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ColorWriteMaskFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COLOR_WRITE_ENABLE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ColorWriteMaskFlags.Red">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COLOR_WRITE_ENABLE_RED</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ColorWriteMaskFlags.Green">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COLOR_WRITE_ENABLE_GREEN</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ColorWriteMaskFlags.Blue">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COLOR_WRITE_ENABLE_BLUE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ColorWriteMaskFlags.Alpha">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COLOR_WRITE_ENABLE_ALPHA</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ColorWriteMaskFlags.All">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COLOR_WRITE_ENABLE_ALL</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.TextureCubeFace">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURECUBE_FACE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureCubeFace.PositiveX">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURECUBE_FACE_POSITIVE_X</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureCubeFace.NegativeX">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURECUBE_FACE_NEGATIVE_X</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureCubeFace.PositiveY">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURECUBE_FACE_POSITIVE_Y</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureCubeFace.NegativeY">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURECUBE_FACE_NEGATIVE_Y</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureCubeFace.PositiveZ">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURECUBE_FACE_POSITIVE_Z</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureCubeFace.NegativeZ">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURECUBE_FACE_NEGATIVE_Z</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Filter">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.MinMagMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_MIN_MAG_MIP_POINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.MinMagPointMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_MIN_MAG_POINT_MIP_LINEAR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.MinPointMagLinearMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.MinPointMagMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_MIN_POINT_MAG_MIP_LINEAR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.MinLinearMagMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_MIN_LINEAR_MAG_MIP_POINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.MinLinearMagPointMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.MinMagLinearMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_MIN_MAG_LINEAR_MIP_POINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.MinMagMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_MIN_MAG_MIP_LINEAR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_ANISOTROPIC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.ComparisonMinMagMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_COMPARISON_MIN_MAG_MIP_POINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.ComparisonMinMagPointMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.ComparisonMinPointMagLinearMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.ComparisonMinPointMagMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.ComparisonMinLinearMagMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.ComparisonMinLinearMagPointMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.ComparisonMinMagLinearMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.ComparisonMinMagMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.ComparisonAnisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_COMPARISON_ANISOTROPIC</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Filter.Texture1Bit">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_TEXT_1BIT</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.FilterType">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_TYPE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterType.Point">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_TYPE_POINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterType.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FILTER_TYPE_LINEAR</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.TextureAddressMode">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURE_ADDRESS_MODE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureAddressMode.Wrap">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURE_ADDRESS_WRAP</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureAddressMode.Mirror">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURE_ADDRESS_MIRROR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureAddressMode.Clamp">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURE_ADDRESS_CLAMP</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureAddressMode.Border">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURE_ADDRESS_BORDER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.TextureAddressMode.MirrorOnce">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_TEXTURE_ADDRESS_MIRROR_ONCE</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.FormatSupport">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.Buffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_BUFFER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.InputAssemblyVertexBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_IA_VERTEX_BUFFER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.InputAssemblyIndexBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_IA_INDEX_BUFFER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.StreamOutputBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_SO_BUFFER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.Texture1D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_TEXTURE1D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_TEXTURE2D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.Texture3D">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_TEXTURE3D</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.TextureCube">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_TEXTURECUBE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.ShaderLoad">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_SHADER_LOAD</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.ShaderSample">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_SHADER_SAMPLE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.ShaderSampleComparison">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.ShaderSampleMonoText">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.Mip">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_MIP</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.MipAutogen">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_MIP_AUTOGEN</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.RenderTarget">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_RENDER_TARGET</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.Blendable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_BLENDABLE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.DepthStencil">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_DEPTH_STENCIL</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.CpuLockable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_CPU_LOCKABLE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.MultisampleResolve">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.Display">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_DISPLAY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.CastWithinBitLayout">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.MultisampleRendertarget">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.MultisampleLoad">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_MULTISAMPLE_LOAD</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.ShaderGather">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_SHADER_GATHER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FormatSupport.BackBufferCast">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FORMAT_SUPPORT_BACK_BUFFER_CAST</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.AsynchronousFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_ASYNC_GETDATA_FLAG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.AsynchronousFlags.DoNotFlush">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_ASYNC_GETDATA_DONOTFLUSH</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.AsynchronousFlags.None">
            <summary>	
            None.	
            </summary>	
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.QueryType">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryType.Event">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_EVENT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryType.Occlusion">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_OCCLUSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryType.Timestamp">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_TIMESTAMP</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryType.TimestampDisjoint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_TIMESTAMP_DISJOINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryType.PipelineStatistics">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_PIPELINE_STATISTICS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryType.OcclusionPredicate">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_OCCLUSION_PREDICATE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryType.StreamOutputStatistics">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_SO_STATISTICS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryType.StreamOutputOverflowPredicate">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_SO_OVERFLOW_PREDICATE</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.QueryFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_MISC_FLAG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryFlags.Predicatehint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_QUERY_MISC_PREDICATEHINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.QueryFlags.None">
            <summary>	
            None.	
            </summary>	
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.CounterKind">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.GpuIdle">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_GPU_IDLE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.VertexProcessing">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_VERTEX_PROCESSING</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.GeometryProcessing">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_GEOMETRY_PROCESSING</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.PixelProcessing">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_PIXEL_PROCESSING</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.OtherGpuProcessing">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_OTHER_GPU_PROCESSING</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.HostAdapterBandwidthUtilization">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_HOST_ADAPTER_BANDWIDTH_UTILIZATION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.LocalVidmemBandwidthUtilization">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_LOCAL_VIDMEM_BANDWIDTH_UTILIZATION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.VertexThroughputUtilization">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_VERTEX_THROUGHPUT_UTILIZATION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.TriangleSetupThroughputUtilization">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_TRIANGLE_SETUP_THROUGHPUT_UTILIZATION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.FillrateThroughputUtilization">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_FILLRATE_THROUGHPUT_UTILIZATION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.VsMemoryLimited">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_VS_MEMORY_LIMITED</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.VsComputationLimited">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_VS_COMPUTATION_LIMITED</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.GsMemoryLimited">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_GS_MEMORY_LIMITED</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.GsComputationLimited">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_GS_COMPUTATION_LIMITED</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.PsMemoryLimited">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_PS_MEMORY_LIMITED</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.PsComputationLimited">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_PS_COMPUTATION_LIMITED</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.PostTransformCacheHitRate">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_POST_TRANSFORM_CACHE_HIT_RATE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.TextureCacheHitRate">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_TEXTURE_CACHE_HIT_RATE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterKind.DeviceDependent0">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_DEVICE_DEPENDENT_0</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.CounterType">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_TYPE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterType.Float32">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_TYPE_FLOAT32</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterType.Uint16">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_TYPE_UINT16</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterType.Uint32">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_TYPE_UINT32</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.CounterType.Uint64">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_COUNTER_TYPE_UINT64</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DeviceCreationFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CREATE_DEVICE_FLAG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceCreationFlags.Singlethreaded">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CREATE_DEVICE_SINGLETHREADED</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceCreationFlags.Debug">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CREATE_DEVICE_DEBUG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceCreationFlags.SwitchToRef">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CREATE_DEVICE_SWITCH_TO_REF</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceCreationFlags.PreventInternalThreadingOptimizations">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceCreationFlags.AllowNullFromMap">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CREATE_DEVICE_ALLOW_NULL_FROM_MAP</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceCreationFlags.BgraSupport">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CREATE_DEVICE_BGRA_SUPPORT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceCreationFlags.StrictValidation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CREATE_DEVICE_STRICT_VALIDATION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceCreationFlags.None">
            <summary>	
            None.	
            </summary>	
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DebugFeatureFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEBUG_FEATURE_FLAGS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DebugFeatureFlags.FlushPerRender">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEBUG_FEATURE_FLUSH_PER_RENDER_OP</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DebugFeatureFlags.FinishPerRender">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEBUG_FEATURE_FINISH_PER_RENDER_OP</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DebugFeatureFlags.PresentPerRender">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEBUG_FEATURE_PRESENT_PER_RENDER_OP</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DriverType">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DRIVER_TYPE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DriverType.Hardware">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DRIVER_TYPE_HARDWARE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DriverType.Reference">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DRIVER_TYPE_REFERENCE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DriverType.Null">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DRIVER_TYPE_NULL</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DriverType.Software">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DRIVER_TYPE_SOFTWARE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DriverType.Warp">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DRIVER_TYPE_WARP</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.DeviceStateTypes">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DEVICE_STATE_TYPES</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StStreamOutputBuffers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_SO_BUFFERS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StOmRenderTargets">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_OM_RENDER_TARGETS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StOmDepthStencilState">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_OM_DEPTH_STENCIL_STATE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StOmBlendState">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_OM_BLEND_STATE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StVs">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_VS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StVsSamplers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_VS_SAMPLERS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StVsShaderResources">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_VS_SHADER_RESOURCES</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StVsConstantBuffers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_VS_CONSTANT_BUFFERS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StGs">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_GS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StGsSamplers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_GS_SAMPLERS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StGsShaderResources">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_GS_SHADER_RESOURCES</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StGsConstantBuffers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_GS_CONSTANT_BUFFERS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StPs">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_PS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StPsSamplers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_PS_SAMPLERS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StPsShaderResources">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_PS_SHADER_RESOURCES</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StPsConstantBuffers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_PS_CONSTANT_BUFFERS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StInputAssemblyVertexBuffers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_IA_VERTEX_BUFFERS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StInputAssemblyIndexBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_IA_INDEX_BUFFER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StInputAssemblyInputLayout">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_IA_INPUT_LAYOUT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StInputAssemblyPrimitiveTopology">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_IA_PRIMITIVE_TOPOLOGY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StRsViewports">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_RS_VIEWPORTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StRsScissorRects">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_RS_SCISSOR_RECTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StRsRasterizerState">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_RS_RASTERIZER_STATE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.DeviceStateTypes.StPredication">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_DST_PREDICATION</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.EffectVariableFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_EFFECT_VARIABLE_FLAGS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectVariableFlags.Pooled">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>POOLED</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectVariableFlags.Annotation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>ANNOTATION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectVariableFlags.ExplicitBindPoint">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>EXPLICIT_BIND_POINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.EffectVariableFlags.None">
            <summary>	
            None.	
            </summary>	
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.FeatureLevel">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FEATURE_LEVEL1</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FeatureLevel.Level_10_0">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FEATURE_LEVEL_10_0</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FeatureLevel.Level_10_1">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FEATURE_LEVEL_10_1</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FeatureLevel.Level_9_1">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FEATURE_LEVEL_9_1</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FeatureLevel.Level_9_2">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FEATURE_LEVEL_9_2</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FeatureLevel.Level_9_3">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_FEATURE_LEVEL_9_3</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.StandardMultisampleQualityLevels">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STANDARD_MULTISAMPLE_QUALITY_LEVELS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StandardMultisampleQualityLevels.StandardMultisamplePattern">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_STANDARD_MULTISAMPLE_PATTERN</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.StandardMultisampleQualityLevels.CenterMultisamplePattern">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3D10_CENTER_MULTISAMPLE_PATTERN</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.SpriteFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_SPRITE_FLAG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SpriteFlags.GroupByTexture">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_SPRITE_SORT_TEXTURE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SpriteFlags.SortBackToFront">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_SPRITE_SORT_DEPTH_BACK_TO_FRONT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SpriteFlags.SortFrontToBack">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_SPRITE_SORT_DEPTH_FRONT_TO_BACK</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SpriteFlags.SaveState">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_SPRITE_SAVE_STATE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SpriteFlags.IncreaseTextureReferenceCount">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_SPRITE_ADDREF_TEXTURES</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.SpriteFlags.None">
            <summary>	
            None.	
            </summary>	
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.FilterFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_FLAG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.None">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_NONE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.Point">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_POINT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_LINEAR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.Triangle">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_TRIANGLE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.Box">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_BOX</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.MirrorU">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_MIRROR_U</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.MirrorV">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_MIRROR_V</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.MirrorW">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_MIRROR_W</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.Mirror">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_MIRROR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.Dither">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_DITHER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.DitherDiffusion">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_DITHER_DIFFUSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.SRgbIn">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_SRGB_IN</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.SRgbOut">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_SRGB_OUT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FilterFlags.SRgb">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_FILTER_SRGB</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.NormalMapFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_NORMALMAP_FLAG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.NormalMapFlags.MirrorU">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_NORMALMAP_MIRROR_U</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.NormalMapFlags.MirrorV">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_NORMALMAP_MIRROR_V</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.NormalMapFlags.Mirror">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_NORMALMAP_MIRROR</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.NormalMapFlags.Invertsign">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_NORMALMAP_INVERTSIGN</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.NormalMapFlags.ComputeOcclusion">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_NORMALMAP_COMPUTE_OCCLUSION</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.Channel">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_CHANNEL_FLAG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Channel.Red">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_CHANNEL_RED</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Channel.Blue">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_CHANNEL_BLUE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Channel.Green">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_CHANNEL_GREEN</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Channel.Alpha">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_CHANNEL_ALPHA</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Channel.Luminance">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_CHANNEL_LUMINANCE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.Channel.None">
            <summary>	
            None.	
            </summary>	
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.ImageFileFormat">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_IMAGE_FILE_FORMAT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageFileFormat.Bmp">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_IFF_BMP</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageFileFormat.Jpg">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_IFF_JPG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageFileFormat.Png">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_IFF_PNG</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageFileFormat.Dds">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_IFF_DDS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageFileFormat.Tiff">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_IFF_TIFF</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageFileFormat.Gif">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_IFF_GIF</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.ImageFileFormat.Wmp">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_IFF_WMP</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.MeshFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>_D3DX10_MESH</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshFlags.Has32BitIndices">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESH_32_BIT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshFlags.HasAdjacency">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESH_GS_ADJACENCY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshFlags.None">
            <summary>	
            None.	
            </summary>	
            <unmanaged>None</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.MeshDiscardFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESH_DISCARD_FLAGS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshDiscardFlags.AttributeBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESH_DISCARD_ATTRIBUTE_BUFFER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshDiscardFlags.AttributeTable">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESH_DISCARD_ATTRIBUTE_TABLE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshDiscardFlags.PointRepresentation">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESH_DISCARD_POINTREPS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshDiscardFlags.Adjacency">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESH_DISCARD_ADJACENCY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshDiscardFlags.DeviceBuffers">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESH_DISCARD_DEVICE_BUFFERS</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.MeshOptimizeFlags">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>_D3DX10_MESHOPT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshOptimizeFlags.Compact">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESHOPT_COMPACT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshOptimizeFlags.AttributeSort">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESHOPT_ATTR_SORT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshOptimizeFlags.VertexCache">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESHOPT_VERTEX_CACHE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshOptimizeFlags.StripReorder">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESHOPT_STRIP_REORDER</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshOptimizeFlags.IgnoreVertices">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESHOPT_IGNORE_VERTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshOptimizeFlags.DoNotSplit">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESHOPT_DO_NOT_SPLIT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.MeshOptimizeFlags.DeviceIndependent">
            <summary>	
            No documentation.	
            </summary>	
            <unmanaged>D3DX10_MESHOPT_DEVICE_INDEPENDENT</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.D3D10">
            <summary>
            D3D10 Functions.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.D3D10.SdkVersion">
            <summary>Constant None.</summary>
        </member>
        <member name="F:SharpDX.Direct3D10.D3D10.SdkVersion1">
            <summary>Constant None.</summary>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.#cctor">
            <summary>
            Load DLLs and bind functions
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,System.Int32,SharpDX.Direct3D10.Device@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="adapterRef">No documentation.</param>
            <param name="driverType">No documentation.</param>
            <param name="software">No documentation.</param>
            <param name="flags">No documentation.</param>
            <param name="sDKVersion">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10CreateDevice([None] IDXGIAdapter* pAdapter,[None] D3D10_DRIVER_TYPE DriverType,[None] void* Software,[None] D3D10_CREATE_DEVICE_FLAG Flags,[None] int SDKVersion,[Out] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.CreateDeviceAndSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,System.Int32,SharpDX.DXGI.SwapChainDescription@,SharpDX.DXGI.SwapChain@,SharpDX.Direct3D10.Device@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="adapterRef">No documentation.</param>
            <param name="driverType">No documentation.</param>
            <param name="software">No documentation.</param>
            <param name="flags">No documentation.</param>
            <param name="sDKVersion">No documentation.</param>
            <param name="swapChainDescRef">No documentation.</param>
            <param name="swapChainRef">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10CreateDeviceAndSwapChain([None] IDXGIAdapter* pAdapter,[None] D3D10_DRIVER_TYPE DriverType,[None] void* Software,[None] D3D10_CREATE_DEVICE_FLAG Flags,[None] int SDKVersion,[In] DXGI_SWAP_CHAIN_DESC* pSwapChainDesc,[Out] IDXGISwapChain** ppSwapChain,[Out] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.StateBlockMaskUnion(SharpDX.Direct3D10.StateBlockMask@,SharpDX.Direct3D10.StateBlockMask@,SharpDX.Direct3D10.StateBlockMask@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="aRef">No documentation.</param>
            <param name="bRef">No documentation.</param>
            <param name="resultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10StateBlockMaskUnion([None] D3D10_STATE_BLOCK_MASK* pA,[None] D3D10_STATE_BLOCK_MASK* pB,[None] D3D10_STATE_BLOCK_MASK* pResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.StateBlockMaskIntersect(SharpDX.Direct3D10.StateBlockMask@,SharpDX.Direct3D10.StateBlockMask@,SharpDX.Direct3D10.StateBlockMask@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="aRef">No documentation.</param>
            <param name="bRef">No documentation.</param>
            <param name="resultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10StateBlockMaskIntersect([None] D3D10_STATE_BLOCK_MASK* pA,[None] D3D10_STATE_BLOCK_MASK* pB,[None] D3D10_STATE_BLOCK_MASK* pResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.StateBlockMaskDifference(SharpDX.Direct3D10.StateBlockMask@,SharpDX.Direct3D10.StateBlockMask@,SharpDX.Direct3D10.StateBlockMask@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="aRef">No documentation.</param>
            <param name="bRef">No documentation.</param>
            <param name="resultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10StateBlockMaskDifference([None] D3D10_STATE_BLOCK_MASK* pA,[None] D3D10_STATE_BLOCK_MASK* pB,[None] D3D10_STATE_BLOCK_MASK* pResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.StateBlockMaskEnableCapture(SharpDX.Direct3D10.StateBlockMask@,SharpDX.Direct3D10.DeviceStateTypes,System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="maskRef">No documentation.</param>
            <param name="stateType">No documentation.</param>
            <param name="rangeStart">No documentation.</param>
            <param name="rangeLength">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10StateBlockMaskEnableCapture([None] D3D10_STATE_BLOCK_MASK* pMask,[None] D3D10_DEVICE_STATE_TYPES StateType,[None] int RangeStart,[None] int RangeLength)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.StateBlockMaskDisableCapture(SharpDX.Direct3D10.StateBlockMask@,SharpDX.Direct3D10.DeviceStateTypes,System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="maskRef">No documentation.</param>
            <param name="stateType">No documentation.</param>
            <param name="rangeStart">No documentation.</param>
            <param name="rangeLength">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10StateBlockMaskDisableCapture([None] D3D10_STATE_BLOCK_MASK* pMask,[None] D3D10_DEVICE_STATE_TYPES StateType,[None] int RangeStart,[None] int RangeLength)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.StateBlockMaskEnableAll(SharpDX.Direct3D10.StateBlockMask@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="maskRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10StateBlockMaskEnableAll([None] D3D10_STATE_BLOCK_MASK* pMask)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.StateBlockMaskDisableAll(SharpDX.Direct3D10.StateBlockMask@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="maskRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10StateBlockMaskDisableAll([None] D3D10_STATE_BLOCK_MASK* pMask)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.StateBlockMaskGetSetting(SharpDX.Direct3D10.StateBlockMask@,SharpDX.Direct3D10.DeviceStateTypes,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="maskRef">No documentation.</param>
            <param name="stateType">No documentation.</param>
            <param name="entry">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>BOOL D3D10StateBlockMaskGetSetting([None] D3D10_STATE_BLOCK_MASK* pMask,[None] D3D10_DEVICE_STATE_TYPES StateType,[None] int Entry)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.CreateStateBlock(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.StateBlockMask@,SharpDX.Direct3D10.StateBlock@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <param name="stateBlockMaskRef">No documentation.</param>
            <param name="stateBlockRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10CreateStateBlock([None] ID3D10Device* pDevice,[None] D3D10_STATE_BLOCK_MASK* pStateBlockMask,[None] ID3D10StateBlock** ppStateBlock)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.CreateEffectFromMemory(System.IntPtr,SharpDX.Size,System.Int32,SharpDX.Direct3D10.Device,SharpDX.Direct3D10.EffectPool,System.IntPtr@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="dataLength">No documentation.</param>
            <param name="fXFlags">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <param name="effectPoolRef">No documentation.</param>
            <param name="effectRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10CreateEffectFromMemory([None] void* pData,[None] SIZE_T DataLength,[None] int FXFlags,[None] ID3D10Device* pDevice,[None] ID3D10EffectPool* pEffectPool,[Out] ID3D10Effect** ppEffect)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.CreateEffectPoolFromMemory(System.IntPtr,SharpDX.Size,System.Int32,SharpDX.Direct3D10.Device,SharpDX.Direct3D10.EffectPool@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="dataLength">No documentation.</param>
            <param name="fXFlags">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <param name="effectPoolRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10CreateEffectPoolFromMemory([None] void* pData,[None] SIZE_T DataLength,[None] int FXFlags,[None] ID3D10Device* pDevice,[None] ID3D10EffectPool** ppEffectPool)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.CreateDevice1(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.Direct3D10.FeatureLevel,System.Int32,SharpDX.Direct3D10.Device1@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="adapterRef">No documentation.</param>
            <param name="driverType">No documentation.</param>
            <param name="software">No documentation.</param>
            <param name="flags">No documentation.</param>
            <param name="hardwareLevel">No documentation.</param>
            <param name="sDKVersion">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10CreateDevice1([None] IDXGIAdapter* pAdapter,[None] D3D10_DRIVER_TYPE DriverType,[None] void* Software,[None] D3D10_CREATE_DEVICE_FLAG Flags,[None] D3D10_FEATURE_LEVEL1 HardwareLevel,[None] int SDKVersion,[Out] ID3D10Device1** ppDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3D10.CreateDeviceAndSwapChain1(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,SharpDX.Direct3D10.DeviceCreationFlags,SharpDX.Direct3D10.FeatureLevel,System.Int32,SharpDX.DXGI.SwapChainDescription@,SharpDX.DXGI.SwapChain@,SharpDX.Direct3D10.Device1@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="adapterRef">No documentation.</param>
            <param name="driverType">No documentation.</param>
            <param name="software">No documentation.</param>
            <param name="flags">No documentation.</param>
            <param name="hardwareLevel">No documentation.</param>
            <param name="sDKVersion">No documentation.</param>
            <param name="swapChainDescRef">No documentation.</param>
            <param name="swapChainRef">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3D10CreateDeviceAndSwapChain1([None] IDXGIAdapter* pAdapter,[None] D3D10_DRIVER_TYPE DriverType,[None] void* Software,[None] D3D10_CREATE_DEVICE_FLAG Flags,[None] D3D10_FEATURE_LEVEL1 HardwareLevel,[None] int SDKVersion,[None] DXGI_SWAP_CHAIN_DESC* pSwapChainDesc,[Out] IDXGISwapChain** ppSwapChain,[Out] ID3D10Device1** ppDevice)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.D3DX10">
            <summary>
            D3DX10 Functions.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.#cctor">
            <summary>
            Load DLLs and bind functions
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,System.Int32,SharpDX.Direct3D10.Device@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="adapterRef">No documentation.</param>
            <param name="driverType">No documentation.</param>
            <param name="software">No documentation.</param>
            <param name="flags">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateDevice([None] IDXGIAdapter* pAdapter,[None] D3D10_DRIVER_TYPE DriverType,[None] void* Software,[None] int Flags,[None] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateDeviceAndSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D10.DriverType,System.IntPtr,System.Int32,SharpDX.DXGI.SwapChainDescription@,SharpDX.DXGI.SwapChain@,SharpDX.Direct3D10.Device@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="adapterRef">No documentation.</param>
            <param name="driverType">No documentation.</param>
            <param name="software">No documentation.</param>
            <param name="flags">No documentation.</param>
            <param name="swapChainDescRef">No documentation.</param>
            <param name="swapChainRef">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateDeviceAndSwapChain([None] IDXGIAdapter* pAdapter,[None] D3D10_DRIVER_TYPE DriverType,[None] void* Software,[None] int Flags,[None] DXGI_SWAP_CHAIN_DESC* pSwapChainDesc,[None] IDXGISwapChain** ppSwapChain,[None] ID3D10Device** ppDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.GetFeatureLevel1(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.Device1@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <param name="device1Ref">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10GetFeatureLevel1([None] ID3D10Device* pDevice,[None] ID3D10Device1** ppDevice1)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CheckVersion(System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="d3DSdkVersion">No documentation.</param>
            <param name="d3DX10SdkVersion">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CheckVersion([None] int D3DSdkVersion,[None] int D3DX10SdkVersion)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateSprite(SharpDX.Direct3D10.Device,System.Int32,SharpDX.Direct3D10.Sprite@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <param name="cDeviceBufferSize">No documentation.</param>
            <param name="spriteRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateSprite([None] ID3D10Device* pDevice,[None] int cDeviceBufferSize,[None] LPD3DX10SPRITE* ppSprite)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateFont(SharpDX.Direct3D10.Device,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.String,SharpDX.Direct3D10.Font@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <param name="height">No documentation.</param>
            <param name="width">No documentation.</param>
            <param name="weight">No documentation.</param>
            <param name="mipLevels">No documentation.</param>
            <param name="italic">No documentation.</param>
            <param name="charSet">No documentation.</param>
            <param name="outputPrecision">No documentation.</param>
            <param name="quality">No documentation.</param>
            <param name="pitchAndFamily">No documentation.</param>
            <param name="faceNameRef">No documentation.</param>
            <param name="fontRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateFontW([None] ID3D10Device* pDevice,[None] int Height,[None] int Width,[None] int Weight,[None] int MipLevels,[None] BOOL Italic,[None] int CharSet,[None] int OutputPrecision,[None] int Quality,[None] int PitchAndFamily,[None] const wchar_t* pFaceName,[None] LPD3DX10FONT* ppFont)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateFontIndirect(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.FontDescription@,SharpDX.Direct3D10.Font@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <param name="descRef">No documentation.</param>
            <param name="fontRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateFontIndirectW([None] ID3D10Device* pDevice,[None] const D3DX10_FONT_DESCW* pDesc,[None] LPD3DX10FONT* ppFont)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.GetImageInfoFromFile(System.String,System.IntPtr,SharpDX.Direct3D10.ImageInformation@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="srcFileRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="srcInfoRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10GetImageInfoFromFileW([None] const wchar_t* pSrcFile,[None] ID3DX10ThreadPump* pPump,[None] D3DX10_IMAGE_INFO* pSrcInfo,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.GetImageInfoFromResource(System.IntPtr,System.String,System.IntPtr,SharpDX.Direct3D10.ImageInformation@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="hSrcModule">No documentation.</param>
            <param name="srcResourceRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="srcInfoRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10GetImageInfoFromResourceW([None] void* hSrcModule,[None] const wchar_t* pSrcResource,[None] ID3DX10ThreadPump* pPump,[None] D3DX10_IMAGE_INFO* pSrcInfo,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.GetImageInfoFromMemory(System.IntPtr,SharpDX.Size,System.IntPtr,SharpDX.Direct3D10.ImageInformation@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="srcDataRef">No documentation.</param>
            <param name="srcDataSize">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="srcInfoRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10GetImageInfoFromMemory([None] const void* pSrcData,[None] SIZE_T SrcDataSize,[None] ID3DX10ThreadPump* pPump,[None] D3DX10_IMAGE_INFO* pSrcInfo,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateShaderResourceViewFromFile(SharpDX.Direct3D10.Device,System.String,System.Nullable{SharpDX.Direct3D10.ImageLoadInformation},System.IntPtr,SharpDX.Direct3D10.ShaderResourceView@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <param name="srcFileRef">No documentation.</param>
            <param name="loadInfoRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="shaderResourceViewRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateShaderResourceViewFromFileW([None] ID3D10Device* pDevice,[None] const wchar_t* pSrcFile,[In, Optional] D3DX10_IMAGE_LOAD_INFO* pLoadInfo,[None] ID3DX10ThreadPump* pPump,[None] ID3D10ShaderResourceView** ppShaderResourceView,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateTextureFromFile(SharpDX.Direct3D10.Device,System.String,System.Nullable{SharpDX.Direct3D10.ImageLoadInformation},System.IntPtr,SharpDX.Direct3D10.Resource@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <param name="srcFileRef">No documentation.</param>
            <param name="loadInfoRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="textureRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateTextureFromFileW([None] ID3D10Device* pDevice,[None] const wchar_t* pSrcFile,[In, Optional] D3DX10_IMAGE_LOAD_INFO* pLoadInfo,[None] ID3DX10ThreadPump* pPump,[Out] ID3D10Resource** ppTexture,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateShaderResourceViewFromResource(SharpDX.Direct3D10.Device,System.IntPtr,System.String,System.Nullable{SharpDX.Direct3D10.ImageLoadInformation},System.IntPtr,SharpDX.Direct3D10.ShaderResourceView@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <param name="hSrcModule">No documentation.</param>
            <param name="srcResourceRef">No documentation.</param>
            <param name="loadInfoRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="shaderResourceViewRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateShaderResourceViewFromResourceW([None] ID3D10Device* pDevice,[None] void* hSrcModule,[None] const wchar_t* pSrcResource,[In, Optional] D3DX10_IMAGE_LOAD_INFO* pLoadInfo,[None] ID3DX10ThreadPump* pPump,[None] ID3D10ShaderResourceView** ppShaderResourceView,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateTextureFromResource(SharpDX.Direct3D10.Device,System.IntPtr,System.String,System.Nullable{SharpDX.Direct3D10.ImageLoadInformation},System.IntPtr,SharpDX.Direct3D10.Resource@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <param name="hSrcModule">No documentation.</param>
            <param name="srcResourceRef">No documentation.</param>
            <param name="loadInfoRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="textureRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateTextureFromResourceW([None] ID3D10Device* pDevice,[None] void* hSrcModule,[None] const wchar_t* pSrcResource,[In, Optional] D3DX10_IMAGE_LOAD_INFO* pLoadInfo,[None] ID3DX10ThreadPump* pPump,[Out] ID3D10Resource** ppTexture,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateShaderResourceViewFromMemory(SharpDX.Direct3D10.Device,System.IntPtr,SharpDX.Size,System.Nullable{SharpDX.Direct3D10.ImageLoadInformation},System.IntPtr,SharpDX.Direct3D10.ShaderResourceView@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <param name="srcDataRef">No documentation.</param>
            <param name="srcDataSize">No documentation.</param>
            <param name="loadInfoRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="shaderResourceViewRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateShaderResourceViewFromMemory([None] ID3D10Device* pDevice,[None] const void* pSrcData,[None] SIZE_T SrcDataSize,[In, Optional] D3DX10_IMAGE_LOAD_INFO* pLoadInfo,[None] ID3DX10ThreadPump* pPump,[None] ID3D10ShaderResourceView** ppShaderResourceView,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateTextureFromMemory(SharpDX.Direct3D10.Device,System.IntPtr,SharpDX.Size,System.Nullable{SharpDX.Direct3D10.ImageLoadInformation},System.IntPtr,SharpDX.Direct3D10.Resource@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <param name="srcDataRef">No documentation.</param>
            <param name="srcDataSize">No documentation.</param>
            <param name="loadInfoRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="textureRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateTextureFromMemory([None] ID3D10Device* pDevice,[None] const void* pSrcData,[None] SIZE_T SrcDataSize,[In, Optional] D3DX10_IMAGE_LOAD_INFO* pLoadInfo,[None] ID3DX10ThreadPump* pPump,[Out] ID3D10Resource** ppTexture,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.LoadTextureFromTexture(SharpDX.Direct3D10.Resource,SharpDX.Direct3D10.TextureLoadInformation@,SharpDX.Direct3D10.Resource)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="srcTextureRef">No documentation.</param>
            <param name="loadInfoRef">No documentation.</param>
            <param name="dstTextureRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10LoadTextureFromTexture([None] ID3D10Resource* pSrcTexture,[None] D3DX10_TEXTURE_LOAD_INFO* pLoadInfo,[None] ID3D10Resource* pDstTexture)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.FilterTexture(SharpDX.Direct3D10.Resource,System.Int32,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="textureRef">No documentation.</param>
            <param name="srcLevel">No documentation.</param>
            <param name="mipFilter">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10FilterTexture([None] ID3D10Resource* pTexture,[None] int SrcLevel,[None] int MipFilter)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.SaveTextureToFile(SharpDX.Direct3D10.Resource,SharpDX.Direct3D10.ImageFileFormat,System.String)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="srcTextureRef">No documentation.</param>
            <param name="destFormat">No documentation.</param>
            <param name="destFileRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10SaveTextureToFileW([None] ID3D10Resource* pSrcTexture,[None] D3DX10_IMAGE_FILE_FORMAT DestFormat,[None] const wchar_t* pDestFile)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.SaveTextureToMemory(SharpDX.Direct3D10.Resource,SharpDX.Direct3D10.ImageFileFormat,SharpDX.Direct3D.Blob@,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="srcTextureRef">No documentation.</param>
            <param name="destFormat">No documentation.</param>
            <param name="destBufRef">No documentation.</param>
            <param name="flags">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10SaveTextureToMemory([None] ID3D10Resource* pSrcTexture,[None] D3DX10_IMAGE_FILE_FORMAT DestFormat,[Out] LPD3D10BLOB* ppDestBuf,[None] int Flags)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.ComputeNormalMap(SharpDX.Direct3D10.Texture2D,SharpDX.Direct3D10.NormalMapFlags,SharpDX.Direct3D10.Channel,System.Single,SharpDX.Direct3D10.Texture2D)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="srcTextureRef">No documentation.</param>
            <param name="flags">No documentation.</param>
            <param name="channel">No documentation.</param>
            <param name="amplitude">No documentation.</param>
            <param name="destTextureRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10ComputeNormalMap([None] ID3D10Texture2D* pSrcTexture,[None] D3DX10_NORMALMAP_FLAG Flags,[None] D3DX10_CHANNEL_FLAG Channel,[None] float Amplitude,[None] ID3D10Texture2D* pDestTexture)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.SHProjectCubeMap(System.Int32,SharpDX.Direct3D10.Texture2D,System.Single[],System.Single[],System.Single[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="order">No documentation.</param>
            <param name="cubeMapRef">No documentation.</param>
            <param name="rOutRef">No documentation.</param>
            <param name="gOutRef">No documentation.</param>
            <param name="bOutRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10SHProjectCubeMap([In] int Order,[None] ID3D10Texture2D* pCubeMap,[Out, Buffer] float* pROut,[Out, Buffer, Optional] float* pGOut,[Out, Buffer, Optional] float* pBOut)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateMesh(SharpDX.Direct3D10.Device,SharpDX.Direct3D10.InputElement[],System.Int32,System.String,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D10.Mesh@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="deviceRef">No documentation.</param>
            <param name="declarationRef">No documentation.</param>
            <param name="declCount">No documentation.</param>
            <param name="ositionSemanticRef">No documentation.</param>
            <param name="vertexCount">No documentation.</param>
            <param name="faceCount">No documentation.</param>
            <param name="options">No documentation.</param>
            <param name="meshRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateMesh([None] ID3D10Device* pDevice,[In, Buffer] const D3D10_INPUT_ELEMENT_DESC* pDeclaration,[None] int DeclCount,[None] const char* pPositionSemantic,[None] int VertexCount,[None] int FaceCount,[None] int Options,[None] ID3DX10Mesh** ppMesh)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateSkinInfo(SharpDX.Direct3D10.SkinInfo@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="skinInfoRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateSkinInfo([None] LPD3DX10SKININFO* ppSkinInfo)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateEffectFromFile(System.String,SharpDX.Direct3D.ShaderMacro[],System.IntPtr,System.String,System.Int32,System.Int32,SharpDX.Direct3D10.Device,SharpDX.Direct3D10.EffectPool,System.IntPtr,System.IntPtr,SharpDX.Direct3D.Blob@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="fileNameRef">No documentation.</param>
            <param name="definesRef">No documentation.</param>
            <param name="includeRef">No documentation.</param>
            <param name="rofileRef">No documentation.</param>
            <param name="hLSLFlags">No documentation.</param>
            <param name="fXFlags">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <param name="effectPoolRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="effectRef">No documentation.</param>
            <param name="errorsRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateEffectFromFileW([None] const wchar_t* pFileName,[In, Buffer, Optional] const D3D10_SHADER_MACRO* pDefines,[None] ID3D10Include* pInclude,[None] const char* pProfile,[None] int HLSLFlags,[None] int FXFlags,[None] ID3D10Device* pDevice,[None] ID3D10EffectPool* pEffectPool,[None] ID3DX10ThreadPump* pPump,[None] ID3D10Effect** ppEffect,[None] ID3D10Blob** ppErrors,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateEffectFromMemory(System.IntPtr,SharpDX.Size,System.String,SharpDX.Direct3D.ShaderMacro[],System.IntPtr,System.String,System.Int32,System.Int32,SharpDX.Direct3D10.Device,SharpDX.Direct3D10.EffectPool,System.IntPtr,System.IntPtr,SharpDX.Direct3D.Blob@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="dataLength">No documentation.</param>
            <param name="srcFileNameRef">No documentation.</param>
            <param name="definesRef">No documentation.</param>
            <param name="includeRef">No documentation.</param>
            <param name="rofileRef">No documentation.</param>
            <param name="hLSLFlags">No documentation.</param>
            <param name="fXFlags">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <param name="effectPoolRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="effectRef">No documentation.</param>
            <param name="errorsRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateEffectFromMemory([None] const void* pData,[None] SIZE_T DataLength,[None] const char* pSrcFileName,[In, Buffer, Optional] const D3D10_SHADER_MACRO* pDefines,[None] ID3D10Include* pInclude,[None] const char* pProfile,[None] int HLSLFlags,[None] int FXFlags,[None] ID3D10Device* pDevice,[None] ID3D10EffectPool* pEffectPool,[None] ID3DX10ThreadPump* pPump,[None] ID3D10Effect** ppEffect,[None] ID3D10Blob** ppErrors,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateEffectFromResource(System.IntPtr,System.String,System.String,SharpDX.Direct3D.ShaderMacro[],System.IntPtr,System.String,System.Int32,System.Int32,SharpDX.Direct3D10.Device,SharpDX.Direct3D10.EffectPool,System.IntPtr,System.IntPtr,SharpDX.Direct3D.Blob@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="hModule">No documentation.</param>
            <param name="resourceNameRef">No documentation.</param>
            <param name="srcFileNameRef">No documentation.</param>
            <param name="definesRef">No documentation.</param>
            <param name="includeRef">No documentation.</param>
            <param name="rofileRef">No documentation.</param>
            <param name="hLSLFlags">No documentation.</param>
            <param name="fXFlags">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <param name="effectPoolRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="effectRef">No documentation.</param>
            <param name="errorsRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateEffectFromResourceW([None] void* hModule,[None] const wchar_t* pResourceName,[None] const wchar_t* pSrcFileName,[In, Buffer, Optional] const D3D10_SHADER_MACRO* pDefines,[None] ID3D10Include* pInclude,[None] const char* pProfile,[None] int HLSLFlags,[None] int FXFlags,[None] ID3D10Device* pDevice,[None] ID3D10EffectPool* pEffectPool,[None] ID3DX10ThreadPump* pPump,[None] ID3D10Effect** ppEffect,[None] ID3D10Blob** ppErrors,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateEffectPoolFromFile(System.String,SharpDX.Direct3D.ShaderMacro[],System.IntPtr,System.String,System.Int32,System.Int32,SharpDX.Direct3D10.Device,System.IntPtr,SharpDX.Direct3D10.EffectPool@,SharpDX.Direct3D.Blob@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="fileNameRef">No documentation.</param>
            <param name="definesRef">No documentation.</param>
            <param name="includeRef">No documentation.</param>
            <param name="rofileRef">No documentation.</param>
            <param name="hLSLFlags">No documentation.</param>
            <param name="fXFlags">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="effectPoolRef">No documentation.</param>
            <param name="errorsRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateEffectPoolFromFileW([None] const wchar_t* pFileName,[In, Buffer, Optional] const D3D10_SHADER_MACRO* pDefines,[None] ID3D10Include* pInclude,[None] const char* pProfile,[None] int HLSLFlags,[None] int FXFlags,[None] ID3D10Device* pDevice,[None] ID3DX10ThreadPump* pPump,[None] ID3D10EffectPool** ppEffectPool,[None] ID3D10Blob** ppErrors,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateEffectPoolFromMemory(System.IntPtr,SharpDX.Size,System.String,SharpDX.Direct3D.ShaderMacro[],System.IntPtr,System.String,System.Int32,System.Int32,SharpDX.Direct3D10.Device,System.IntPtr,SharpDX.Direct3D10.EffectPool@,SharpDX.Direct3D.Blob@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dataRef">No documentation.</param>
            <param name="dataLength">No documentation.</param>
            <param name="srcFileNameRef">No documentation.</param>
            <param name="definesRef">No documentation.</param>
            <param name="includeRef">No documentation.</param>
            <param name="rofileRef">No documentation.</param>
            <param name="hLSLFlags">No documentation.</param>
            <param name="fXFlags">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="effectPoolRef">No documentation.</param>
            <param name="errorsRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateEffectPoolFromMemory([None] const void* pData,[None] SIZE_T DataLength,[None] const char* pSrcFileName,[In, Buffer, Optional] const D3D10_SHADER_MACRO* pDefines,[None] ID3D10Include* pInclude,[None] const char* pProfile,[None] int HLSLFlags,[None] int FXFlags,[None] ID3D10Device* pDevice,[None] ID3DX10ThreadPump* pPump,[None] ID3D10EffectPool** ppEffectPool,[None] ID3D10Blob** ppErrors,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D10.D3DX10.CreateEffectPoolFromResource(System.IntPtr,System.String,System.String,SharpDX.Direct3D.ShaderMacro[],System.IntPtr,System.String,System.Int32,System.Int32,SharpDX.Direct3D10.Device,System.IntPtr,SharpDX.Direct3D10.EffectPool@,SharpDX.Direct3D.Blob@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="hModule">No documentation.</param>
            <param name="resourceNameRef">No documentation.</param>
            <param name="srcFileNameRef">No documentation.</param>
            <param name="definesRef">No documentation.</param>
            <param name="includeRef">No documentation.</param>
            <param name="rofileRef">No documentation.</param>
            <param name="hLSLFlags">No documentation.</param>
            <param name="fXFlags">No documentation.</param>
            <param name="deviceRef">No documentation.</param>
            <param name="umpRef">No documentation.</param>
            <param name="effectPoolRef">No documentation.</param>
            <param name="errorsRef">No documentation.</param>
            <param name="hResultRef">No documentation.</param>
            <returns>No documentation.</returns>
            <unmanaged>HRESULT D3DX10CreateEffectPoolFromResourceW([None] void* hModule,[None] const wchar_t* pResourceName,[None] const wchar_t* pSrcFileName,[In, Buffer, Optional] const D3D10_SHADER_MACRO* pDefines,[None] ID3D10Include* pInclude,[None] const char* pProfile,[None] int HLSLFlags,[None] int FXFlags,[None] ID3D10Device* pDevice,[None] ID3DX10ThreadPump* pPump,[None] ID3D10EffectPool** ppEffectPool,[None] ID3D10Blob** ppErrors,[None] HRESULT* pHResult)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D10.FontPitchAndFamily">
            <summary>
            Defines pitch and family settings for fonts.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPitchAndFamily.Decorative">
            <summary>
            Use the Decorative family.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPitchAndFamily.Default">
            <summary>
            Default pitch.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPitchAndFamily.DontCare">
            <summary>
            The font family doesn't matter.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPitchAndFamily.Fixed">
            <summary>
            Fixed pitch.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPitchAndFamily.Modern">
            <summary>
            Use the Modern family.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPitchAndFamily.Mono">
            <summary>
            Mono pitch.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPitchAndFamily.Roman">
            <summary>
            Use the Roman family.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPitchAndFamily.Script">
            <summary>
            Use the Script family.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPitchAndFamily.Swiss">
            <summary>
            Use the Swiss family.
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontPitchAndFamily.Variable">
            <summary>
            Variable pitch.
            </summary>
        </member>
        <member name="T:SharpDX.Direct3D10.FontQuality">
            <summary>
            Specifies quality options for font rendering.
            </summary>
            <unmanaged>QUALITY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D10.FontQuality.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontQuality.Draft">
            <summary>
            Draft
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontQuality.Proof">
            <summary>
            Proof
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontQuality.NonAntialiased">
            <summary>
            Non antialiased
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontQuality.Antialiased">
            <summary>
            Antialiased
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontQuality.ClearType">
            <summary>
            ClearType
            </summary>
        </member>
        <member name="F:SharpDX.Direct3D10.FontQuality.ClearTypeNatural">
            <summary>
            ClearTypeNatural
            </summary>
        </member>
    </members>
</doc>
